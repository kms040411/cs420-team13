
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftLESSGREATERleftPLUSMINUSleftMULTIPLYDIVIDECOMMA DIVIDE DOUBLEPLUS ELSE EQ FLOAT FLOAT_VAL FOR GREATER ID IF INT INT_VAL LBRACE LESS LPAREN MINUS MULTIPLY PLUS PRINTF PTR_AMP RBRACE RETURN RPAREN SEMI SQ_LBRACKET SQ_RBRACKET STRING VOID WHILEprogram : function program\n\t\t\t   | functionfunction : type id variable_declaration blocktype : INT\n\t\t\t| FLOATid : IDvariable_declaration : LPAREN declarations RPARENdeclarations : type id_ptr_or_array COMMA declarations\n\t\t\t\t\t| type id_ptr_or_array\n\t\t\t\t\t| VOIDid_ptr_or_array : id\n\t\t\t\t\t   | id array_decs\n\t\t\t\t\t   | ptrs idarray_decs : SQ_LBRACKET expression SQ_RBRACKET array_decs\n\t\t\t\t  | SQ_LBRACKET expression SQ_RBRACKETptrs : MULTIPLY ptrs\n\t\t    | MULTIPLYblock : LBRACE statements RBRACEstatements : semi_statement\n\t\t\t\t  | non_semi_statement\n\t\t\t      | semi_statement SEMI statements\n\t\t\t      | non_semi_statement statements\n\t\t\t      | emptysemi_statement : var_declaration\n\t\t\t\t\t  | var_assignment\n\t\t\t\t\t  | function_app\n\t\t\t\t\t  | expression\n\t\t\t\t\t  | return_exprnon_semi_statement : conditional\n\t\t\t\t\t\t  | for\n\t\t\t\t\t\t  | whileconditional : if elif_elseif : IF LPAREN expression RPAREN blockelif_else : ELSE IF LPAREN expression RPAREN block elif_else\n\t\t\t\t | ELSE block\n\t\t\t\t | emptyfor : FOR LPAREN loop_init_or_empty SEMI semi_statement_or_empty SEMI semi_statement_or_empty RPAREN blockloop_init_or_empty : loop_init\n\t\t\t\t\t\t  | expression\n\t\t\t\t\t\t  | emptysemi_statement_or_empty : semi_statement\n\t\t\t\t\t\t\t   | expression\n\t\t\t\t\t\t       | emptyloop_init : type var_assignment\n\t\t\t\t | semi_statementwhile : WHILE LPAREN expression RPAREN blockvar_declaration : type var_and_assignvar_assignment : id_ptr_or_array EQ expression\n\t\t\t\t\t  | id_ptr_or_array EQ function_appvar_and_assign : var_assignment COMMA var_and_assign\n\t\t\t\t\t  | var_assignment\n\t\t\t\t\t  | id_ptr_or_array COMMA var_and_assign\n\t\t\t\t\t  | id_ptr_or_arrayreturn_expr : RETURN expression\n\t\t\t\t   | RETURNfunction_app : PRINTF LPAREN STRING print_formats RPAREN\n\t\t\t\t\t| ID LPAREN arguments RPARENprint_formats : COMMA expression print_formats\n\t\t\t\t\t | expression\n\t\t\t\t\t | emptyarguments : expression COMMA arguments\n\t\t\t\t | expression\n\t\t\t\t | emptyempty :expression : expression PLUS expression\n\t\t\t\t  | expression MINUS expression\n\t\t\t \t  | expression MULTIPLY expression\n\t\t\t  \t  | expression DIVIDE expression\n\t\t\t  \t  | expression LESS expression\n\t\t\t  \t  | expression GREATER expression\n\t\t  \t\t  | LPAREN expression RPAREN\n\t\t  \t\t  | MINUS expression\n\t\t  \t\t  | id_ptr_or_array DOUBLEPLUS\n\t\t  \t\t  | DOUBLEPLUS id_ptr_or_array\n\t\t  \t\t  | id_ptr_or_array\n\t\t  \t\t  | function_app\n\t\t  \t\t  | var_assignment\n\t\t\t  \t  | INT_VAL\n\t\t\t  \t  | FLOAT_VAL'
    
_lr_action_items = {'INT':([0,2,10,11,12,18,25,26,27,39,47,48,71,73,74,80,98,120,134,136,141,144,146,148,],[4,4,4,-3,4,4,-29,-30,-31,-64,-18,4,-32,-36,4,4,-35,4,-46,-33,4,-64,-34,-37,]),'FLOAT':([0,2,10,11,12,18,25,26,27,39,47,48,71,73,74,80,98,120,134,136,141,144,146,148,],[5,5,5,-3,5,5,-29,-30,-31,-64,-18,5,-32,-36,5,5,-35,5,-46,-33,5,-64,-34,-37,]),'$end':([1,2,6,11,47,],[0,-2,-1,-3,-18,]),'ID':([3,4,5,8,12,14,18,25,26,27,28,31,32,33,34,35,36,37,38,39,42,43,47,48,50,51,52,53,54,55,59,60,63,64,65,66,67,68,69,71,73,74,75,76,77,78,79,82,83,84,85,86,87,88,89,90,91,92,93,98,103,114,117,118,119,120,124,126,127,134,135,136,138,139,141,142,143,144,146,148,],[8,-4,-5,-6,32,8,32,-29,-30,-31,8,32,-6,32,-17,8,-78,-79,32,-64,-11,8,-18,32,32,32,32,32,32,32,32,-73,-75,-76,-77,32,-72,-16,-74,-32,-36,32,32,-12,32,-13,32,-65,-66,-67,-68,-69,-70,8,8,-48,-49,32,-71,-35,8,32,-57,32,32,32,-15,-56,32,-46,-14,-33,32,-17,32,-66,-16,-64,-34,-37,]),'MULTIPLY':([4,5,8,12,14,18,21,22,23,25,26,27,28,29,31,32,33,34,35,36,37,38,39,42,47,48,50,51,52,53,54,55,59,60,62,63,64,65,66,67,69,70,71,73,74,75,76,77,78,79,82,83,84,85,86,87,88,89,90,91,92,93,95,98,101,103,104,106,107,108,109,114,115,117,118,119,120,124,126,127,129,132,134,135,136,138,139,141,142,144,146,148,],[-4,-5,-6,34,34,34,-77,-76,52,-29,-30,-31,34,-75,34,-6,34,34,34,-78,-79,34,-64,-11,-18,34,34,34,34,34,34,34,34,-73,52,-75,-76,-77,34,52,-74,52,-32,-36,34,34,-12,34,-13,34,52,52,-67,-68,52,52,34,34,52,-49,34,-71,52,-35,52,34,-77,-76,52,52,52,34,52,-57,34,34,34,-15,-56,139,52,52,-46,-14,-33,34,34,34,52,-64,-34,-37,]),'LPAREN':([7,8,12,18,25,26,27,30,31,32,33,36,37,38,39,40,41,42,44,47,48,50,51,52,53,54,55,59,60,63,64,65,66,67,69,71,73,74,75,76,77,78,79,82,83,84,85,86,87,90,91,92,93,97,98,114,117,118,119,120,124,126,127,134,135,136,138,139,141,142,144,146,148,],[10,-6,31,31,-29,-30,-31,61,31,66,31,-78,-79,31,-64,74,75,-11,79,-18,31,31,31,31,31,31,31,31,-73,-75,-76,-77,31,-72,-74,-32,-36,31,31,-12,31,-13,31,-65,-66,-67,-68,-69,-70,-48,-49,31,-71,119,-35,31,-57,31,31,31,-15,-56,31,-46,-14,-33,31,31,31,-66,-64,-34,-37,]),'SQ_LBRACKET':([8,32,42,124,],[-6,-6,77,77,]),'COMMA':([8,32,36,37,42,46,57,58,60,63,64,65,67,69,76,78,82,83,84,85,86,87,90,91,92,93,95,117,121,122,124,126,127,135,142,],[-6,-6,-78,-79,-11,80,88,89,-73,-75,-76,-77,-72,-74,-12,-13,-65,-66,-67,-68,-69,-70,-48,-49,114,-71,118,-57,88,89,-15,-56,114,-14,-66,]),'RPAREN':([8,13,15,20,21,22,24,32,36,37,38,42,46,56,57,58,60,62,63,64,65,66,67,69,70,76,78,82,83,84,85,86,87,90,91,92,93,94,95,96,107,109,110,111,112,113,115,116,117,118,124,126,127,128,129,131,132,133,135,137,141,142,145,],[-6,45,-10,-24,-25,-26,-28,-6,-78,-79,-55,-11,-9,-47,-51,-53,-73,93,-75,-76,-77,-64,-72,-74,-54,-12,-13,-65,-66,-67,-68,-69,-70,-48,-49,-64,-71,117,-62,-63,123,125,-8,-50,-52,126,-59,-60,-57,-64,-15,-56,-64,-61,140,-41,-27,-43,-14,-58,-64,-66,147,]),'EQ':([8,29,32,42,58,63,76,78,122,124,135,],[-6,59,-6,-11,59,59,-12,-13,59,-15,-14,]),'SEMI':([8,17,20,21,22,23,24,29,32,36,37,38,42,56,57,58,60,63,64,65,67,69,70,74,76,78,82,83,84,85,86,87,90,91,93,99,100,101,102,104,105,106,111,112,117,120,121,122,124,126,130,131,132,133,135,],[-6,48,-24,-25,-26,-27,-28,-75,-6,-78,-79,-55,-11,-47,-51,-53,-73,-75,-76,-77,-72,-74,-54,-64,-12,-13,-65,-66,-67,-68,-69,-70,-48,-49,-71,120,-38,-27,-40,-25,-45,-26,-50,-52,-57,-64,-44,-53,-15,-56,141,-41,-27,-43,-14,]),'RBRACE':([8,12,16,17,18,19,20,21,22,23,24,25,26,27,29,32,36,37,38,39,42,47,48,49,56,57,58,60,63,64,65,67,69,70,71,73,76,78,81,82,83,84,85,86,87,90,91,93,98,111,112,117,124,126,134,135,136,144,146,148,],[-6,-64,47,-19,-20,-23,-24,-25,-26,-27,-28,-29,-30,-31,-75,-6,-78,-79,-55,-64,-11,-18,-64,-22,-47,-51,-53,-73,-75,-76,-77,-72,-74,-54,-32,-36,-12,-13,-21,-65,-66,-67,-68,-69,-70,-48,-49,-71,-35,-50,-52,-57,-15,-56,-46,-14,-33,-64,-34,-37,]),'PLUS':([8,21,22,23,29,32,36,37,42,60,62,63,64,65,67,69,70,76,78,82,83,84,85,86,87,90,91,93,95,101,104,106,107,108,109,115,117,124,126,127,129,132,135,142,],[-6,-77,-76,50,-75,-6,-78,-79,-11,-73,50,-75,-76,-77,-72,-74,50,-12,-13,-65,-66,-67,-68,50,50,50,-49,-71,50,50,-77,-76,50,50,50,50,-57,-15,-56,50,50,50,-14,-66,]),'MINUS':([8,12,18,21,22,23,25,26,27,29,31,32,33,36,37,38,39,42,47,48,50,51,52,53,54,55,59,60,62,63,64,65,66,67,69,70,71,73,74,75,76,77,78,79,82,83,84,85,86,87,90,91,92,93,95,98,101,104,106,107,108,109,114,115,117,118,119,120,124,126,127,129,132,134,135,136,138,139,141,142,144,146,148,],[-6,33,33,-77,-76,51,-29,-30,-31,-75,33,-6,33,-78,-79,33,-64,-11,-18,33,33,33,33,33,33,33,33,-73,51,-75,-76,-77,33,-72,-74,51,-32,-36,33,33,-12,33,-13,33,-65,-66,-67,-68,51,51,51,-49,33,-71,51,-35,51,-77,-76,51,51,51,33,51,-57,33,33,33,-15,-56,138,51,51,-46,-14,-33,33,33,33,-66,-64,-34,-37,]),'DIVIDE':([8,21,22,23,29,32,36,37,42,60,62,63,64,65,67,69,70,76,78,82,83,84,85,86,87,90,91,93,95,101,104,106,107,108,109,115,117,124,126,127,129,132,135,142,],[-6,-77,-76,53,-75,-6,-78,-79,-11,-73,53,-75,-76,-77,53,-74,53,-12,-13,53,53,-67,-68,53,53,53,-49,-71,53,53,-77,-76,53,53,53,53,-57,-15,-56,53,53,53,-14,53,]),'LESS':([8,21,22,23,29,32,36,37,42,60,62,63,64,65,67,69,70,76,78,82,83,84,85,86,87,90,91,93,95,101,104,106,107,108,109,115,117,124,126,127,129,132,135,142,],[-6,-77,-76,54,-75,-6,-78,-79,-11,-73,54,-75,-76,-77,-72,-74,54,-12,-13,-65,-66,-67,-68,-69,-70,54,-49,-71,54,54,-77,-76,54,54,54,54,-57,-15,-56,54,54,54,-14,-66,]),'GREATER':([8,21,22,23,29,32,36,37,42,60,62,63,64,65,67,69,70,76,78,82,83,84,85,86,87,90,91,93,95,101,104,106,107,108,109,115,117,124,126,127,129,132,135,142,],[-6,-77,-76,55,-75,-6,-78,-79,-11,-73,55,-75,-76,-77,-72,-74,55,-12,-13,-65,-66,-67,-68,-69,-70,55,-49,-71,55,55,-77,-76,55,55,55,55,-57,-15,-56,55,55,55,-14,-66,]),'SQ_RBRACKET':([8,32,36,37,42,60,63,64,65,67,69,76,78,82,83,84,85,86,87,90,91,93,108,117,124,126,135,],[-6,-6,-78,-79,-11,-73,-75,-76,-77,-72,-74,-12,-13,-65,-66,-67,-68,-69,-70,-48,-49,-71,124,-57,-15,-56,-14,]),'DOUBLEPLUS':([8,12,18,25,26,27,29,31,32,33,36,37,38,39,42,47,48,50,51,52,53,54,55,59,60,63,64,65,66,67,69,71,73,74,75,76,77,78,79,82,83,84,85,86,87,90,91,92,93,98,114,117,118,119,120,124,126,127,134,135,136,138,139,141,142,144,146,148,],[-6,35,35,-29,-30,-31,60,35,-6,35,-78,-79,35,-64,-11,-18,35,35,35,35,35,35,35,35,-73,60,-76,-77,35,-72,-74,-32,-36,35,35,-12,35,-13,35,-65,-66,-67,-68,-69,-70,-48,-49,35,-71,-35,35,-57,35,35,35,-15,-56,35,-46,-14,-33,35,35,35,-66,-64,-34,-37,]),'INT_VAL':([8,12,18,25,26,27,31,32,33,36,37,38,39,42,47,48,50,51,52,53,54,55,59,60,63,64,65,66,67,69,71,73,74,75,76,77,78,79,82,83,84,85,86,87,90,91,92,93,98,114,117,118,119,120,124,126,127,134,135,136,138,139,141,142,144,146,148,],[-6,36,36,-29,-30,-31,36,-6,36,-78,-79,36,-64,-11,-18,36,36,36,36,36,36,36,36,-73,-75,-76,-77,36,-72,-74,-32,-36,36,36,-12,36,-13,36,-65,-66,-67,-68,-69,-70,-48,-49,36,-71,-35,36,-57,36,36,36,-15,-56,36,-46,-14,-33,36,36,36,-66,-64,-34,-37,]),'FLOAT_VAL':([8,12,18,25,26,27,31,32,33,36,37,38,39,42,47,48,50,51,52,53,54,55,59,60,63,64,65,66,67,69,71,73,74,75,76,77,78,79,82,83,84,85,86,87,90,91,92,93,98,114,117,118,119,120,124,126,127,134,135,136,138,139,141,142,144,146,148,],[-6,37,37,-29,-30,-31,37,-6,37,-78,-79,37,-64,-11,-18,37,37,37,37,37,37,37,37,-73,-75,-76,-77,37,-72,-74,-32,-36,37,37,-12,37,-13,37,-65,-66,-67,-68,-69,-70,-48,-49,37,-71,-35,37,-57,37,37,37,-15,-56,37,-46,-14,-33,37,37,37,-66,-64,-34,-37,]),'PRINTF':([8,12,18,25,26,27,31,32,33,36,37,38,39,42,47,48,50,51,52,53,54,55,59,60,63,64,65,66,67,69,71,73,74,75,76,77,78,79,82,83,84,85,86,87,90,91,92,93,98,114,117,118,119,120,124,126,127,134,135,136,138,139,141,142,144,146,148,],[-6,30,30,-29,-30,-31,30,-6,30,-78,-79,30,-64,-11,-18,30,30,30,30,30,30,30,30,-73,-75,-76,-77,30,-72,-74,-32,-36,30,30,-12,30,-13,30,-65,-66,-67,-68,-69,-70,-48,-49,30,-71,-35,30,-57,30,30,30,-15,-56,30,-46,-14,-33,30,30,30,-66,-64,-34,-37,]),'LBRACE':([9,45,72,123,125,140,147,],[12,-7,12,12,12,12,12,]),'VOID':([10,80,],[15,15,]),'RETURN':([12,18,25,26,27,39,47,48,71,73,74,98,120,134,136,141,144,146,148,],[38,38,-29,-30,-31,-64,-18,38,-32,-36,38,-35,38,-46,-33,38,-64,-34,-37,]),'FOR':([12,18,25,26,27,39,47,48,71,73,98,134,136,144,146,148,],[40,40,-29,-30,-31,-64,-18,40,-32,-36,-35,-46,-33,-64,-34,-37,]),'WHILE':([12,18,25,26,27,39,47,48,71,73,98,134,136,144,146,148,],[41,41,-29,-30,-31,-64,-18,41,-32,-36,-35,-46,-33,-64,-34,-37,]),'IF':([12,18,25,26,27,39,47,48,71,72,73,98,134,136,144,146,148,],[44,44,-29,-30,-31,-64,-18,44,-32,97,-36,-35,-46,-33,-64,-34,-37,]),'ELSE':([39,47,136,144,],[72,-18,-33,72,]),'STRING':([61,],[92,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,2,],[1,6,]),'function':([0,2,],[2,2,]),'type':([0,2,10,12,18,48,74,80,120,141,],[3,3,14,28,28,28,103,14,28,28,]),'id':([3,12,14,18,28,31,33,35,38,43,48,50,51,52,53,54,55,59,66,74,75,77,79,88,89,92,103,114,118,119,120,127,138,139,141,143,],[7,42,42,42,42,42,42,42,42,78,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,78,]),'variable_declaration':([7,],[9,]),'block':([9,72,123,125,140,147,],[11,98,134,136,144,148,]),'declarations':([10,80,],[13,110,]),'statements':([12,18,48,],[16,49,81,]),'semi_statement':([12,18,48,74,120,141,],[17,17,17,105,131,131,]),'non_semi_statement':([12,18,48,],[18,18,18,]),'empty':([12,18,39,48,66,74,92,118,120,127,141,144,],[19,19,73,19,96,102,116,96,133,116,133,73,]),'var_declaration':([12,18,48,74,120,141,],[20,20,20,20,20,20,]),'var_assignment':([12,18,28,31,33,38,48,50,51,52,53,54,55,59,66,74,75,77,79,88,89,92,103,114,118,119,120,127,138,139,141,],[21,21,57,65,65,65,21,65,65,65,65,65,65,65,65,104,65,65,65,57,57,65,121,65,65,65,21,65,65,65,21,]),'function_app':([12,18,31,33,38,48,50,51,52,53,54,55,59,66,74,75,77,79,92,114,118,119,120,127,138,139,141,],[22,22,64,64,64,22,64,64,64,64,64,64,91,64,106,64,64,64,64,64,64,64,22,64,64,64,22,]),'expression':([12,18,31,33,38,48,50,51,52,53,54,55,59,66,74,75,77,79,92,114,118,119,120,127,138,139,141,],[23,23,62,67,70,23,82,83,84,85,86,87,90,95,101,107,108,109,115,127,95,129,132,115,142,84,132,]),'return_expr':([12,18,48,74,120,141,],[24,24,24,24,24,24,]),'conditional':([12,18,48,],[25,25,25,]),'for':([12,18,48,],[26,26,26,]),'while':([12,18,48,],[27,27,27,]),'id_ptr_or_array':([12,14,18,28,31,33,35,38,48,50,51,52,53,54,55,59,66,74,75,77,79,88,89,92,103,114,118,119,120,127,138,139,141,],[29,46,29,58,63,63,69,63,29,63,63,63,63,63,63,63,63,63,63,63,63,58,58,63,122,63,63,63,63,63,63,63,63,]),'if':([12,18,48,],[39,39,39,]),'ptrs':([12,14,18,28,31,33,34,35,38,48,50,51,52,53,54,55,59,66,74,75,77,79,88,89,92,103,114,118,119,120,127,138,139,141,],[43,43,43,43,43,43,68,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,143,43,]),'var_and_assign':([28,88,89,103,],[56,111,112,56,]),'elif_else':([39,144,],[71,146,]),'array_decs':([42,124,],[76,135,]),'arguments':([66,118,],[94,128,]),'loop_init_or_empty':([74,],[99,]),'loop_init':([74,],[100,]),'print_formats':([92,127,],[113,137,]),'semi_statement_or_empty':([120,141,],[130,145,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> function program','program',2,'p_program','lex_yacc.py',200),
  ('program -> function','program',1,'p_program','lex_yacc.py',201),
  ('function -> type id variable_declaration block','function',4,'p_function','lex_yacc.py',214),
  ('type -> INT','type',1,'p_type','lex_yacc.py',224),
  ('type -> FLOAT','type',1,'p_type','lex_yacc.py',225),
  ('id -> ID','id',1,'p_id','lex_yacc.py',235),
  ('variable_declaration -> LPAREN declarations RPAREN','variable_declaration',3,'p_varaible_declaration','lex_yacc.py',245),
  ('declarations -> type id_ptr_or_array COMMA declarations','declarations',4,'p_declarations','lex_yacc.py',255),
  ('declarations -> type id_ptr_or_array','declarations',2,'p_declarations','lex_yacc.py',256),
  ('declarations -> VOID','declarations',1,'p_declarations','lex_yacc.py',257),
  ('id_ptr_or_array -> id','id_ptr_or_array',1,'p_id_ptr_or_array','lex_yacc.py',282),
  ('id_ptr_or_array -> id array_decs','id_ptr_or_array',2,'p_id_ptr_or_array','lex_yacc.py',283),
  ('id_ptr_or_array -> ptrs id','id_ptr_or_array',2,'p_id_ptr_or_array','lex_yacc.py',284),
  ('array_decs -> SQ_LBRACKET expression SQ_RBRACKET array_decs','array_decs',4,'p_array_decs','lex_yacc.py',297),
  ('array_decs -> SQ_LBRACKET expression SQ_RBRACKET','array_decs',3,'p_array_decs','lex_yacc.py',298),
  ('ptrs -> MULTIPLY ptrs','ptrs',2,'p_ptrs','lex_yacc.py',308),
  ('ptrs -> MULTIPLY','ptrs',1,'p_ptrs','lex_yacc.py',309),
  ('block -> LBRACE statements RBRACE','block',3,'p_block','lex_yacc.py',319),
  ('statements -> semi_statement','statements',1,'p_statements','lex_yacc.py',329),
  ('statements -> non_semi_statement','statements',1,'p_statements','lex_yacc.py',330),
  ('statements -> semi_statement SEMI statements','statements',3,'p_statements','lex_yacc.py',331),
  ('statements -> non_semi_statement statements','statements',2,'p_statements','lex_yacc.py',332),
  ('statements -> empty','statements',1,'p_statements','lex_yacc.py',333),
  ('semi_statement -> var_declaration','semi_statement',1,'p_semi_statement','lex_yacc.py',357),
  ('semi_statement -> var_assignment','semi_statement',1,'p_semi_statement','lex_yacc.py',358),
  ('semi_statement -> function_app','semi_statement',1,'p_semi_statement','lex_yacc.py',359),
  ('semi_statement -> expression','semi_statement',1,'p_semi_statement','lex_yacc.py',360),
  ('semi_statement -> return_expr','semi_statement',1,'p_semi_statement','lex_yacc.py',361),
  ('non_semi_statement -> conditional','non_semi_statement',1,'p_non_semi_statement','lex_yacc.py',371),
  ('non_semi_statement -> for','non_semi_statement',1,'p_non_semi_statement','lex_yacc.py',372),
  ('non_semi_statement -> while','non_semi_statement',1,'p_non_semi_statement','lex_yacc.py',373),
  ('conditional -> if elif_else','conditional',2,'p_conditional','lex_yacc.py',383),
  ('if -> IF LPAREN expression RPAREN block','if',5,'p_if','lex_yacc.py',395),
  ('elif_else -> ELSE IF LPAREN expression RPAREN block elif_else','elif_else',7,'p_elif_else','lex_yacc.py',404),
  ('elif_else -> ELSE block','elif_else',2,'p_elif_else','lex_yacc.py',405),
  ('elif_else -> empty','elif_else',1,'p_elif_else','lex_yacc.py',406),
  ('for -> FOR LPAREN loop_init_or_empty SEMI semi_statement_or_empty SEMI semi_statement_or_empty RPAREN block','for',9,'p_for','lex_yacc.py',424),
  ('loop_init_or_empty -> loop_init','loop_init_or_empty',1,'p_loop_init_or_empty','lex_yacc.py',434),
  ('loop_init_or_empty -> expression','loop_init_or_empty',1,'p_loop_init_or_empty','lex_yacc.py',435),
  ('loop_init_or_empty -> empty','loop_init_or_empty',1,'p_loop_init_or_empty','lex_yacc.py',436),
  ('semi_statement_or_empty -> semi_statement','semi_statement_or_empty',1,'p_semi_statement_or_empty','lex_yacc.py',446),
  ('semi_statement_or_empty -> expression','semi_statement_or_empty',1,'p_semi_statement_or_empty','lex_yacc.py',447),
  ('semi_statement_or_empty -> empty','semi_statement_or_empty',1,'p_semi_statement_or_empty','lex_yacc.py',448),
  ('loop_init -> type var_assignment','loop_init',2,'p_loop_init','lex_yacc.py',458),
  ('loop_init -> semi_statement','loop_init',1,'p_loop_init','lex_yacc.py',459),
  ('while -> WHILE LPAREN expression RPAREN block','while',5,'p_while','lex_yacc.py',472),
  ('var_declaration -> type var_and_assign','var_declaration',2,'p_var_declaration','lex_yacc.py',482),
  ('var_assignment -> id_ptr_or_array EQ expression','var_assignment',3,'p_var_assignment','lex_yacc.py',522),
  ('var_assignment -> id_ptr_or_array EQ function_app','var_assignment',3,'p_var_assignment','lex_yacc.py',523),
  ('var_and_assign -> var_assignment COMMA var_and_assign','var_and_assign',3,'p_var_and_assign','lex_yacc.py',533),
  ('var_and_assign -> var_assignment','var_and_assign',1,'p_var_and_assign','lex_yacc.py',534),
  ('var_and_assign -> id_ptr_or_array COMMA var_and_assign','var_and_assign',3,'p_var_and_assign','lex_yacc.py',535),
  ('var_and_assign -> id_ptr_or_array','var_and_assign',1,'p_var_and_assign','lex_yacc.py',536),
  ('return_expr -> RETURN expression','return_expr',2,'p_return_expr','lex_yacc.py',549),
  ('return_expr -> RETURN','return_expr',1,'p_return_expr','lex_yacc.py',550),
  ('function_app -> PRINTF LPAREN STRING print_formats RPAREN','function_app',5,'p_function_app','lex_yacc.py',557),
  ('function_app -> ID LPAREN arguments RPAREN','function_app',4,'p_function_app','lex_yacc.py',558),
  ('print_formats -> COMMA expression print_formats','print_formats',3,'p_print_formats','lex_yacc.py',577),
  ('print_formats -> expression','print_formats',1,'p_print_formats','lex_yacc.py',578),
  ('print_formats -> empty','print_formats',1,'p_print_formats','lex_yacc.py',579),
  ('arguments -> expression COMMA arguments','arguments',3,'p_arguments','lex_yacc.py',598),
  ('arguments -> expression','arguments',1,'p_arguments','lex_yacc.py',599),
  ('arguments -> empty','arguments',1,'p_arguments','lex_yacc.py',600),
  ('empty -> <empty>','empty',0,'p_empty','lex_yacc.py',616),
  ('expression -> expression PLUS expression','expression',3,'p_expression','lex_yacc.py',626),
  ('expression -> expression MINUS expression','expression',3,'p_expression','lex_yacc.py',627),
  ('expression -> expression MULTIPLY expression','expression',3,'p_expression','lex_yacc.py',628),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','lex_yacc.py',629),
  ('expression -> expression LESS expression','expression',3,'p_expression','lex_yacc.py',630),
  ('expression -> expression GREATER expression','expression',3,'p_expression','lex_yacc.py',631),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression','lex_yacc.py',632),
  ('expression -> MINUS expression','expression',2,'p_expression','lex_yacc.py',633),
  ('expression -> id_ptr_or_array DOUBLEPLUS','expression',2,'p_expression','lex_yacc.py',634),
  ('expression -> DOUBLEPLUS id_ptr_or_array','expression',2,'p_expression','lex_yacc.py',635),
  ('expression -> id_ptr_or_array','expression',1,'p_expression','lex_yacc.py',636),
  ('expression -> function_app','expression',1,'p_expression','lex_yacc.py',637),
  ('expression -> var_assignment','expression',1,'p_expression','lex_yacc.py',638),
  ('expression -> INT_VAL','expression',1,'p_expression','lex_yacc.py',639),
  ('expression -> FLOAT_VAL','expression',1,'p_expression','lex_yacc.py',640),
]
