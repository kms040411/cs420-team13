
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftLESSGREATERleftPLUSMINUSleftMULTIPLYDIVIDECOMMA DIVIDE DOUBLEPLUS ELSE EQ FLOAT FLOAT_VAL FOR GREATER ID IF INT INT_VAL LBRACE LESS LPAREN MINUS MULTIPLY PLUS PRINTF PTR_AMP RBRACE RETURN RPAREN SEMI SQ_LBRACKET SQ_RBRACKET STRING VOID WHILEprogram : function program\n\t\t\t   | functionfunction : type id variable_declaration blocktype : INT\n\t\t\t| FLOATid : IDvariable_declaration : LPAREN declarations RPARENdeclarations : type id_ptr_or_array COMMA declarations\n\t\t\t\t\t| type id_ptr_or_array\n\t\t\t\t\t| VOIDid_ptr_or_array : id\n\t\t\t\t\t   | id array_decs\n\t\t\t\t\t   | ptrs idarray_decs : SQ_LBRACKET expression SQ_RBRACKET array_decs\n\t\t\t\t  | SQ_LBRACKET expression SQ_RBRACKETptrs : MULTIPLY ptrs\n\t\t    | MULTIPLYblock : LBRACE statements RBRACEstatements : semi_statement\n\t\t\t\t  | non_semi_statement\n\t\t\t      | semi_statement SEMI statements\n\t\t\t      | non_semi_statement statements\n\t\t\t      | emptysemi_statement : var_declaration\n\t\t\t\t\t  | var_assignment\n\t\t\t\t\t  | function_app\n\t\t\t\t\t  | return_exprnon_semi_statement : conditional\n\t\t\t\t\t\t  | for\n\t\t\t\t\t\t  | whileconditional : if elif_elseif : IF LPAREN expression RPAREN blockelif_else : elif elseelif : ELSE IF LPAREN expression RPAREN block elif\n\t\t\t| emptyelse : ELSE block\n\t\t\t| emptyfor : FOR LPAREN loop_init_or_empty SEMI semi_statement_or_empty SEMI semi_statement_or_empty RPAREN blockloop_init_or_empty : loop_init\n\t\t\t\t\t\t  | expression\n\t\t\t\t\t\t  | emptysemi_statement_or_empty : semi_statement\n\t\t\t\t\t\t\t   | expression\n\t\t\t\t\t\t       | emptyloop_init : type var_assignment\n\t\t\t\t | semi_statementwhile : WHILE LPAREN expression RPAREN blockvar_declaration : type var_and_assignvar_assignment : id_ptr_or_array EQ expression\n\t\t\t\t\t  | id_ptr_or_array EQ function_appvar_and_assign : var_assignment COMMA var_and_assign\n\t\t\t\t\t  | var_assignment\n\t\t\t\t\t  | id_ptr_or_array COMMA var_and_assign\n\t\t\t\t\t  | id_ptr_or_arrayreturn_expr : RETURN expressionfunction_app : PRINTF LPAREN STRING print_formats RPAREN\n\t\t\t\t\t| ID LPAREN arguments RPARENprint_formats : COMMA expression print_formats\n\t\t\t\t\t | expression\n\t\t\t\t\t | emptyarguments : expression COMMA arguments\n\t\t\t\t | expression\n\t\t\t\t | emptyempty :expression : expression PLUS expression\n\t\t\t\t  | expression MINUS expression\n\t\t\t \t  | expression MULTIPLY expression\n\t\t\t  \t  | expression DIVIDE expression\n\t\t\t  \t  | expression LESS expression\n\t\t\t  \t  | expression GREATER expression\n\t\t  \t\t  | LPAREN expression RPAREN\n\t\t  \t\t  | MINUS expression\n\t\t  \t\t  | expression DOUBLEPLUS\n\t\t  \t\t  | id_ptr_or_array\n\t\t\t  \t  | INT_VAL\n\t\t\t  \t  | FLOAT_VAL'
    
_lr_action_items = {'INT':([0,2,10,11,12,18,24,25,26,32,41,42,56,57,59,60,67,86,88,116,118,132,134,139,142,144,146,],[4,4,4,-3,4,4,-28,-29,-30,-64,-18,4,-31,-64,-35,4,4,-33,-37,-36,4,-47,-32,4,-64,-34,-38,]),'FLOAT':([0,2,10,11,12,18,24,25,26,32,41,42,56,57,59,60,67,86,88,116,118,132,134,139,142,144,146,],[5,5,5,-3,5,5,-28,-29,-30,-64,-18,5,-31,-64,-35,5,5,-33,-37,-36,5,-47,-32,5,-64,-34,-38,]),'$end':([1,2,6,11,41,],[0,-2,-1,-3,-18,]),'ID':([3,4,5,8,12,14,18,24,25,26,27,31,32,35,36,38,41,42,47,49,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,69,70,73,77,78,79,80,81,82,83,84,86,88,94,104,108,109,110,111,112,113,114,115,116,117,118,122,125,132,133,134,136,137,139,140,141,142,144,146,],[8,-4,-5,-6,30,8,30,-28,-29,-30,8,8,-64,-11,8,-17,-18,30,30,8,8,8,-74,-75,-76,-31,-64,-35,30,8,-12,8,-13,8,-16,8,8,8,8,8,8,8,8,8,-73,-72,-33,-37,8,8,8,-65,-66,-67,-68,-69,-70,-71,-36,8,30,-15,8,-47,-14,-32,8,-17,30,-66,-16,-64,-34,-38,]),'MULTIPLY':([4,5,8,12,14,18,24,25,26,27,30,31,32,35,38,41,42,47,49,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,69,70,71,73,75,77,78,79,80,81,82,83,84,85,86,88,92,94,96,97,98,99,104,105,108,109,110,111,112,113,114,115,116,117,118,122,125,127,130,132,133,134,136,137,139,140,142,144,146,],[-4,-5,-6,38,38,38,-28,-29,-30,38,-6,38,-64,-11,38,-18,38,38,38,79,38,38,-74,-75,-76,-31,-64,-35,38,38,-12,38,-13,38,38,38,79,38,79,38,38,38,38,38,38,-73,79,79,-33,-37,79,38,-74,79,79,79,38,79,38,79,79,-67,-68,79,79,-71,-36,38,38,-15,137,79,79,-47,-14,-32,38,38,38,79,-64,-34,-38,]),'LPAREN':([7,8,29,30,31,33,34,35,37,47,49,51,52,53,54,55,60,61,62,63,64,65,73,77,78,79,80,81,82,83,84,89,104,108,109,110,111,112,113,114,115,117,118,122,125,133,136,137,139,140,],[10,-6,48,49,52,60,61,-11,65,52,52,52,52,-74,-75,-76,52,52,-12,52,-13,52,52,52,52,52,52,52,52,-73,-72,117,52,52,-65,-66,-67,-68,-69,-70,-71,52,52,-15,52,-14,52,52,52,-66,]),'SQ_LBRACKET':([8,30,35,122,],[-6,-6,63,63,]),'COMMA':([8,30,35,40,45,46,53,54,55,62,64,71,72,73,75,83,84,107,109,110,111,112,113,114,115,119,120,122,124,125,133,140,],[-6,-6,-11,67,69,70,-74,-75,-76,-12,-13,-49,-50,104,108,-73,-72,-57,-65,-66,-67,-68,-69,-70,-71,69,70,-15,-56,104,-14,-66,]),'RPAREN':([8,13,15,20,21,22,23,30,35,40,44,45,46,49,50,53,54,55,62,64,71,72,73,74,75,76,83,84,85,96,97,99,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,122,124,125,126,127,129,130,131,133,135,139,140,143,],[-6,39,-10,-24,-25,-26,-27,-6,-11,-9,-48,-52,-54,-64,-55,-74,-75,-76,-12,-13,-49,-50,-64,107,-62,-63,-73,-72,115,-74,121,123,-8,-51,-53,124,-59,-60,-57,-64,-65,-66,-67,-68,-69,-70,-71,-15,-56,-64,-61,138,-42,-43,-44,-14,-58,-64,-66,145,]),'EQ':([8,28,30,35,46,62,64,96,120,122,133,],[-6,47,-6,-11,47,-12,-13,47,47,-15,-14,]),'SEMI':([8,17,20,21,22,23,30,35,44,45,46,50,53,54,55,60,62,64,71,72,83,84,90,91,92,93,95,96,101,102,107,109,110,111,112,113,114,115,118,119,120,122,124,128,129,130,131,133,],[-6,42,-24,-25,-26,-27,-6,-11,-48,-52,-54,-55,-74,-75,-76,-64,-12,-13,-49,-50,-73,-72,118,-39,-40,-41,-46,-74,-51,-53,-57,-65,-66,-67,-68,-69,-70,-71,-64,-45,-54,-15,-56,139,-42,-43,-44,-14,]),'RBRACE':([8,12,16,17,18,19,20,21,22,23,24,25,26,30,32,35,41,42,43,44,45,46,50,53,54,55,56,57,59,62,64,68,71,72,83,84,86,88,101,102,107,109,110,111,112,113,114,115,116,122,124,132,133,134,142,144,146,],[-6,-64,41,-19,-20,-23,-24,-25,-26,-27,-28,-29,-30,-6,-64,-11,-18,-64,-22,-48,-52,-54,-55,-74,-75,-76,-31,-64,-35,-12,-13,-21,-49,-50,-73,-72,-33,-37,-51,-53,-57,-65,-66,-67,-68,-69,-70,-71,-36,-15,-56,-47,-14,-32,-64,-34,-38,]),'PLUS':([8,30,35,50,53,54,55,62,64,71,75,83,84,85,92,96,97,98,99,105,109,110,111,112,113,114,115,122,125,127,130,133,140,],[-6,-6,-11,77,-74,-75,-76,-12,-13,77,77,-73,-72,77,77,-74,77,77,77,77,-65,-66,-67,-68,77,77,-71,-15,77,77,77,-14,-66,]),'MINUS':([8,30,31,35,47,49,50,51,52,53,54,55,60,61,62,63,64,65,71,73,75,77,78,79,80,81,82,83,84,85,92,96,97,98,99,104,105,108,109,110,111,112,113,114,115,117,118,122,125,127,130,133,136,137,139,140,],[-6,-6,51,-11,51,51,78,51,51,-74,-75,-76,51,51,-12,51,-13,51,78,51,78,51,51,51,51,51,51,-73,-72,78,78,-74,78,78,78,51,78,51,-65,-66,-67,-68,78,78,-71,51,51,-15,136,78,78,-14,51,51,51,-66,]),'DIVIDE':([8,30,35,50,53,54,55,62,64,71,75,83,84,85,92,96,97,98,99,105,109,110,111,112,113,114,115,122,125,127,130,133,140,],[-6,-6,-11,80,-74,-75,-76,-12,-13,80,80,-73,80,80,80,-74,80,80,80,80,80,80,-67,-68,80,80,-71,-15,80,80,80,-14,80,]),'LESS':([8,30,35,50,53,54,55,62,64,71,75,83,84,85,92,96,97,98,99,105,109,110,111,112,113,114,115,122,125,127,130,133,140,],[-6,-6,-11,81,-74,-75,-76,-12,-13,81,81,-73,-72,81,81,-74,81,81,81,81,-65,-66,-67,-68,-69,-70,-71,-15,81,81,81,-14,-66,]),'GREATER':([8,30,35,50,53,54,55,62,64,71,75,83,84,85,92,96,97,98,99,105,109,110,111,112,113,114,115,122,125,127,130,133,140,],[-6,-6,-11,82,-74,-75,-76,-12,-13,82,82,-73,-72,82,82,-74,82,82,82,82,-65,-66,-67,-68,-69,-70,-71,-15,82,82,82,-14,-66,]),'DOUBLEPLUS':([8,30,35,50,53,54,55,62,64,71,75,83,84,85,92,96,97,98,99,105,109,110,111,112,113,114,115,122,125,127,130,133,140,],[-6,-6,-11,83,-74,-75,-76,-12,-13,83,83,-73,-72,83,83,-74,83,83,83,83,-65,-66,-67,-68,-69,-70,-71,-15,83,83,83,-14,-66,]),'SQ_RBRACKET':([8,35,53,54,55,62,64,83,84,98,109,110,111,112,113,114,115,122,133,],[-6,-11,-74,-75,-76,-12,-13,-73,-72,122,-65,-66,-67,-68,-69,-70,-71,-15,-14,]),'INT_VAL':([8,31,35,47,49,51,52,53,54,55,60,61,62,63,64,65,73,77,78,79,80,81,82,83,84,104,108,109,110,111,112,113,114,115,117,118,122,125,133,136,137,139,140,],[-6,54,-11,54,54,54,54,-74,-75,-76,54,54,-12,54,-13,54,54,54,54,54,54,54,54,-73,-72,54,54,-65,-66,-67,-68,-69,-70,-71,54,54,-15,54,-14,54,54,54,-66,]),'FLOAT_VAL':([8,31,35,47,49,51,52,53,54,55,60,61,62,63,64,65,73,77,78,79,80,81,82,83,84,104,108,109,110,111,112,113,114,115,117,118,122,125,133,136,137,139,140,],[-6,55,-11,55,55,55,55,-74,-75,-76,55,55,-12,55,-13,55,55,55,55,55,55,55,55,-73,-72,55,55,-65,-66,-67,-68,-69,-70,-71,55,55,-15,55,-14,55,55,55,-66,]),'LBRACE':([9,39,87,121,123,138,145,],[12,-7,12,12,12,12,12,]),'VOID':([10,67,],[15,15,]),'PRINTF':([12,18,24,25,26,32,41,42,47,56,57,59,60,86,88,116,118,132,134,139,142,144,146,],[29,29,-28,-29,-30,-64,-18,29,29,-31,-64,-35,29,-33,-37,-36,29,-47,-32,29,-64,-34,-38,]),'RETURN':([12,18,24,25,26,32,41,42,56,57,59,60,86,88,116,118,132,134,139,142,144,146,],[31,31,-28,-29,-30,-64,-18,31,-31,-64,-35,31,-33,-37,-36,31,-47,-32,31,-64,-34,-38,]),'FOR':([12,18,24,25,26,32,41,42,56,57,59,86,88,116,132,134,142,144,146,],[33,33,-28,-29,-30,-64,-18,33,-31,-64,-35,-33,-37,-36,-47,-32,-64,-34,-38,]),'WHILE':([12,18,24,25,26,32,41,42,56,57,59,86,88,116,132,134,142,144,146,],[34,34,-28,-29,-30,-64,-18,34,-31,-64,-35,-33,-37,-36,-47,-32,-64,-34,-38,]),'IF':([12,18,24,25,26,32,41,42,56,57,58,59,86,88,116,132,134,142,144,146,],[37,37,-28,-29,-30,-64,-18,37,-31,-64,89,-35,-33,-37,-36,-47,-32,-64,-34,-38,]),'ELSE':([32,41,57,59,134,142,144,],[58,-18,87,-35,-32,58,-34,]),'STRING':([48,],[73,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,2,],[1,6,]),'function':([0,2,],[2,2,]),'type':([0,2,10,12,18,42,60,67,118,139,],[3,3,14,27,27,27,94,14,27,27,]),'id':([3,12,14,18,27,31,36,42,47,49,51,52,60,61,63,65,69,70,73,77,78,79,80,81,82,94,104,108,117,118,125,136,137,139,141,],[7,35,35,35,35,35,64,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,64,]),'variable_declaration':([7,],[9,]),'block':([9,87,121,123,138,145,],[11,116,132,134,142,146,]),'declarations':([10,67,],[13,100,]),'statements':([12,18,42,],[16,43,68,]),'semi_statement':([12,18,42,60,118,139,],[17,17,17,95,129,129,]),'non_semi_statement':([12,18,42,],[18,18,18,]),'empty':([12,18,32,42,49,57,60,73,108,118,125,139,142,],[19,19,59,19,76,88,93,106,76,131,106,131,59,]),'var_declaration':([12,18,42,60,118,139,],[20,20,20,20,20,20,]),'var_assignment':([12,18,27,42,60,69,70,94,118,139,],[21,21,45,21,21,45,45,119,21,21,]),'function_app':([12,18,42,47,60,118,139,],[22,22,22,72,22,22,22,]),'return_expr':([12,18,42,60,118,139,],[23,23,23,23,23,23,]),'conditional':([12,18,42,],[24,24,24,]),'for':([12,18,42,],[25,25,25,]),'while':([12,18,42,],[26,26,26,]),'id_ptr_or_array':([12,14,18,27,31,42,47,49,51,52,60,61,63,65,69,70,73,77,78,79,80,81,82,94,104,108,117,118,125,136,137,139,],[28,40,28,46,53,28,53,53,53,53,96,53,53,53,46,46,53,53,53,53,53,53,53,120,53,53,53,96,53,53,53,96,]),'if':([12,18,42,],[32,32,32,]),'ptrs':([12,14,18,27,31,38,42,47,49,51,52,60,61,63,65,69,70,73,77,78,79,80,81,82,94,104,108,117,118,125,136,137,139,],[36,36,36,36,36,66,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,141,36,]),'var_and_assign':([27,69,70,94,],[44,101,102,44,]),'expression':([31,47,49,51,52,60,61,63,65,73,77,78,79,80,81,82,104,108,117,118,125,136,137,139,],[50,71,75,84,85,92,97,98,99,105,109,110,111,112,113,114,125,75,127,130,105,140,111,130,]),'elif_else':([32,],[56,]),'elif':([32,142,],[57,144,]),'array_decs':([35,122,],[62,133,]),'arguments':([49,108,],[74,126,]),'else':([57,],[86,]),'loop_init_or_empty':([60,],[90,]),'loop_init':([60,],[91,]),'print_formats':([73,125,],[103,135,]),'semi_statement_or_empty':([118,139,],[128,143,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> function program','program',2,'p_program','lex_yacc.py',181),
  ('program -> function','program',1,'p_program','lex_yacc.py',182),
  ('function -> type id variable_declaration block','function',4,'p_function','lex_yacc.py',195),
  ('type -> INT','type',1,'p_type','lex_yacc.py',205),
  ('type -> FLOAT','type',1,'p_type','lex_yacc.py',206),
  ('id -> ID','id',1,'p_id','lex_yacc.py',216),
  ('variable_declaration -> LPAREN declarations RPAREN','variable_declaration',3,'p_varaible_declaration','lex_yacc.py',226),
  ('declarations -> type id_ptr_or_array COMMA declarations','declarations',4,'p_declarations','lex_yacc.py',236),
  ('declarations -> type id_ptr_or_array','declarations',2,'p_declarations','lex_yacc.py',237),
  ('declarations -> VOID','declarations',1,'p_declarations','lex_yacc.py',238),
  ('id_ptr_or_array -> id','id_ptr_or_array',1,'p_id_ptr_or_array','lex_yacc.py',263),
  ('id_ptr_or_array -> id array_decs','id_ptr_or_array',2,'p_id_ptr_or_array','lex_yacc.py',264),
  ('id_ptr_or_array -> ptrs id','id_ptr_or_array',2,'p_id_ptr_or_array','lex_yacc.py',265),
  ('array_decs -> SQ_LBRACKET expression SQ_RBRACKET array_decs','array_decs',4,'p_array_decs','lex_yacc.py',278),
  ('array_decs -> SQ_LBRACKET expression SQ_RBRACKET','array_decs',3,'p_array_decs','lex_yacc.py',279),
  ('ptrs -> MULTIPLY ptrs','ptrs',2,'p_ptrs','lex_yacc.py',289),
  ('ptrs -> MULTIPLY','ptrs',1,'p_ptrs','lex_yacc.py',290),
  ('block -> LBRACE statements RBRACE','block',3,'p_block','lex_yacc.py',300),
  ('statements -> semi_statement','statements',1,'p_statements','lex_yacc.py',310),
  ('statements -> non_semi_statement','statements',1,'p_statements','lex_yacc.py',311),
  ('statements -> semi_statement SEMI statements','statements',3,'p_statements','lex_yacc.py',312),
  ('statements -> non_semi_statement statements','statements',2,'p_statements','lex_yacc.py',313),
  ('statements -> empty','statements',1,'p_statements','lex_yacc.py',314),
  ('semi_statement -> var_declaration','semi_statement',1,'p_semi_statement','lex_yacc.py',338),
  ('semi_statement -> var_assignment','semi_statement',1,'p_semi_statement','lex_yacc.py',339),
  ('semi_statement -> function_app','semi_statement',1,'p_semi_statement','lex_yacc.py',340),
  ('semi_statement -> return_expr','semi_statement',1,'p_semi_statement','lex_yacc.py',341),
  ('non_semi_statement -> conditional','non_semi_statement',1,'p_non_semi_statement','lex_yacc.py',351),
  ('non_semi_statement -> for','non_semi_statement',1,'p_non_semi_statement','lex_yacc.py',352),
  ('non_semi_statement -> while','non_semi_statement',1,'p_non_semi_statement','lex_yacc.py',353),
  ('conditional -> if elif_else','conditional',2,'p_conditional','lex_yacc.py',363),
  ('if -> IF LPAREN expression RPAREN block','if',5,'p_if','lex_yacc.py',375),
  ('elif_else -> elif else','elif_else',2,'p_elif_else','lex_yacc.py',384),
  ('elif -> ELSE IF LPAREN expression RPAREN block elif','elif',7,'p_elif','lex_yacc.py',402),
  ('elif -> empty','elif',1,'p_elif','lex_yacc.py',403),
  ('else -> ELSE block','else',2,'p_else','lex_yacc.py',419),
  ('else -> empty','else',1,'p_else','lex_yacc.py',420),
  ('for -> FOR LPAREN loop_init_or_empty SEMI semi_statement_or_empty SEMI semi_statement_or_empty RPAREN block','for',9,'p_for','lex_yacc.py',434),
  ('loop_init_or_empty -> loop_init','loop_init_or_empty',1,'p_loop_init_or_empty','lex_yacc.py',444),
  ('loop_init_or_empty -> expression','loop_init_or_empty',1,'p_loop_init_or_empty','lex_yacc.py',445),
  ('loop_init_or_empty -> empty','loop_init_or_empty',1,'p_loop_init_or_empty','lex_yacc.py',446),
  ('semi_statement_or_empty -> semi_statement','semi_statement_or_empty',1,'p_semi_statement_or_empty','lex_yacc.py',456),
  ('semi_statement_or_empty -> expression','semi_statement_or_empty',1,'p_semi_statement_or_empty','lex_yacc.py',457),
  ('semi_statement_or_empty -> empty','semi_statement_or_empty',1,'p_semi_statement_or_empty','lex_yacc.py',458),
  ('loop_init -> type var_assignment','loop_init',2,'p_loop_init','lex_yacc.py',468),
  ('loop_init -> semi_statement','loop_init',1,'p_loop_init','lex_yacc.py',469),
  ('while -> WHILE LPAREN expression RPAREN block','while',5,'p_while','lex_yacc.py',482),
  ('var_declaration -> type var_and_assign','var_declaration',2,'p_var_declaration','lex_yacc.py',492),
  ('var_assignment -> id_ptr_or_array EQ expression','var_assignment',3,'p_var_assignment','lex_yacc.py',532),
  ('var_assignment -> id_ptr_or_array EQ function_app','var_assignment',3,'p_var_assignment','lex_yacc.py',533),
  ('var_and_assign -> var_assignment COMMA var_and_assign','var_and_assign',3,'p_var_and_assign','lex_yacc.py',543),
  ('var_and_assign -> var_assignment','var_and_assign',1,'p_var_and_assign','lex_yacc.py',544),
  ('var_and_assign -> id_ptr_or_array COMMA var_and_assign','var_and_assign',3,'p_var_and_assign','lex_yacc.py',545),
  ('var_and_assign -> id_ptr_or_array','var_and_assign',1,'p_var_and_assign','lex_yacc.py',546),
  ('return_expr -> RETURN expression','return_expr',2,'p_return_expr','lex_yacc.py',559),
  ('function_app -> PRINTF LPAREN STRING print_formats RPAREN','function_app',5,'p_function_app','lex_yacc.py',563),
  ('function_app -> ID LPAREN arguments RPAREN','function_app',4,'p_function_app','lex_yacc.py',564),
  ('print_formats -> COMMA expression print_formats','print_formats',3,'p_print_formats','lex_yacc.py',577),
  ('print_formats -> expression','print_formats',1,'p_print_formats','lex_yacc.py',578),
  ('print_formats -> empty','print_formats',1,'p_print_formats','lex_yacc.py',579),
  ('arguments -> expression COMMA arguments','arguments',3,'p_arguments','lex_yacc.py',598),
  ('arguments -> expression','arguments',1,'p_arguments','lex_yacc.py',599),
  ('arguments -> empty','arguments',1,'p_arguments','lex_yacc.py',600),
  ('empty -> <empty>','empty',0,'p_empty','lex_yacc.py',616),
  ('expression -> expression PLUS expression','expression',3,'p_expression','lex_yacc.py',626),
  ('expression -> expression MINUS expression','expression',3,'p_expression','lex_yacc.py',627),
  ('expression -> expression MULTIPLY expression','expression',3,'p_expression','lex_yacc.py',628),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','lex_yacc.py',629),
  ('expression -> expression LESS expression','expression',3,'p_expression','lex_yacc.py',630),
  ('expression -> expression GREATER expression','expression',3,'p_expression','lex_yacc.py',631),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression','lex_yacc.py',632),
  ('expression -> MINUS expression','expression',2,'p_expression','lex_yacc.py',633),
  ('expression -> expression DOUBLEPLUS','expression',2,'p_expression','lex_yacc.py',634),
  ('expression -> id_ptr_or_array','expression',1,'p_expression','lex_yacc.py',635),
  ('expression -> INT_VAL','expression',1,'p_expression','lex_yacc.py',636),
  ('expression -> FLOAT_VAL','expression',1,'p_expression','lex_yacc.py',637),
]
