
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftLESSGREATERleftPLUSMINUSleftMULTIPLYDIVIDECOMMA DIVIDE DOUBLEPLUS ELSE EQ FLOAT FLOAT_VAL FOR GREATER ID IF INT INT_VAL LBRACE LESS LPAREN MINUS MULTIPLY PLUS PRINTF PTR_AMP RBRACE RETURN RPAREN SEMI SQ_LBRACKET SQ_RBRACKET STRING VOID WHILEprogram : function program\n\t\t\t   | functionfunction : type id variable_declaration block\n\t\t\t\t| VOID id variable_declaration blocktype : INT\n\t\t\t| FLOATid : IDvariable_declaration : LPAREN declarations RPARENdeclarations : type id_ptr_or_array COMMA declarations\n\t\t\t\t\t| type id_ptr_or_array\n\t\t\t\t\t| VOIDid_ptr_or_array : id\n\t\t\t\t\t   | id array_decs\n\t\t\t\t\t   | ptrs idarray_decs : SQ_LBRACKET expression SQ_RBRACKET array_decs\n\t\t\t\t  | SQ_LBRACKET expression SQ_RBRACKETptrs : MULTIPLY ptrs\n\t\t    | MULTIPLYblock : LBRACE statements RBRACEstatements : semi_statement\n\t\t\t\t  | non_semi_statement\n\t\t\t      | semi_statement SEMI statements\n\t\t\t      | non_semi_statement statements\n\t\t\t      | emptysemi_statement : expression\n\t\t\t\t\t  | var_declaration\n\t\t\t\t\t  | var_assignment\n\t\t\t\t\t  | function_app\n\t\t\t\t\t  | return_exprnon_semi_statement : conditional\n\t\t\t\t\t\t  | for\n\t\t\t\t\t\t  | whileconditional : if elif_elseif : IF LPAREN expression RPAREN blockelif_else : ELSE IF LPAREN expression RPAREN block elif_else\n\t\t\t\t | ELSE block\n\t\t\t\t | emptyfor : FOR LPAREN loop_init_or_empty SEMI semi_statement_or_empty SEMI semi_statement_or_empty RPAREN blockloop_init_or_empty : loop_init\n\t\t\t\t\t\t  | expression\n\t\t\t\t\t\t  | emptysemi_statement_or_empty : semi_statement\n\t\t\t\t\t\t       | emptyloop_init : type var_assignment\n\t\t\t\t | semi_statementwhile : WHILE LPAREN expression RPAREN blockvar_declaration : type var_and_assignvar_assignment : id_ptr_or_array EQ expression\n\t\t\t\t\t  | id_ptr_or_array EQ function_appvar_and_assign : var_assignment COMMA var_and_assign\n\t\t\t\t\t  | var_assignment\n\t\t\t\t\t  | id_ptr_or_array COMMA var_and_assign\n\t\t\t\t\t  | id_ptr_or_arrayreturn_expr : RETURN expression\n\t\t\t\t   | RETURNfunction_app : PRINTF LPAREN STRING print_formats RPAREN\n\t\t\t\t\t| ID LPAREN arguments RPARENprint_formats : COMMA expression print_formats\n\t\t\t\t\t | emptyarguments : expression COMMA arguments\n\t\t\t\t | expression\n\t\t\t\t | emptyempty :expression : expression PLUS expression\n\t\t\t\t  | expression MINUS expression\n\t\t\t \t  | expression MULTIPLY expression\n\t\t\t  \t  | expression DIVIDE expression\n\t\t\t  \t  | expression LESS expression\n\t\t\t  \t  | expression GREATER expression\n\t\t  \t\t  | LPAREN expression RPAREN\n\t\t  \t\t  | MINUS expression\n\t\t  \t\t  | PTR_AMP expression\n\t\t  \t\t  | MULTIPLY expression\n\t\t  \t\t  | id_ptr_or_array DOUBLEPLUS\n\t\t  \t\t  | DOUBLEPLUS id_ptr_or_array\n\t\t  \t\t  | id_ptr_or_array\n\t\t  \t\t  | function_app\n\t\t  \t\t  | var_assignment\n\t\t\t  \t  | INT_VAL\n\t\t\t  \t  | FLOAT_VAL'
    
_lr_action_items = {'VOID':([0,2,12,14,19,53,87,],[4,4,18,-3,-4,-19,18,]),'INT':([0,2,12,14,15,19,22,29,30,31,44,53,54,78,80,81,87,106,127,140,142,145,146,148,150,],[5,5,5,-3,5,-4,5,-30,-31,-32,-63,-19,5,-33,-37,5,5,-36,5,-46,-34,5,-63,-35,-38,]),'FLOAT':([0,2,12,14,15,19,22,29,30,31,44,53,54,78,80,81,87,106,127,140,142,145,146,148,150,],[6,6,6,-3,6,-4,6,-30,-31,-32,-63,-19,6,-33,-37,6,6,-36,6,-46,-34,6,-63,-35,-38,]),'$end':([1,2,7,14,19,53,],[0,-2,-1,-3,-4,-19,]),'ID':([3,4,5,6,15,17,22,29,30,31,32,33,34,35,37,40,43,44,48,52,53,54,56,57,58,59,60,61,66,70,76,78,80,81,82,84,86,88,99,100,106,111,122,125,126,127,140,142,145,146,148,150,],[9,9,-5,-6,42,9,42,-30,-31,-32,42,-18,42,42,9,9,42,-63,9,-18,-19,42,42,42,42,42,42,42,-17,42,42,-33,-37,42,42,42,42,-17,9,9,-36,9,42,42,42,42,-46,-34,42,-63,-35,-38,]),'MULTIPLY':([5,6,9,15,17,22,24,26,27,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,47,52,53,54,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,76,77,78,80,81,82,83,84,85,86,90,91,92,93,94,95,96,97,98,99,100,103,106,109,111,112,114,115,116,117,122,124,125,126,127,131,133,134,136,140,141,142,145,146,148,150,],[-5,-6,-7,33,52,33,58,-78,-77,-30,-31,-32,33,33,33,33,-76,52,-79,-80,52,-7,33,-63,-12,52,-19,33,33,33,33,33,33,33,58,-77,-78,-73,58,58,-74,33,-75,33,58,-33,-37,33,33,-13,33,-14,33,58,58,-66,-67,58,58,-70,58,-49,52,52,58,-36,58,52,-78,-77,58,58,58,33,-57,33,33,33,-16,-56,58,58,-46,-15,-34,33,-63,-35,-38,]),'LPAREN':([8,9,10,15,22,29,30,31,32,33,34,35,41,42,43,44,45,46,49,53,54,56,57,58,59,60,61,70,76,78,80,81,82,84,86,105,106,122,125,126,127,140,142,145,146,148,150,],[12,-7,12,34,34,-30,-31,-32,34,34,34,34,75,76,34,-63,81,82,86,-19,34,34,34,34,34,34,34,34,34,-33,-37,34,34,34,34,126,-36,34,34,34,34,-46,-34,34,-63,-35,-38,]),'SQ_LBRACKET':([9,42,47,131,],[-7,-7,84,84,]),'COMMA':([9,36,38,39,42,47,51,62,63,64,65,68,69,71,73,74,83,85,90,91,92,93,94,95,96,97,98,101,103,124,128,129,131,133,134,141,],[-7,-76,-79,-80,-7,-12,87,-71,-77,-78,-73,-72,-74,-75,99,100,-13,-14,-64,-65,-66,-67,-68,-69,-70,-48,-49,122,125,-57,99,100,-16,-56,122,-15,]),'RPAREN':([9,16,18,24,25,26,27,28,36,38,39,42,43,47,51,62,63,64,65,67,68,69,71,72,73,74,76,77,83,85,90,91,92,93,94,95,96,97,98,101,102,103,104,115,117,118,119,120,121,123,124,125,131,133,134,135,136,138,139,141,143,145,147,],[-7,50,-11,-25,-26,-27,-28,-29,-76,-79,-80,-7,-55,-12,-10,-71,-77,-78,-73,96,-72,-74,-75,-47,-51,-53,-63,-54,-13,-14,-64,-65,-66,-67,-68,-69,-70,-48,-49,-63,124,-61,-62,130,132,-9,-50,-52,133,-59,-57,-63,-16,-56,-63,-60,144,-42,-43,-15,-58,-63,149,]),'PLUS':([9,24,26,27,36,38,39,42,47,62,63,64,65,67,68,69,71,77,83,85,90,91,92,93,94,95,96,97,98,103,109,112,114,115,116,117,124,131,133,134,136,141,],[-7,56,-78,-77,-76,-79,-80,-7,-12,-71,-77,-78,-73,56,56,-74,-75,56,-13,-14,-64,-65,-66,-67,56,56,-70,56,-49,56,56,-78,-77,56,56,56,-57,-16,-56,56,56,-15,]),'MINUS':([9,15,22,24,26,27,29,30,31,32,33,34,35,36,38,39,42,43,44,47,53,54,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,76,77,78,80,81,82,83,84,85,86,90,91,92,93,94,95,96,97,98,103,106,109,112,114,115,116,117,122,124,125,126,127,131,133,134,136,140,141,142,145,146,148,150,],[-7,32,32,57,-78,-77,-30,-31,-32,32,32,32,32,-76,-79,-80,-7,32,-63,-12,-19,32,32,32,32,32,32,32,-71,-77,-78,-73,57,57,-74,32,-75,32,57,-33,-37,32,32,-13,32,-14,32,-64,-65,-66,-67,57,57,-70,57,-49,57,-36,57,-78,-77,57,57,57,32,-57,32,32,32,-16,-56,57,57,-46,-15,-34,32,-63,-35,-38,]),'DIVIDE':([9,24,26,27,36,38,39,42,47,62,63,64,65,67,68,69,71,77,83,85,90,91,92,93,94,95,96,97,98,103,109,112,114,115,116,117,124,131,133,134,136,141,],[-7,59,-78,-77,-76,-79,-80,-7,-12,59,-77,-78,-73,59,59,-74,-75,59,-13,-14,59,59,-66,-67,59,59,-70,59,-49,59,59,-78,-77,59,59,59,-57,-16,-56,59,59,-15,]),'LESS':([9,24,26,27,36,38,39,42,47,62,63,64,65,67,68,69,71,77,83,85,90,91,92,93,94,95,96,97,98,103,109,112,114,115,116,117,124,131,133,134,136,141,],[-7,60,-78,-77,-76,-79,-80,-7,-12,-71,-77,-78,-73,60,60,-74,-75,60,-13,-14,-64,-65,-66,-67,-68,-69,-70,60,-49,60,60,-78,-77,60,60,60,-57,-16,-56,60,60,-15,]),'GREATER':([9,24,26,27,36,38,39,42,47,62,63,64,65,67,68,69,71,77,83,85,90,91,92,93,94,95,96,97,98,103,109,112,114,115,116,117,124,131,133,134,136,141,],[-7,61,-78,-77,-76,-79,-80,-7,-12,-71,-77,-78,-73,61,61,-74,-75,61,-13,-14,-64,-65,-66,-67,-68,-69,-70,61,-49,61,61,-78,-77,61,61,61,-57,-16,-56,61,61,-15,]),'SEMI':([9,21,24,25,26,27,28,36,38,39,42,43,47,62,63,64,65,68,69,71,72,73,74,77,81,83,85,90,91,92,93,94,95,96,97,98,107,108,109,110,112,113,114,119,120,124,127,128,129,131,133,137,138,139,141,],[-7,54,-25,-26,-27,-28,-29,-76,-79,-80,-7,-55,-12,-71,-77,-78,-73,-72,-74,-75,-47,-51,-53,-54,-63,-13,-14,-64,-65,-66,-67,-68,-69,-70,-48,-49,127,-39,-25,-41,-27,-45,-28,-50,-52,-57,-63,-44,-53,-16,-56,145,-42,-43,-15,]),'RBRACE':([9,15,20,21,22,23,24,25,26,27,28,29,30,31,36,38,39,42,43,44,47,53,54,55,62,63,64,65,68,69,71,72,73,74,77,78,80,83,85,89,90,91,92,93,94,95,96,97,98,106,119,120,124,131,133,140,141,142,146,148,150,],[-7,-63,53,-20,-21,-24,-25,-26,-27,-28,-29,-30,-31,-32,-76,-79,-80,-7,-55,-63,-12,-19,-63,-23,-71,-77,-78,-73,-72,-74,-75,-47,-51,-53,-54,-33,-37,-13,-14,-22,-64,-65,-66,-67,-68,-69,-70,-48,-49,-36,-50,-52,-57,-16,-56,-46,-15,-34,-63,-35,-38,]),'SQ_RBRACKET':([9,36,38,39,42,47,62,63,64,65,68,69,71,83,85,90,91,92,93,94,95,96,97,98,116,124,131,133,141,],[-7,-76,-79,-80,-7,-12,-71,-77,-78,-73,-72,-74,-75,-13,-14,-64,-65,-66,-67,-68,-69,-70,-48,-49,131,-57,-16,-56,-15,]),'EQ':([9,36,42,47,74,83,85,129,131,141,],[-7,70,-7,-12,70,-13,-14,70,-16,-15,]),'DOUBLEPLUS':([9,15,22,29,30,31,32,33,34,35,36,42,43,44,47,53,54,56,57,58,59,60,61,70,76,78,80,81,82,83,84,85,86,106,122,125,126,127,131,140,141,142,145,146,148,150,],[-7,37,37,-30,-31,-32,37,37,37,37,69,-7,37,-63,-12,-19,37,37,37,37,37,37,37,37,37,-33,-37,37,37,-13,37,-14,37,-36,37,37,37,37,-16,-46,-15,-34,37,-63,-35,-38,]),'LBRACE':([11,13,50,79,130,132,144,149,],[15,15,-8,15,15,15,15,15,]),'PTR_AMP':([15,22,29,30,31,32,33,34,35,43,44,53,54,56,57,58,59,60,61,70,76,78,80,81,82,84,86,106,122,125,126,127,140,142,145,146,148,150,],[35,35,-30,-31,-32,35,35,35,35,35,-63,-19,35,35,35,35,35,35,35,35,35,-33,-37,35,35,35,35,-36,35,35,35,35,-46,-34,35,-63,-35,-38,]),'INT_VAL':([15,22,29,30,31,32,33,34,35,43,44,53,54,56,57,58,59,60,61,70,76,78,80,81,82,84,86,106,122,125,126,127,140,142,145,146,148,150,],[38,38,-30,-31,-32,38,38,38,38,38,-63,-19,38,38,38,38,38,38,38,38,38,-33,-37,38,38,38,38,-36,38,38,38,38,-46,-34,38,-63,-35,-38,]),'FLOAT_VAL':([15,22,29,30,31,32,33,34,35,43,44,53,54,56,57,58,59,60,61,70,76,78,80,81,82,84,86,106,122,125,126,127,140,142,145,146,148,150,],[39,39,-30,-31,-32,39,39,39,39,39,-63,-19,39,39,39,39,39,39,39,39,39,-33,-37,39,39,39,39,-36,39,39,39,39,-46,-34,39,-63,-35,-38,]),'PRINTF':([15,22,29,30,31,32,33,34,35,43,44,53,54,56,57,58,59,60,61,70,76,78,80,81,82,84,86,106,122,125,126,127,140,142,145,146,148,150,],[41,41,-30,-31,-32,41,41,41,41,41,-63,-19,41,41,41,41,41,41,41,41,41,-33,-37,41,41,41,41,-36,41,41,41,41,-46,-34,41,-63,-35,-38,]),'RETURN':([15,22,29,30,31,44,53,54,78,80,81,106,127,140,142,145,146,148,150,],[43,43,-30,-31,-32,-63,-19,43,-33,-37,43,-36,43,-46,-34,43,-63,-35,-38,]),'FOR':([15,22,29,30,31,44,53,54,78,80,106,140,142,146,148,150,],[45,45,-30,-31,-32,-63,-19,45,-33,-37,-36,-46,-34,-63,-35,-38,]),'WHILE':([15,22,29,30,31,44,53,54,78,80,106,140,142,146,148,150,],[46,46,-30,-31,-32,-63,-19,46,-33,-37,-36,-46,-34,-63,-35,-38,]),'IF':([15,22,29,30,31,44,53,54,78,79,80,106,140,142,146,148,150,],[49,49,-30,-31,-32,-63,-19,49,-33,105,-37,-36,-46,-34,-63,-35,-38,]),'ELSE':([44,53,142,146,],[79,-19,-34,79,]),'STRING':([75,],[101,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,2,],[1,7,]),'function':([0,2,],[2,2,]),'type':([0,2,12,15,22,54,81,87,127,145,],[3,3,17,40,40,40,111,17,40,40,]),'id':([3,4,15,17,22,32,33,34,35,37,40,43,48,54,56,57,58,59,60,61,66,70,76,81,82,84,86,99,100,111,122,125,126,127,145,],[8,10,47,47,47,47,47,47,47,47,47,47,85,47,47,47,47,47,47,47,85,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'variable_declaration':([8,10,],[11,13,]),'block':([11,13,79,130,132,144,149,],[14,19,106,140,142,146,150,]),'declarations':([12,87,],[16,118,]),'statements':([15,22,54,],[20,55,89,]),'semi_statement':([15,22,54,81,127,145,],[21,21,21,113,138,138,]),'non_semi_statement':([15,22,54,],[22,22,22,]),'empty':([15,22,44,54,76,81,101,125,127,134,145,146,],[23,23,80,23,104,110,123,104,139,123,139,80,]),'expression':([15,22,32,33,34,35,43,54,56,57,58,59,60,61,70,76,81,82,84,86,122,125,126,127,145,],[24,24,62,65,67,68,77,24,90,91,92,93,94,95,97,103,109,115,116,117,134,103,136,24,24,]),'var_declaration':([15,22,54,81,127,145,],[25,25,25,25,25,25,]),'var_assignment':([15,22,32,33,34,35,40,43,54,56,57,58,59,60,61,70,76,81,82,84,86,99,100,111,122,125,126,127,145,],[26,26,64,64,64,64,73,64,26,64,64,64,64,64,64,64,64,112,64,64,64,73,73,128,64,64,64,26,26,]),'function_app':([15,22,32,33,34,35,43,54,56,57,58,59,60,61,70,76,81,82,84,86,122,125,126,127,145,],[27,27,63,63,63,63,63,27,63,63,63,63,63,63,98,63,114,63,63,63,63,63,63,27,27,]),'return_expr':([15,22,54,81,127,145,],[28,28,28,28,28,28,]),'conditional':([15,22,54,],[29,29,29,]),'for':([15,22,54,],[30,30,30,]),'while':([15,22,54,],[31,31,31,]),'id_ptr_or_array':([15,17,22,32,33,34,35,37,40,43,54,56,57,58,59,60,61,70,76,81,82,84,86,99,100,111,122,125,126,127,145,],[36,51,36,36,36,36,36,71,74,36,36,36,36,36,36,36,36,36,36,36,36,36,36,74,74,129,36,36,36,36,36,]),'if':([15,22,54,],[44,44,44,]),'ptrs':([15,17,22,32,33,34,35,37,40,43,52,54,56,57,58,59,60,61,70,76,81,82,84,86,99,100,111,122,125,126,127,145,],[48,48,48,48,66,48,48,48,48,48,88,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'var_and_assign':([40,99,100,111,],[72,119,120,72,]),'elif_else':([44,146,],[78,148,]),'array_decs':([47,131,],[83,141,]),'arguments':([76,125,],[102,135,]),'loop_init_or_empty':([81,],[107,]),'loop_init':([81,],[108,]),'print_formats':([101,134,],[121,143,]),'semi_statement_or_empty':([127,145,],[137,147,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> function program','program',2,'p_program','lex_yacc.py',237),
  ('program -> function','program',1,'p_program','lex_yacc.py',238),
  ('function -> type id variable_declaration block','function',4,'p_function','lex_yacc.py',251),
  ('function -> VOID id variable_declaration block','function',4,'p_function','lex_yacc.py',252),
  ('type -> INT','type',1,'p_type','lex_yacc.py',265),
  ('type -> FLOAT','type',1,'p_type','lex_yacc.py',266),
  ('id -> ID','id',1,'p_id','lex_yacc.py',276),
  ('variable_declaration -> LPAREN declarations RPAREN','variable_declaration',3,'p_varaible_declaration','lex_yacc.py',286),
  ('declarations -> type id_ptr_or_array COMMA declarations','declarations',4,'p_declarations','lex_yacc.py',296),
  ('declarations -> type id_ptr_or_array','declarations',2,'p_declarations','lex_yacc.py',297),
  ('declarations -> VOID','declarations',1,'p_declarations','lex_yacc.py',298),
  ('id_ptr_or_array -> id','id_ptr_or_array',1,'p_id_ptr_or_array','lex_yacc.py',323),
  ('id_ptr_or_array -> id array_decs','id_ptr_or_array',2,'p_id_ptr_or_array','lex_yacc.py',324),
  ('id_ptr_or_array -> ptrs id','id_ptr_or_array',2,'p_id_ptr_or_array','lex_yacc.py',325),
  ('array_decs -> SQ_LBRACKET expression SQ_RBRACKET array_decs','array_decs',4,'p_array_decs','lex_yacc.py',338),
  ('array_decs -> SQ_LBRACKET expression SQ_RBRACKET','array_decs',3,'p_array_decs','lex_yacc.py',339),
  ('ptrs -> MULTIPLY ptrs','ptrs',2,'p_ptrs','lex_yacc.py',349),
  ('ptrs -> MULTIPLY','ptrs',1,'p_ptrs','lex_yacc.py',350),
  ('block -> LBRACE statements RBRACE','block',3,'p_block','lex_yacc.py',360),
  ('statements -> semi_statement','statements',1,'p_statements','lex_yacc.py',370),
  ('statements -> non_semi_statement','statements',1,'p_statements','lex_yacc.py',371),
  ('statements -> semi_statement SEMI statements','statements',3,'p_statements','lex_yacc.py',372),
  ('statements -> non_semi_statement statements','statements',2,'p_statements','lex_yacc.py',373),
  ('statements -> empty','statements',1,'p_statements','lex_yacc.py',374),
  ('semi_statement -> expression','semi_statement',1,'p_semi_statement','lex_yacc.py',398),
  ('semi_statement -> var_declaration','semi_statement',1,'p_semi_statement','lex_yacc.py',399),
  ('semi_statement -> var_assignment','semi_statement',1,'p_semi_statement','lex_yacc.py',400),
  ('semi_statement -> function_app','semi_statement',1,'p_semi_statement','lex_yacc.py',401),
  ('semi_statement -> return_expr','semi_statement',1,'p_semi_statement','lex_yacc.py',402),
  ('non_semi_statement -> conditional','non_semi_statement',1,'p_non_semi_statement','lex_yacc.py',412),
  ('non_semi_statement -> for','non_semi_statement',1,'p_non_semi_statement','lex_yacc.py',413),
  ('non_semi_statement -> while','non_semi_statement',1,'p_non_semi_statement','lex_yacc.py',414),
  ('conditional -> if elif_else','conditional',2,'p_conditional','lex_yacc.py',425),
  ('if -> IF LPAREN expression RPAREN block','if',5,'p_if','lex_yacc.py',437),
  ('elif_else -> ELSE IF LPAREN expression RPAREN block elif_else','elif_else',7,'p_elif_else','lex_yacc.py',446),
  ('elif_else -> ELSE block','elif_else',2,'p_elif_else','lex_yacc.py',447),
  ('elif_else -> empty','elif_else',1,'p_elif_else','lex_yacc.py',448),
  ('for -> FOR LPAREN loop_init_or_empty SEMI semi_statement_or_empty SEMI semi_statement_or_empty RPAREN block','for',9,'p_for','lex_yacc.py',466),
  ('loop_init_or_empty -> loop_init','loop_init_or_empty',1,'p_loop_init_or_empty','lex_yacc.py',476),
  ('loop_init_or_empty -> expression','loop_init_or_empty',1,'p_loop_init_or_empty','lex_yacc.py',477),
  ('loop_init_or_empty -> empty','loop_init_or_empty',1,'p_loop_init_or_empty','lex_yacc.py',478),
  ('semi_statement_or_empty -> semi_statement','semi_statement_or_empty',1,'p_semi_statement_or_empty','lex_yacc.py',488),
  ('semi_statement_or_empty -> empty','semi_statement_or_empty',1,'p_semi_statement_or_empty','lex_yacc.py',489),
  ('loop_init -> type var_assignment','loop_init',2,'p_loop_init','lex_yacc.py',499),
  ('loop_init -> semi_statement','loop_init',1,'p_loop_init','lex_yacc.py',500),
  ('while -> WHILE LPAREN expression RPAREN block','while',5,'p_while','lex_yacc.py',513),
  ('var_declaration -> type var_and_assign','var_declaration',2,'p_var_declaration','lex_yacc.py',523),
  ('var_assignment -> id_ptr_or_array EQ expression','var_assignment',3,'p_var_assignment','lex_yacc.py',563),
  ('var_assignment -> id_ptr_or_array EQ function_app','var_assignment',3,'p_var_assignment','lex_yacc.py',564),
  ('var_and_assign -> var_assignment COMMA var_and_assign','var_and_assign',3,'p_var_and_assign','lex_yacc.py',574),
  ('var_and_assign -> var_assignment','var_and_assign',1,'p_var_and_assign','lex_yacc.py',575),
  ('var_and_assign -> id_ptr_or_array COMMA var_and_assign','var_and_assign',3,'p_var_and_assign','lex_yacc.py',576),
  ('var_and_assign -> id_ptr_or_array','var_and_assign',1,'p_var_and_assign','lex_yacc.py',577),
  ('return_expr -> RETURN expression','return_expr',2,'p_return_expr','lex_yacc.py',590),
  ('return_expr -> RETURN','return_expr',1,'p_return_expr','lex_yacc.py',591),
  ('function_app -> PRINTF LPAREN STRING print_formats RPAREN','function_app',5,'p_function_app','lex_yacc.py',598),
  ('function_app -> ID LPAREN arguments RPAREN','function_app',4,'p_function_app','lex_yacc.py',599),
  ('print_formats -> COMMA expression print_formats','print_formats',3,'p_print_formats','lex_yacc.py',618),
  ('print_formats -> empty','print_formats',1,'p_print_formats','lex_yacc.py',619),
  ('arguments -> expression COMMA arguments','arguments',3,'p_arguments','lex_yacc.py',635),
  ('arguments -> expression','arguments',1,'p_arguments','lex_yacc.py',636),
  ('arguments -> empty','arguments',1,'p_arguments','lex_yacc.py',637),
  ('empty -> <empty>','empty',0,'p_empty','lex_yacc.py',653),
  ('expression -> expression PLUS expression','expression',3,'p_expression','lex_yacc.py',663),
  ('expression -> expression MINUS expression','expression',3,'p_expression','lex_yacc.py',664),
  ('expression -> expression MULTIPLY expression','expression',3,'p_expression','lex_yacc.py',665),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','lex_yacc.py',666),
  ('expression -> expression LESS expression','expression',3,'p_expression','lex_yacc.py',667),
  ('expression -> expression GREATER expression','expression',3,'p_expression','lex_yacc.py',668),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression','lex_yacc.py',669),
  ('expression -> MINUS expression','expression',2,'p_expression','lex_yacc.py',670),
  ('expression -> PTR_AMP expression','expression',2,'p_expression','lex_yacc.py',671),
  ('expression -> MULTIPLY expression','expression',2,'p_expression','lex_yacc.py',672),
  ('expression -> id_ptr_or_array DOUBLEPLUS','expression',2,'p_expression','lex_yacc.py',673),
  ('expression -> DOUBLEPLUS id_ptr_or_array','expression',2,'p_expression','lex_yacc.py',674),
  ('expression -> id_ptr_or_array','expression',1,'p_expression','lex_yacc.py',675),
  ('expression -> function_app','expression',1,'p_expression','lex_yacc.py',676),
  ('expression -> var_assignment','expression',1,'p_expression','lex_yacc.py',677),
  ('expression -> INT_VAL','expression',1,'p_expression','lex_yacc.py',678),
  ('expression -> FLOAT_VAL','expression',1,'p_expression','lex_yacc.py',679),
]
