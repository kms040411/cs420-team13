
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftLESSGREATERleftPLUSMINUSleftMULTIPLYDIVIDECOMMA DIVIDE DOUBLEPLUS ELSE EQ FLOAT FLOAT_VAL FOR GREATER ID IF INT INT_VAL LBRACE LESS LPAREN MINUS MULTIPLY PLUS PRINTF PTR_AMP RBRACE RETURN RPAREN SEMI SQ_LBRACKET SQ_RBRACKET STRING VOID WHILEprogram : function program\n\t\t\t   | functionfunction : type id variable_declaration blocktype : INT\n\t\t\t| FLOATid : IDvariable_declaration : LPAREN declarations RPARENdeclarations : type id_ptr_or_array COMMA declarations\n\t\t\t\t\t| type id_ptr_or_array\n\t\t\t\t\t| VOIDid_ptr_or_array : id\n\t\t\t\t\t   | id array_decs\n\t\t\t\t\t   | ptrs idarray_decs : SQ_LBRACKET expression SQ_RBRACKET array_decs\n\t\t\t\t  | SQ_LBRACKET expression SQ_RBRACKETptrs : MULTIPLY ptrs\n\t\t    | MULTIPLYblock : LBRACE statements RBRACEstatements : semi_statement\n\t\t\t\t  | non_semi_statement\n\t\t\t      | semi_statement SEMI statements\n\t\t\t      | non_semi_statement statements\n\t\t\t      | emptysemi_statement : var_declaration\n\t\t\t\t\t  | var_assignment\n\t\t\t\t\t  | function_app\n\t\t\t\t\t  | expression\n\t\t\t\t\t  | return_exprnon_semi_statement : conditional\n\t\t\t\t\t\t  | for\n\t\t\t\t\t\t  | whileconditional : if elif_elseif : IF LPAREN expression RPAREN blockelif_else : ELSE IF LPAREN expression RPAREN block elif_else\n\t\t\t\t | ELSE block\n\t\t\t\t | emptyfor : FOR LPAREN loop_init_or_empty SEMI semi_statement_or_empty SEMI semi_statement_or_empty RPAREN blockloop_init_or_empty : loop_init\n\t\t\t\t\t\t  | expression\n\t\t\t\t\t\t  | emptysemi_statement_or_empty : semi_statement\n\t\t\t\t\t\t\t   | expression\n\t\t\t\t\t\t       | emptyloop_init : type var_assignment\n\t\t\t\t | semi_statementwhile : WHILE LPAREN expression RPAREN blockvar_declaration : type var_and_assignvar_assignment : id_ptr_or_array EQ expression\n\t\t\t\t\t  | id_ptr_or_array EQ function_appvar_and_assign : var_assignment COMMA var_and_assign\n\t\t\t\t\t  | var_assignment\n\t\t\t\t\t  | id_ptr_or_array COMMA var_and_assign\n\t\t\t\t\t  | id_ptr_or_arrayreturn_expr : RETURN expression\n\t\t\t\t   | RETURNfunction_app : PRINTF LPAREN STRING print_formats RPAREN\n\t\t\t\t\t| ID LPAREN arguments RPARENprint_formats : COMMA expression print_formats\n\t\t\t\t\t | emptyarguments : expression COMMA arguments\n\t\t\t\t | expression\n\t\t\t\t | emptyempty :expression : expression PLUS expression\n\t\t\t\t  | expression MINUS expression\n\t\t\t \t  | expression MULTIPLY expression\n\t\t\t  \t  | expression DIVIDE expression\n\t\t\t  \t  | expression LESS expression\n\t\t\t  \t  | expression GREATER expression\n\t\t  \t\t  | LPAREN expression RPAREN\n\t\t  \t\t  | MINUS expression\n\t\t  \t\t  | id_ptr_or_array DOUBLEPLUS\n\t\t  \t\t  | DOUBLEPLUS id_ptr_or_array\n\t\t  \t\t  | id_ptr_or_array\n\t\t  \t\t  | function_app\n\t\t  \t\t  | var_assignment\n\t\t\t  \t  | INT_VAL\n\t\t\t  \t  | FLOAT_VAL'
    
_lr_action_items = {'INT':([0,2,10,11,12,18,25,26,27,39,47,48,71,73,74,80,98,119,133,135,138,139,141,143,],[4,4,4,-3,4,4,-29,-30,-31,-63,-18,4,-32,-36,4,4,-35,4,-46,-33,4,-63,-34,-37,]),'FLOAT':([0,2,10,11,12,18,25,26,27,39,47,48,71,73,74,80,98,119,133,135,138,139,141,143,],[5,5,5,-3,5,5,-29,-30,-31,-63,-18,5,-32,-36,5,5,-35,5,-46,-33,5,-63,-34,-37,]),'$end':([1,2,6,11,47,],[0,-2,-1,-3,-18,]),'ID':([3,4,5,12,14,18,25,26,27,28,31,33,34,35,38,39,43,47,48,50,51,52,53,54,55,59,66,68,71,73,74,75,77,79,88,89,98,103,114,117,118,119,133,135,138,139,141,143,],[8,-4,-5,32,8,32,-29,-30,-31,8,32,32,-17,8,32,-63,8,-18,32,32,32,32,32,32,32,32,32,-16,-32,-36,32,32,32,32,8,8,-35,8,32,32,32,32,-46,-33,32,-63,-34,-37,]),'MULTIPLY':([4,5,8,12,14,18,21,22,23,25,26,27,28,29,31,32,33,34,35,36,37,38,39,42,47,48,50,51,52,53,54,55,59,60,62,63,64,65,66,67,69,70,71,73,74,75,76,77,78,79,82,83,84,85,86,87,88,89,90,91,93,95,98,101,103,104,106,107,108,109,114,116,117,118,119,123,125,126,128,131,133,134,135,138,139,141,143,],[-4,-5,-6,34,34,34,-76,-75,52,-29,-30,-31,34,-74,34,-6,34,34,34,-77,-78,34,-63,-11,-18,34,34,34,34,34,34,34,34,-72,52,-74,-75,-76,34,52,-73,52,-32,-36,34,34,-12,34,-13,34,52,52,-66,-67,52,52,34,34,52,-49,-70,52,-35,52,34,-76,-75,52,52,52,34,-57,34,34,34,-15,-56,52,52,52,-46,-14,-33,34,-63,-34,-37,]),'LPAREN':([7,8,12,18,25,26,27,30,31,32,33,38,39,40,41,44,47,48,50,51,52,53,54,55,59,66,71,73,74,75,77,79,97,98,114,117,118,119,133,135,138,139,141,143,],[10,-6,31,31,-29,-30,-31,61,31,66,31,31,-63,74,75,79,-18,31,31,31,31,31,31,31,31,31,-32,-36,31,31,31,31,118,-35,31,31,31,31,-46,-33,31,-63,-34,-37,]),'SQ_LBRACKET':([8,32,42,123,],[-6,-6,77,77,]),'COMMA':([8,32,36,37,42,46,57,58,60,63,64,65,67,69,76,78,82,83,84,85,86,87,90,91,92,93,95,116,120,121,123,125,126,134,],[-6,-6,-77,-78,-11,80,88,89,-72,-74,-75,-76,-71,-73,-12,-13,-64,-65,-66,-67,-68,-69,-48,-49,114,-70,117,-57,88,89,-15,-56,114,-14,]),'RPAREN':([8,13,15,20,21,22,24,32,36,37,38,42,46,56,57,58,60,62,63,64,65,66,67,69,70,76,78,82,83,84,85,86,87,90,91,92,93,94,95,96,107,109,110,111,112,113,115,116,117,123,125,126,127,128,130,131,132,134,136,138,140,],[-6,45,-10,-24,-25,-26,-28,-6,-77,-78,-55,-11,-9,-47,-51,-53,-72,93,-74,-75,-76,-63,-71,-73,-54,-12,-13,-64,-65,-66,-67,-68,-69,-48,-49,-63,-70,116,-61,-62,122,124,-8,-50,-52,125,-59,-57,-63,-15,-56,-63,-60,137,-41,-27,-43,-14,-58,-63,142,]),'EQ':([8,29,32,42,58,63,76,78,121,123,134,],[-6,59,-6,-11,59,59,-12,-13,59,-15,-14,]),'SEMI':([8,17,20,21,22,23,24,29,32,36,37,38,42,56,57,58,60,63,64,65,67,69,70,74,76,78,82,83,84,85,86,87,90,91,93,99,100,101,102,104,105,106,111,112,116,119,120,121,123,125,129,130,131,132,134,],[-6,48,-24,-25,-26,-27,-28,-74,-6,-77,-78,-55,-11,-47,-51,-53,-72,-74,-75,-76,-71,-73,-54,-63,-12,-13,-64,-65,-66,-67,-68,-69,-48,-49,-70,119,-38,-27,-40,-25,-45,-26,-50,-52,-57,-63,-44,-53,-15,-56,138,-41,-27,-43,-14,]),'RBRACE':([8,12,16,17,18,19,20,21,22,23,24,25,26,27,29,32,36,37,38,39,42,47,48,49,56,57,58,60,63,64,65,67,69,70,71,73,76,78,81,82,83,84,85,86,87,90,91,93,98,111,112,116,123,125,133,134,135,139,141,143,],[-6,-63,47,-19,-20,-23,-24,-25,-26,-27,-28,-29,-30,-31,-74,-6,-77,-78,-55,-63,-11,-18,-63,-22,-47,-51,-53,-72,-74,-75,-76,-71,-73,-54,-32,-36,-12,-13,-21,-64,-65,-66,-67,-68,-69,-48,-49,-70,-35,-50,-52,-57,-15,-56,-46,-14,-33,-63,-34,-37,]),'PLUS':([8,21,22,23,29,32,36,37,42,60,62,63,64,65,67,69,70,76,78,82,83,84,85,86,87,90,91,93,95,101,104,106,107,108,109,116,123,125,126,128,131,134,],[-6,-76,-75,50,-74,-6,-77,-78,-11,-72,50,-74,-75,-76,-71,-73,50,-12,-13,-64,-65,-66,-67,50,50,50,-49,-70,50,50,-76,-75,50,50,50,-57,-15,-56,50,50,50,-14,]),'MINUS':([8,12,18,21,22,23,25,26,27,29,31,32,33,36,37,38,39,42,47,48,50,51,52,53,54,55,59,60,62,63,64,65,66,67,69,70,71,73,74,75,76,77,78,79,82,83,84,85,86,87,90,91,93,95,98,101,104,106,107,108,109,114,116,117,118,119,123,125,126,128,131,133,134,135,138,139,141,143,],[-6,33,33,-76,-75,51,-29,-30,-31,-74,33,-6,33,-77,-78,33,-63,-11,-18,33,33,33,33,33,33,33,33,-72,51,-74,-75,-76,33,-71,-73,51,-32,-36,33,33,-12,33,-13,33,-64,-65,-66,-67,51,51,51,-49,-70,51,-35,51,-76,-75,51,51,51,33,-57,33,33,33,-15,-56,51,51,51,-46,-14,-33,33,-63,-34,-37,]),'DIVIDE':([8,21,22,23,29,32,36,37,42,60,62,63,64,65,67,69,70,76,78,82,83,84,85,86,87,90,91,93,95,101,104,106,107,108,109,116,123,125,126,128,131,134,],[-6,-76,-75,53,-74,-6,-77,-78,-11,-72,53,-74,-75,-76,53,-73,53,-12,-13,53,53,-66,-67,53,53,53,-49,-70,53,53,-76,-75,53,53,53,-57,-15,-56,53,53,53,-14,]),'LESS':([8,21,22,23,29,32,36,37,42,60,62,63,64,65,67,69,70,76,78,82,83,84,85,86,87,90,91,93,95,101,104,106,107,108,109,116,123,125,126,128,131,134,],[-6,-76,-75,54,-74,-6,-77,-78,-11,-72,54,-74,-75,-76,-71,-73,54,-12,-13,-64,-65,-66,-67,-68,-69,54,-49,-70,54,54,-76,-75,54,54,54,-57,-15,-56,54,54,54,-14,]),'GREATER':([8,21,22,23,29,32,36,37,42,60,62,63,64,65,67,69,70,76,78,82,83,84,85,86,87,90,91,93,95,101,104,106,107,108,109,116,123,125,126,128,131,134,],[-6,-76,-75,55,-74,-6,-77,-78,-11,-72,55,-74,-75,-76,-71,-73,55,-12,-13,-64,-65,-66,-67,-68,-69,55,-49,-70,55,55,-76,-75,55,55,55,-57,-15,-56,55,55,55,-14,]),'SQ_RBRACKET':([8,32,36,37,42,60,63,64,65,67,69,76,78,82,83,84,85,86,87,90,91,93,108,116,123,125,134,],[-6,-6,-77,-78,-11,-72,-74,-75,-76,-71,-73,-12,-13,-64,-65,-66,-67,-68,-69,-48,-49,-70,123,-57,-15,-56,-14,]),'DOUBLEPLUS':([8,12,18,25,26,27,29,31,32,33,38,39,42,47,48,50,51,52,53,54,55,59,63,66,71,73,74,75,76,77,78,79,98,114,117,118,119,123,133,134,135,138,139,141,143,],[-6,35,35,-29,-30,-31,60,35,-6,35,35,-63,-11,-18,35,35,35,35,35,35,35,35,60,35,-32,-36,35,35,-12,35,-13,35,-35,35,35,35,35,-15,-46,-14,-33,35,-63,-34,-37,]),'LBRACE':([9,45,72,122,124,137,142,],[12,-7,12,12,12,12,12,]),'VOID':([10,80,],[15,15,]),'PRINTF':([12,18,25,26,27,31,33,38,39,47,48,50,51,52,53,54,55,59,66,71,73,74,75,77,79,98,114,117,118,119,133,135,138,139,141,143,],[30,30,-29,-30,-31,30,30,30,-63,-18,30,30,30,30,30,30,30,30,30,-32,-36,30,30,30,30,-35,30,30,30,30,-46,-33,30,-63,-34,-37,]),'INT_VAL':([12,18,25,26,27,31,33,38,39,47,48,50,51,52,53,54,55,59,66,71,73,74,75,77,79,98,114,117,118,119,133,135,138,139,141,143,],[36,36,-29,-30,-31,36,36,36,-63,-18,36,36,36,36,36,36,36,36,36,-32,-36,36,36,36,36,-35,36,36,36,36,-46,-33,36,-63,-34,-37,]),'FLOAT_VAL':([12,18,25,26,27,31,33,38,39,47,48,50,51,52,53,54,55,59,66,71,73,74,75,77,79,98,114,117,118,119,133,135,138,139,141,143,],[37,37,-29,-30,-31,37,37,37,-63,-18,37,37,37,37,37,37,37,37,37,-32,-36,37,37,37,37,-35,37,37,37,37,-46,-33,37,-63,-34,-37,]),'RETURN':([12,18,25,26,27,39,47,48,71,73,74,98,119,133,135,138,139,141,143,],[38,38,-29,-30,-31,-63,-18,38,-32,-36,38,-35,38,-46,-33,38,-63,-34,-37,]),'FOR':([12,18,25,26,27,39,47,48,71,73,98,133,135,139,141,143,],[40,40,-29,-30,-31,-63,-18,40,-32,-36,-35,-46,-33,-63,-34,-37,]),'WHILE':([12,18,25,26,27,39,47,48,71,73,98,133,135,139,141,143,],[41,41,-29,-30,-31,-63,-18,41,-32,-36,-35,-46,-33,-63,-34,-37,]),'IF':([12,18,25,26,27,39,47,48,71,72,73,98,133,135,139,141,143,],[44,44,-29,-30,-31,-63,-18,44,-32,97,-36,-35,-46,-33,-63,-34,-37,]),'ELSE':([39,47,135,139,],[72,-18,-33,72,]),'STRING':([61,],[92,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,2,],[1,6,]),'function':([0,2,],[2,2,]),'type':([0,2,10,12,18,48,74,80,119,138,],[3,3,14,28,28,28,103,14,28,28,]),'id':([3,12,14,18,28,31,33,35,38,43,48,50,51,52,53,54,55,59,66,74,75,77,79,88,89,103,114,117,118,119,138,],[7,42,42,42,42,42,42,42,42,78,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'variable_declaration':([7,],[9,]),'block':([9,72,122,124,137,142,],[11,98,133,135,139,143,]),'declarations':([10,80,],[13,110,]),'statements':([12,18,48,],[16,49,81,]),'semi_statement':([12,18,48,74,119,138,],[17,17,17,105,130,130,]),'non_semi_statement':([12,18,48,],[18,18,18,]),'empty':([12,18,39,48,66,74,92,117,119,126,138,139,],[19,19,73,19,96,102,115,96,132,115,132,73,]),'var_declaration':([12,18,48,74,119,138,],[20,20,20,20,20,20,]),'var_assignment':([12,18,28,31,33,38,48,50,51,52,53,54,55,59,66,74,75,77,79,88,89,103,114,117,118,119,138,],[21,21,57,65,65,65,21,65,65,65,65,65,65,65,65,104,65,65,65,57,57,120,65,65,65,21,21,]),'function_app':([12,18,31,33,38,48,50,51,52,53,54,55,59,66,74,75,77,79,114,117,118,119,138,],[22,22,64,64,64,22,64,64,64,64,64,64,91,64,106,64,64,64,64,64,64,22,22,]),'expression':([12,18,31,33,38,48,50,51,52,53,54,55,59,66,74,75,77,79,114,117,118,119,138,],[23,23,62,67,70,23,82,83,84,85,86,87,90,95,101,107,108,109,126,95,128,131,131,]),'return_expr':([12,18,48,74,119,138,],[24,24,24,24,24,24,]),'conditional':([12,18,48,],[25,25,25,]),'for':([12,18,48,],[26,26,26,]),'while':([12,18,48,],[27,27,27,]),'id_ptr_or_array':([12,14,18,28,31,33,35,38,48,50,51,52,53,54,55,59,66,74,75,77,79,88,89,103,114,117,118,119,138,],[29,46,29,58,63,63,69,63,29,63,63,63,63,63,63,63,63,63,63,63,63,58,58,121,63,63,63,63,63,]),'if':([12,18,48,],[39,39,39,]),'ptrs':([12,14,18,28,31,33,34,35,38,48,50,51,52,53,54,55,59,66,74,75,77,79,88,89,103,114,117,118,119,138,],[43,43,43,43,43,43,68,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'var_and_assign':([28,88,89,103,],[56,111,112,56,]),'elif_else':([39,139,],[71,141,]),'array_decs':([42,123,],[76,134,]),'arguments':([66,117,],[94,127,]),'loop_init_or_empty':([74,],[99,]),'loop_init':([74,],[100,]),'print_formats':([92,126,],[113,136,]),'semi_statement_or_empty':([119,138,],[129,140,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> function program','program',2,'p_program','lex_yacc.py',226),
  ('program -> function','program',1,'p_program','lex_yacc.py',227),
  ('function -> type id variable_declaration block','function',4,'p_function','lex_yacc.py',240),
  ('type -> INT','type',1,'p_type','lex_yacc.py',250),
  ('type -> FLOAT','type',1,'p_type','lex_yacc.py',251),
  ('id -> ID','id',1,'p_id','lex_yacc.py',261),
  ('variable_declaration -> LPAREN declarations RPAREN','variable_declaration',3,'p_varaible_declaration','lex_yacc.py',271),
  ('declarations -> type id_ptr_or_array COMMA declarations','declarations',4,'p_declarations','lex_yacc.py',281),
  ('declarations -> type id_ptr_or_array','declarations',2,'p_declarations','lex_yacc.py',282),
  ('declarations -> VOID','declarations',1,'p_declarations','lex_yacc.py',283),
  ('id_ptr_or_array -> id','id_ptr_or_array',1,'p_id_ptr_or_array','lex_yacc.py',308),
  ('id_ptr_or_array -> id array_decs','id_ptr_or_array',2,'p_id_ptr_or_array','lex_yacc.py',309),
  ('id_ptr_or_array -> ptrs id','id_ptr_or_array',2,'p_id_ptr_or_array','lex_yacc.py',310),
  ('array_decs -> SQ_LBRACKET expression SQ_RBRACKET array_decs','array_decs',4,'p_array_decs','lex_yacc.py',323),
  ('array_decs -> SQ_LBRACKET expression SQ_RBRACKET','array_decs',3,'p_array_decs','lex_yacc.py',324),
  ('ptrs -> MULTIPLY ptrs','ptrs',2,'p_ptrs','lex_yacc.py',334),
  ('ptrs -> MULTIPLY','ptrs',1,'p_ptrs','lex_yacc.py',335),
  ('block -> LBRACE statements RBRACE','block',3,'p_block','lex_yacc.py',345),
  ('statements -> semi_statement','statements',1,'p_statements','lex_yacc.py',355),
  ('statements -> non_semi_statement','statements',1,'p_statements','lex_yacc.py',356),
  ('statements -> semi_statement SEMI statements','statements',3,'p_statements','lex_yacc.py',357),
  ('statements -> non_semi_statement statements','statements',2,'p_statements','lex_yacc.py',358),
  ('statements -> empty','statements',1,'p_statements','lex_yacc.py',359),
  ('semi_statement -> var_declaration','semi_statement',1,'p_semi_statement','lex_yacc.py',383),
  ('semi_statement -> var_assignment','semi_statement',1,'p_semi_statement','lex_yacc.py',384),
  ('semi_statement -> function_app','semi_statement',1,'p_semi_statement','lex_yacc.py',385),
  ('semi_statement -> expression','semi_statement',1,'p_semi_statement','lex_yacc.py',386),
  ('semi_statement -> return_expr','semi_statement',1,'p_semi_statement','lex_yacc.py',387),
  ('non_semi_statement -> conditional','non_semi_statement',1,'p_non_semi_statement','lex_yacc.py',397),
  ('non_semi_statement -> for','non_semi_statement',1,'p_non_semi_statement','lex_yacc.py',398),
  ('non_semi_statement -> while','non_semi_statement',1,'p_non_semi_statement','lex_yacc.py',399),
  ('conditional -> if elif_else','conditional',2,'p_conditional','lex_yacc.py',410),
  ('if -> IF LPAREN expression RPAREN block','if',5,'p_if','lex_yacc.py',422),
  ('elif_else -> ELSE IF LPAREN expression RPAREN block elif_else','elif_else',7,'p_elif_else','lex_yacc.py',431),
  ('elif_else -> ELSE block','elif_else',2,'p_elif_else','lex_yacc.py',432),
  ('elif_else -> empty','elif_else',1,'p_elif_else','lex_yacc.py',433),
  ('for -> FOR LPAREN loop_init_or_empty SEMI semi_statement_or_empty SEMI semi_statement_or_empty RPAREN block','for',9,'p_for','lex_yacc.py',451),
  ('loop_init_or_empty -> loop_init','loop_init_or_empty',1,'p_loop_init_or_empty','lex_yacc.py',461),
  ('loop_init_or_empty -> expression','loop_init_or_empty',1,'p_loop_init_or_empty','lex_yacc.py',462),
  ('loop_init_or_empty -> empty','loop_init_or_empty',1,'p_loop_init_or_empty','lex_yacc.py',463),
  ('semi_statement_or_empty -> semi_statement','semi_statement_or_empty',1,'p_semi_statement_or_empty','lex_yacc.py',473),
  ('semi_statement_or_empty -> expression','semi_statement_or_empty',1,'p_semi_statement_or_empty','lex_yacc.py',474),
  ('semi_statement_or_empty -> empty','semi_statement_or_empty',1,'p_semi_statement_or_empty','lex_yacc.py',475),
  ('loop_init -> type var_assignment','loop_init',2,'p_loop_init','lex_yacc.py',485),
  ('loop_init -> semi_statement','loop_init',1,'p_loop_init','lex_yacc.py',486),
  ('while -> WHILE LPAREN expression RPAREN block','while',5,'p_while','lex_yacc.py',499),
  ('var_declaration -> type var_and_assign','var_declaration',2,'p_var_declaration','lex_yacc.py',509),
  ('var_assignment -> id_ptr_or_array EQ expression','var_assignment',3,'p_var_assignment','lex_yacc.py',549),
  ('var_assignment -> id_ptr_or_array EQ function_app','var_assignment',3,'p_var_assignment','lex_yacc.py',550),
  ('var_and_assign -> var_assignment COMMA var_and_assign','var_and_assign',3,'p_var_and_assign','lex_yacc.py',560),
  ('var_and_assign -> var_assignment','var_and_assign',1,'p_var_and_assign','lex_yacc.py',561),
  ('var_and_assign -> id_ptr_or_array COMMA var_and_assign','var_and_assign',3,'p_var_and_assign','lex_yacc.py',562),
  ('var_and_assign -> id_ptr_or_array','var_and_assign',1,'p_var_and_assign','lex_yacc.py',563),
  ('return_expr -> RETURN expression','return_expr',2,'p_return_expr','lex_yacc.py',576),
  ('return_expr -> RETURN','return_expr',1,'p_return_expr','lex_yacc.py',577),
  ('function_app -> PRINTF LPAREN STRING print_formats RPAREN','function_app',5,'p_function_app','lex_yacc.py',584),
  ('function_app -> ID LPAREN arguments RPAREN','function_app',4,'p_function_app','lex_yacc.py',585),
  ('print_formats -> COMMA expression print_formats','print_formats',3,'p_print_formats','lex_yacc.py',604),
  ('print_formats -> empty','print_formats',1,'p_print_formats','lex_yacc.py',605),
  ('arguments -> expression COMMA arguments','arguments',3,'p_arguments','lex_yacc.py',621),
  ('arguments -> expression','arguments',1,'p_arguments','lex_yacc.py',622),
  ('arguments -> empty','arguments',1,'p_arguments','lex_yacc.py',623),
  ('empty -> <empty>','empty',0,'p_empty','lex_yacc.py',639),
  ('expression -> expression PLUS expression','expression',3,'p_expression','lex_yacc.py',649),
  ('expression -> expression MINUS expression','expression',3,'p_expression','lex_yacc.py',650),
  ('expression -> expression MULTIPLY expression','expression',3,'p_expression','lex_yacc.py',651),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','lex_yacc.py',652),
  ('expression -> expression LESS expression','expression',3,'p_expression','lex_yacc.py',653),
  ('expression -> expression GREATER expression','expression',3,'p_expression','lex_yacc.py',654),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression','lex_yacc.py',655),
  ('expression -> MINUS expression','expression',2,'p_expression','lex_yacc.py',656),
  ('expression -> id_ptr_or_array DOUBLEPLUS','expression',2,'p_expression','lex_yacc.py',657),
  ('expression -> DOUBLEPLUS id_ptr_or_array','expression',2,'p_expression','lex_yacc.py',658),
  ('expression -> id_ptr_or_array','expression',1,'p_expression','lex_yacc.py',659),
  ('expression -> function_app','expression',1,'p_expression','lex_yacc.py',660),
  ('expression -> var_assignment','expression',1,'p_expression','lex_yacc.py',661),
  ('expression -> INT_VAL','expression',1,'p_expression','lex_yacc.py',662),
  ('expression -> FLOAT_VAL','expression',1,'p_expression','lex_yacc.py',663),
]
