Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    PTR_AMP

Grammar

Rule 0     S' -> program
Rule 1     program -> function program
Rule 2     program -> function
Rule 3     function -> type id variable_declaration block
Rule 4     type -> INT
Rule 5     type -> FLOAT
Rule 6     id -> ID
Rule 7     variable_declaration -> LPAREN declarations RPAREN
Rule 8     declarations -> type id_ptr_or_array COMMA declarations
Rule 9     declarations -> type id_ptr_or_array
Rule 10    declarations -> VOID
Rule 11    id_ptr_or_array -> id
Rule 12    id_ptr_or_array -> id array_decs
Rule 13    id_ptr_or_array -> ptrs id
Rule 14    array_decs -> SQ_LBRACKET expression SQ_RBRACKET array_decs
Rule 15    array_decs -> SQ_LBRACKET expression SQ_RBRACKET
Rule 16    ptrs -> MULTIPLY ptrs
Rule 17    ptrs -> MULTIPLY
Rule 18    block -> LBRACE statements RBRACE
Rule 19    statements -> semi_statement
Rule 20    statements -> non_semi_statement
Rule 21    statements -> semi_statement SEMI statements
Rule 22    statements -> non_semi_statement statements
Rule 23    statements -> empty
Rule 24    semi_statement -> var_declaration
Rule 25    semi_statement -> var_assignment
Rule 26    semi_statement -> function_app
Rule 27    semi_statement -> expression
Rule 28    semi_statement -> return_expr
Rule 29    non_semi_statement -> conditional
Rule 30    non_semi_statement -> for
Rule 31    non_semi_statement -> while
Rule 32    conditional -> if elif_else
Rule 33    if -> IF LPAREN expression RPAREN block
Rule 34    elif_else -> ELSE IF LPAREN expression RPAREN block elif_else
Rule 35    elif_else -> ELSE block
Rule 36    elif_else -> empty
Rule 37    for -> FOR LPAREN loop_init_or_empty SEMI semi_statement_or_empty SEMI semi_statement_or_empty RPAREN block
Rule 38    loop_init_or_empty -> loop_init
Rule 39    loop_init_or_empty -> expression
Rule 40    loop_init_or_empty -> empty
Rule 41    semi_statement_or_empty -> semi_statement
Rule 42    semi_statement_or_empty -> expression
Rule 43    semi_statement_or_empty -> empty
Rule 44    loop_init -> type var_assignment
Rule 45    loop_init -> semi_statement
Rule 46    while -> WHILE LPAREN expression RPAREN block
Rule 47    var_declaration -> type var_and_assign
Rule 48    var_assignment -> id_ptr_or_array EQ expression
Rule 49    var_assignment -> id_ptr_or_array EQ function_app
Rule 50    var_and_assign -> var_assignment COMMA var_and_assign
Rule 51    var_and_assign -> var_assignment
Rule 52    var_and_assign -> id_ptr_or_array COMMA var_and_assign
Rule 53    var_and_assign -> id_ptr_or_array
Rule 54    return_expr -> RETURN expression
Rule 55    return_expr -> RETURN
Rule 56    function_app -> PRINTF LPAREN STRING print_formats RPAREN
Rule 57    function_app -> ID LPAREN arguments RPAREN
Rule 58    print_formats -> COMMA expression print_formats
Rule 59    print_formats -> expression
Rule 60    print_formats -> empty
Rule 61    arguments -> expression COMMA arguments
Rule 62    arguments -> expression
Rule 63    arguments -> empty
Rule 64    empty -> <empty>
Rule 65    expression -> expression PLUS expression
Rule 66    expression -> expression MINUS expression
Rule 67    expression -> expression MULTIPLY expression
Rule 68    expression -> expression DIVIDE expression
Rule 69    expression -> expression LESS expression
Rule 70    expression -> expression GREATER expression
Rule 71    expression -> LPAREN expression RPAREN
Rule 72    expression -> MINUS expression
Rule 73    expression -> id_ptr_or_array DOUBLEPLUS
Rule 74    expression -> DOUBLEPLUS id_ptr_or_array
Rule 75    expression -> id_ptr_or_array
Rule 76    expression -> function_app
Rule 77    expression -> var_assignment
Rule 78    expression -> INT_VAL
Rule 79    expression -> FLOAT_VAL

Terminals, with rules where they appear

COMMA                : 8 50 52 58 61
DIVIDE               : 68
DOUBLEPLUS           : 73 74
ELSE                 : 34 35
EQ                   : 48 49
FLOAT                : 5
FLOAT_VAL            : 79
FOR                  : 37
GREATER              : 70
ID                   : 6 57
IF                   : 33 34
INT                  : 4
INT_VAL              : 78
LBRACE               : 18
LESS                 : 69
LPAREN               : 7 33 34 37 46 56 57 71
MINUS                : 66 72
MULTIPLY             : 16 17 67
PLUS                 : 65
PRINTF               : 56
PTR_AMP              : 
RBRACE               : 18
RETURN               : 54 55
RPAREN               : 7 33 34 37 46 56 57 71
SEMI                 : 21 37 37
SQ_LBRACKET          : 14 15
SQ_RBRACKET          : 14 15
STRING               : 56
VOID                 : 10
WHILE                : 46
error                : 

Nonterminals, with rules where they appear

arguments            : 57 61
array_decs           : 12 14
block                : 3 33 34 35 37 46
conditional          : 29
declarations         : 7 8
elif_else            : 32 34
empty                : 23 36 40 43 60 63
expression           : 14 15 27 33 34 39 42 46 48 54 58 59 61 62 65 65 66 66 67 67 68 68 69 69 70 70 71 72
for                  : 30
function             : 1 2
function_app         : 26 49 76
id                   : 3 11 12 13
id_ptr_or_array      : 8 9 48 49 52 53 73 74 75
if                   : 32
loop_init            : 38
loop_init_or_empty   : 37
non_semi_statement   : 20 22
print_formats        : 56 58
program              : 1 0
ptrs                 : 13 16
return_expr          : 28
semi_statement       : 19 21 41 45
semi_statement_or_empty : 37 37
statements           : 18 21 22
type                 : 3 8 9 44 47
var_and_assign       : 47 50 52
var_assignment       : 25 44 50 51 77
var_declaration      : 24
variable_declaration : 3
while                : 31

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . function program
    (2) program -> . function
    (3) function -> . type id variable_declaration block
    (4) type -> . INT
    (5) type -> . FLOAT

    INT             shift and go to state 4
    FLOAT           shift and go to state 5

    program                        shift and go to state 1
    function                       shift and go to state 2
    type                           shift and go to state 3

state 1

    (0) S' -> program .



state 2

    (1) program -> function . program
    (2) program -> function .
    (1) program -> . function program
    (2) program -> . function
    (3) function -> . type id variable_declaration block
    (4) type -> . INT
    (5) type -> . FLOAT

    $end            reduce using rule 2 (program -> function .)
    INT             shift and go to state 4
    FLOAT           shift and go to state 5

    function                       shift and go to state 2
    program                        shift and go to state 6
    type                           shift and go to state 3

state 3

    (3) function -> type . id variable_declaration block
    (6) id -> . ID

    ID              shift and go to state 8

    id                             shift and go to state 7

state 4

    (4) type -> INT .

    ID              reduce using rule 4 (type -> INT .)
    MULTIPLY        reduce using rule 4 (type -> INT .)


state 5

    (5) type -> FLOAT .

    ID              reduce using rule 5 (type -> FLOAT .)
    MULTIPLY        reduce using rule 5 (type -> FLOAT .)


state 6

    (1) program -> function program .

    $end            reduce using rule 1 (program -> function program .)


state 7

    (3) function -> type id . variable_declaration block
    (7) variable_declaration -> . LPAREN declarations RPAREN

    LPAREN          shift and go to state 10

    variable_declaration           shift and go to state 9

state 8

    (6) id -> ID .

    LPAREN          reduce using rule 6 (id -> ID .)
    SQ_LBRACKET     reduce using rule 6 (id -> ID .)
    COMMA           reduce using rule 6 (id -> ID .)
    RPAREN          reduce using rule 6 (id -> ID .)
    EQ              reduce using rule 6 (id -> ID .)
    SEMI            reduce using rule 6 (id -> ID .)
    RBRACE          reduce using rule 6 (id -> ID .)
    PLUS            reduce using rule 6 (id -> ID .)
    MINUS           reduce using rule 6 (id -> ID .)
    MULTIPLY        reduce using rule 6 (id -> ID .)
    DIVIDE          reduce using rule 6 (id -> ID .)
    LESS            reduce using rule 6 (id -> ID .)
    GREATER         reduce using rule 6 (id -> ID .)
    SQ_RBRACKET     reduce using rule 6 (id -> ID .)
    DOUBLEPLUS      reduce using rule 6 (id -> ID .)
    INT_VAL         reduce using rule 6 (id -> ID .)
    FLOAT_VAL       reduce using rule 6 (id -> ID .)
    PRINTF          reduce using rule 6 (id -> ID .)
    ID              reduce using rule 6 (id -> ID .)


state 9

    (3) function -> type id variable_declaration . block
    (18) block -> . LBRACE statements RBRACE

    LBRACE          shift and go to state 12

    block                          shift and go to state 11

state 10

    (7) variable_declaration -> LPAREN . declarations RPAREN
    (8) declarations -> . type id_ptr_or_array COMMA declarations
    (9) declarations -> . type id_ptr_or_array
    (10) declarations -> . VOID
    (4) type -> . INT
    (5) type -> . FLOAT

    VOID            shift and go to state 15
    INT             shift and go to state 4
    FLOAT           shift and go to state 5

    declarations                   shift and go to state 13
    type                           shift and go to state 14

state 11

    (3) function -> type id variable_declaration block .

    INT             reduce using rule 3 (function -> type id variable_declaration block .)
    FLOAT           reduce using rule 3 (function -> type id variable_declaration block .)
    $end            reduce using rule 3 (function -> type id variable_declaration block .)


state 12

    (18) block -> LBRACE . statements RBRACE
    (19) statements -> . semi_statement
    (20) statements -> . non_semi_statement
    (21) statements -> . semi_statement SEMI statements
    (22) statements -> . non_semi_statement statements
    (23) statements -> . empty
    (24) semi_statement -> . var_declaration
    (25) semi_statement -> . var_assignment
    (26) semi_statement -> . function_app
    (27) semi_statement -> . expression
    (28) semi_statement -> . return_expr
    (29) non_semi_statement -> . conditional
    (30) non_semi_statement -> . for
    (31) non_semi_statement -> . while
    (64) empty -> .
    (47) var_declaration -> . type var_and_assign
    (48) var_assignment -> . id_ptr_or_array EQ expression
    (49) var_assignment -> . id_ptr_or_array EQ function_app
    (56) function_app -> . PRINTF LPAREN STRING print_formats RPAREN
    (57) function_app -> . ID LPAREN arguments RPAREN
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression MULTIPLY expression
    (68) expression -> . expression DIVIDE expression
    (69) expression -> . expression LESS expression
    (70) expression -> . expression GREATER expression
    (71) expression -> . LPAREN expression RPAREN
    (72) expression -> . MINUS expression
    (73) expression -> . id_ptr_or_array DOUBLEPLUS
    (74) expression -> . DOUBLEPLUS id_ptr_or_array
    (75) expression -> . id_ptr_or_array
    (76) expression -> . function_app
    (77) expression -> . var_assignment
    (78) expression -> . INT_VAL
    (79) expression -> . FLOAT_VAL
    (54) return_expr -> . RETURN expression
    (55) return_expr -> . RETURN
    (32) conditional -> . if elif_else
    (37) for -> . FOR LPAREN loop_init_or_empty SEMI semi_statement_or_empty SEMI semi_statement_or_empty RPAREN block
    (46) while -> . WHILE LPAREN expression RPAREN block
    (4) type -> . INT
    (5) type -> . FLOAT
    (11) id_ptr_or_array -> . id
    (12) id_ptr_or_array -> . id array_decs
    (13) id_ptr_or_array -> . ptrs id
    (33) if -> . IF LPAREN expression RPAREN block
    (6) id -> . ID
    (16) ptrs -> . MULTIPLY ptrs
    (17) ptrs -> . MULTIPLY

    RBRACE          reduce using rule 64 (empty -> .)
    PRINTF          shift and go to state 30
    ID              shift and go to state 32
    LPAREN          shift and go to state 31
    MINUS           shift and go to state 33
    DOUBLEPLUS      shift and go to state 35
    INT_VAL         shift and go to state 36
    FLOAT_VAL       shift and go to state 37
    RETURN          shift and go to state 38
    FOR             shift and go to state 40
    WHILE           shift and go to state 41
    INT             shift and go to state 4
    FLOAT           shift and go to state 5
    IF              shift and go to state 44
    MULTIPLY        shift and go to state 34

    statements                     shift and go to state 16
    semi_statement                 shift and go to state 17
    non_semi_statement             shift and go to state 18
    empty                          shift and go to state 19
    var_declaration                shift and go to state 20
    var_assignment                 shift and go to state 21
    function_app                   shift and go to state 22
    expression                     shift and go to state 23
    return_expr                    shift and go to state 24
    conditional                    shift and go to state 25
    for                            shift and go to state 26
    while                          shift and go to state 27
    type                           shift and go to state 28
    id_ptr_or_array                shift and go to state 29
    if                             shift and go to state 39
    id                             shift and go to state 42
    ptrs                           shift and go to state 43

state 13

    (7) variable_declaration -> LPAREN declarations . RPAREN

    RPAREN          shift and go to state 45


state 14

    (8) declarations -> type . id_ptr_or_array COMMA declarations
    (9) declarations -> type . id_ptr_or_array
    (11) id_ptr_or_array -> . id
    (12) id_ptr_or_array -> . id array_decs
    (13) id_ptr_or_array -> . ptrs id
    (6) id -> . ID
    (16) ptrs -> . MULTIPLY ptrs
    (17) ptrs -> . MULTIPLY

    ID              shift and go to state 8
    MULTIPLY        shift and go to state 34

    id_ptr_or_array                shift and go to state 46
    id                             shift and go to state 42
    ptrs                           shift and go to state 43

state 15

    (10) declarations -> VOID .

    RPAREN          reduce using rule 10 (declarations -> VOID .)


state 16

    (18) block -> LBRACE statements . RBRACE

    RBRACE          shift and go to state 47


state 17

    (19) statements -> semi_statement .
    (21) statements -> semi_statement . SEMI statements

    RBRACE          reduce using rule 19 (statements -> semi_statement .)
    SEMI            shift and go to state 48


state 18

    (20) statements -> non_semi_statement .
    (22) statements -> non_semi_statement . statements
    (19) statements -> . semi_statement
    (20) statements -> . non_semi_statement
    (21) statements -> . semi_statement SEMI statements
    (22) statements -> . non_semi_statement statements
    (23) statements -> . empty
    (24) semi_statement -> . var_declaration
    (25) semi_statement -> . var_assignment
    (26) semi_statement -> . function_app
    (27) semi_statement -> . expression
    (28) semi_statement -> . return_expr
    (29) non_semi_statement -> . conditional
    (30) non_semi_statement -> . for
    (31) non_semi_statement -> . while
    (64) empty -> .
    (47) var_declaration -> . type var_and_assign
    (48) var_assignment -> . id_ptr_or_array EQ expression
    (49) var_assignment -> . id_ptr_or_array EQ function_app
    (56) function_app -> . PRINTF LPAREN STRING print_formats RPAREN
    (57) function_app -> . ID LPAREN arguments RPAREN
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression MULTIPLY expression
    (68) expression -> . expression DIVIDE expression
    (69) expression -> . expression LESS expression
    (70) expression -> . expression GREATER expression
    (71) expression -> . LPAREN expression RPAREN
    (72) expression -> . MINUS expression
    (73) expression -> . id_ptr_or_array DOUBLEPLUS
    (74) expression -> . DOUBLEPLUS id_ptr_or_array
    (75) expression -> . id_ptr_or_array
    (76) expression -> . function_app
    (77) expression -> . var_assignment
    (78) expression -> . INT_VAL
    (79) expression -> . FLOAT_VAL
    (54) return_expr -> . RETURN expression
    (55) return_expr -> . RETURN
    (32) conditional -> . if elif_else
    (37) for -> . FOR LPAREN loop_init_or_empty SEMI semi_statement_or_empty SEMI semi_statement_or_empty RPAREN block
    (46) while -> . WHILE LPAREN expression RPAREN block
    (4) type -> . INT
    (5) type -> . FLOAT
    (11) id_ptr_or_array -> . id
    (12) id_ptr_or_array -> . id array_decs
    (13) id_ptr_or_array -> . ptrs id
    (33) if -> . IF LPAREN expression RPAREN block
    (6) id -> . ID
    (16) ptrs -> . MULTIPLY ptrs
    (17) ptrs -> . MULTIPLY

  ! reduce/reduce conflict for RBRACE resolved using rule 20 (statements -> non_semi_statement .)
    RBRACE          reduce using rule 20 (statements -> non_semi_statement .)
    PRINTF          shift and go to state 30
    ID              shift and go to state 32
    LPAREN          shift and go to state 31
    MINUS           shift and go to state 33
    DOUBLEPLUS      shift and go to state 35
    INT_VAL         shift and go to state 36
    FLOAT_VAL       shift and go to state 37
    RETURN          shift and go to state 38
    FOR             shift and go to state 40
    WHILE           shift and go to state 41
    INT             shift and go to state 4
    FLOAT           shift and go to state 5
    IF              shift and go to state 44
    MULTIPLY        shift and go to state 34

  ! RBRACE          [ reduce using rule 64 (empty -> .) ]

    non_semi_statement             shift and go to state 18
    statements                     shift and go to state 49
    semi_statement                 shift and go to state 17
    empty                          shift and go to state 19
    var_declaration                shift and go to state 20
    var_assignment                 shift and go to state 21
    function_app                   shift and go to state 22
    expression                     shift and go to state 23
    return_expr                    shift and go to state 24
    conditional                    shift and go to state 25
    for                            shift and go to state 26
    while                          shift and go to state 27
    type                           shift and go to state 28
    id_ptr_or_array                shift and go to state 29
    if                             shift and go to state 39
    id                             shift and go to state 42
    ptrs                           shift and go to state 43

state 19

    (23) statements -> empty .

    RBRACE          reduce using rule 23 (statements -> empty .)


state 20

    (24) semi_statement -> var_declaration .

    SEMI            reduce using rule 24 (semi_statement -> var_declaration .)
    RBRACE          reduce using rule 24 (semi_statement -> var_declaration .)
    RPAREN          reduce using rule 24 (semi_statement -> var_declaration .)


state 21

    (25) semi_statement -> var_assignment .
    (77) expression -> var_assignment .

  ! reduce/reduce conflict for SEMI resolved using rule 25 (semi_statement -> var_assignment .)
  ! reduce/reduce conflict for RBRACE resolved using rule 25 (semi_statement -> var_assignment .)
  ! reduce/reduce conflict for RPAREN resolved using rule 25 (semi_statement -> var_assignment .)
    SEMI            reduce using rule 25 (semi_statement -> var_assignment .)
    RBRACE          reduce using rule 25 (semi_statement -> var_assignment .)
    RPAREN          reduce using rule 25 (semi_statement -> var_assignment .)
    PLUS            reduce using rule 77 (expression -> var_assignment .)
    MINUS           reduce using rule 77 (expression -> var_assignment .)
    MULTIPLY        reduce using rule 77 (expression -> var_assignment .)
    DIVIDE          reduce using rule 77 (expression -> var_assignment .)
    LESS            reduce using rule 77 (expression -> var_assignment .)
    GREATER         reduce using rule 77 (expression -> var_assignment .)

  ! SEMI            [ reduce using rule 77 (expression -> var_assignment .) ]
  ! RBRACE          [ reduce using rule 77 (expression -> var_assignment .) ]
  ! RPAREN          [ reduce using rule 77 (expression -> var_assignment .) ]


state 22

    (26) semi_statement -> function_app .
    (76) expression -> function_app .

  ! reduce/reduce conflict for SEMI resolved using rule 26 (semi_statement -> function_app .)
  ! reduce/reduce conflict for RBRACE resolved using rule 26 (semi_statement -> function_app .)
  ! reduce/reduce conflict for RPAREN resolved using rule 26 (semi_statement -> function_app .)
    SEMI            reduce using rule 26 (semi_statement -> function_app .)
    RBRACE          reduce using rule 26 (semi_statement -> function_app .)
    RPAREN          reduce using rule 26 (semi_statement -> function_app .)
    PLUS            reduce using rule 76 (expression -> function_app .)
    MINUS           reduce using rule 76 (expression -> function_app .)
    MULTIPLY        reduce using rule 76 (expression -> function_app .)
    DIVIDE          reduce using rule 76 (expression -> function_app .)
    LESS            reduce using rule 76 (expression -> function_app .)
    GREATER         reduce using rule 76 (expression -> function_app .)

  ! SEMI            [ reduce using rule 76 (expression -> function_app .) ]
  ! RBRACE          [ reduce using rule 76 (expression -> function_app .) ]
  ! RPAREN          [ reduce using rule 76 (expression -> function_app .) ]


state 23

    (27) semi_statement -> expression .
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . MULTIPLY expression
    (68) expression -> expression . DIVIDE expression
    (69) expression -> expression . LESS expression
    (70) expression -> expression . GREATER expression

    SEMI            reduce using rule 27 (semi_statement -> expression .)
    RBRACE          reduce using rule 27 (semi_statement -> expression .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    MULTIPLY        shift and go to state 52
    DIVIDE          shift and go to state 53
    LESS            shift and go to state 54
    GREATER         shift and go to state 55


state 24

    (28) semi_statement -> return_expr .

    SEMI            reduce using rule 28 (semi_statement -> return_expr .)
    RBRACE          reduce using rule 28 (semi_statement -> return_expr .)
    RPAREN          reduce using rule 28 (semi_statement -> return_expr .)


state 25

    (29) non_semi_statement -> conditional .

    PRINTF          reduce using rule 29 (non_semi_statement -> conditional .)
    ID              reduce using rule 29 (non_semi_statement -> conditional .)
    LPAREN          reduce using rule 29 (non_semi_statement -> conditional .)
    MINUS           reduce using rule 29 (non_semi_statement -> conditional .)
    DOUBLEPLUS      reduce using rule 29 (non_semi_statement -> conditional .)
    INT_VAL         reduce using rule 29 (non_semi_statement -> conditional .)
    FLOAT_VAL       reduce using rule 29 (non_semi_statement -> conditional .)
    RETURN          reduce using rule 29 (non_semi_statement -> conditional .)
    FOR             reduce using rule 29 (non_semi_statement -> conditional .)
    WHILE           reduce using rule 29 (non_semi_statement -> conditional .)
    INT             reduce using rule 29 (non_semi_statement -> conditional .)
    FLOAT           reduce using rule 29 (non_semi_statement -> conditional .)
    IF              reduce using rule 29 (non_semi_statement -> conditional .)
    MULTIPLY        reduce using rule 29 (non_semi_statement -> conditional .)
    RBRACE          reduce using rule 29 (non_semi_statement -> conditional .)


state 26

    (30) non_semi_statement -> for .

    PRINTF          reduce using rule 30 (non_semi_statement -> for .)
    ID              reduce using rule 30 (non_semi_statement -> for .)
    LPAREN          reduce using rule 30 (non_semi_statement -> for .)
    MINUS           reduce using rule 30 (non_semi_statement -> for .)
    DOUBLEPLUS      reduce using rule 30 (non_semi_statement -> for .)
    INT_VAL         reduce using rule 30 (non_semi_statement -> for .)
    FLOAT_VAL       reduce using rule 30 (non_semi_statement -> for .)
    RETURN          reduce using rule 30 (non_semi_statement -> for .)
    FOR             reduce using rule 30 (non_semi_statement -> for .)
    WHILE           reduce using rule 30 (non_semi_statement -> for .)
    INT             reduce using rule 30 (non_semi_statement -> for .)
    FLOAT           reduce using rule 30 (non_semi_statement -> for .)
    IF              reduce using rule 30 (non_semi_statement -> for .)
    MULTIPLY        reduce using rule 30 (non_semi_statement -> for .)
    RBRACE          reduce using rule 30 (non_semi_statement -> for .)


state 27

    (31) non_semi_statement -> while .

    PRINTF          reduce using rule 31 (non_semi_statement -> while .)
    ID              reduce using rule 31 (non_semi_statement -> while .)
    LPAREN          reduce using rule 31 (non_semi_statement -> while .)
    MINUS           reduce using rule 31 (non_semi_statement -> while .)
    DOUBLEPLUS      reduce using rule 31 (non_semi_statement -> while .)
    INT_VAL         reduce using rule 31 (non_semi_statement -> while .)
    FLOAT_VAL       reduce using rule 31 (non_semi_statement -> while .)
    RETURN          reduce using rule 31 (non_semi_statement -> while .)
    FOR             reduce using rule 31 (non_semi_statement -> while .)
    WHILE           reduce using rule 31 (non_semi_statement -> while .)
    INT             reduce using rule 31 (non_semi_statement -> while .)
    FLOAT           reduce using rule 31 (non_semi_statement -> while .)
    IF              reduce using rule 31 (non_semi_statement -> while .)
    MULTIPLY        reduce using rule 31 (non_semi_statement -> while .)
    RBRACE          reduce using rule 31 (non_semi_statement -> while .)


state 28

    (47) var_declaration -> type . var_and_assign
    (50) var_and_assign -> . var_assignment COMMA var_and_assign
    (51) var_and_assign -> . var_assignment
    (52) var_and_assign -> . id_ptr_or_array COMMA var_and_assign
    (53) var_and_assign -> . id_ptr_or_array
    (48) var_assignment -> . id_ptr_or_array EQ expression
    (49) var_assignment -> . id_ptr_or_array EQ function_app
    (11) id_ptr_or_array -> . id
    (12) id_ptr_or_array -> . id array_decs
    (13) id_ptr_or_array -> . ptrs id
    (6) id -> . ID
    (16) ptrs -> . MULTIPLY ptrs
    (17) ptrs -> . MULTIPLY

    ID              shift and go to state 8
    MULTIPLY        shift and go to state 34

    var_and_assign                 shift and go to state 56
    var_assignment                 shift and go to state 57
    id_ptr_or_array                shift and go to state 58
    id                             shift and go to state 42
    ptrs                           shift and go to state 43

state 29

    (48) var_assignment -> id_ptr_or_array . EQ expression
    (49) var_assignment -> id_ptr_or_array . EQ function_app
    (73) expression -> id_ptr_or_array . DOUBLEPLUS
    (75) expression -> id_ptr_or_array .

    EQ              shift and go to state 59
    DOUBLEPLUS      shift and go to state 60
    PLUS            reduce using rule 75 (expression -> id_ptr_or_array .)
    MINUS           reduce using rule 75 (expression -> id_ptr_or_array .)
    MULTIPLY        reduce using rule 75 (expression -> id_ptr_or_array .)
    DIVIDE          reduce using rule 75 (expression -> id_ptr_or_array .)
    LESS            reduce using rule 75 (expression -> id_ptr_or_array .)
    GREATER         reduce using rule 75 (expression -> id_ptr_or_array .)
    SEMI            reduce using rule 75 (expression -> id_ptr_or_array .)
    RBRACE          reduce using rule 75 (expression -> id_ptr_or_array .)


state 30

    (56) function_app -> PRINTF . LPAREN STRING print_formats RPAREN

    LPAREN          shift and go to state 61


state 31

    (71) expression -> LPAREN . expression RPAREN
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression MULTIPLY expression
    (68) expression -> . expression DIVIDE expression
    (69) expression -> . expression LESS expression
    (70) expression -> . expression GREATER expression
    (71) expression -> . LPAREN expression RPAREN
    (72) expression -> . MINUS expression
    (73) expression -> . id_ptr_or_array DOUBLEPLUS
    (74) expression -> . DOUBLEPLUS id_ptr_or_array
    (75) expression -> . id_ptr_or_array
    (76) expression -> . function_app
    (77) expression -> . var_assignment
    (78) expression -> . INT_VAL
    (79) expression -> . FLOAT_VAL
    (11) id_ptr_or_array -> . id
    (12) id_ptr_or_array -> . id array_decs
    (13) id_ptr_or_array -> . ptrs id
    (56) function_app -> . PRINTF LPAREN STRING print_formats RPAREN
    (57) function_app -> . ID LPAREN arguments RPAREN
    (48) var_assignment -> . id_ptr_or_array EQ expression
    (49) var_assignment -> . id_ptr_or_array EQ function_app
    (6) id -> . ID
    (16) ptrs -> . MULTIPLY ptrs
    (17) ptrs -> . MULTIPLY

    LPAREN          shift and go to state 31
    MINUS           shift and go to state 33
    DOUBLEPLUS      shift and go to state 35
    INT_VAL         shift and go to state 36
    FLOAT_VAL       shift and go to state 37
    PRINTF          shift and go to state 30
    ID              shift and go to state 32
    MULTIPLY        shift and go to state 34

    expression                     shift and go to state 62
    id_ptr_or_array                shift and go to state 63
    function_app                   shift and go to state 64
    var_assignment                 shift and go to state 65
    id                             shift and go to state 42
    ptrs                           shift and go to state 43

state 32

    (57) function_app -> ID . LPAREN arguments RPAREN
    (6) id -> ID .

  ! shift/reduce conflict for LPAREN resolved as shift
    LPAREN          shift and go to state 66
    SQ_LBRACKET     reduce using rule 6 (id -> ID .)
    EQ              reduce using rule 6 (id -> ID .)
    DOUBLEPLUS      reduce using rule 6 (id -> ID .)
    PLUS            reduce using rule 6 (id -> ID .)
    MINUS           reduce using rule 6 (id -> ID .)
    MULTIPLY        reduce using rule 6 (id -> ID .)
    DIVIDE          reduce using rule 6 (id -> ID .)
    LESS            reduce using rule 6 (id -> ID .)
    GREATER         reduce using rule 6 (id -> ID .)
    SEMI            reduce using rule 6 (id -> ID .)
    RBRACE          reduce using rule 6 (id -> ID .)
    RPAREN          reduce using rule 6 (id -> ID .)
    COMMA           reduce using rule 6 (id -> ID .)
    SQ_RBRACKET     reduce using rule 6 (id -> ID .)
    INT_VAL         reduce using rule 6 (id -> ID .)
    FLOAT_VAL       reduce using rule 6 (id -> ID .)
    PRINTF          reduce using rule 6 (id -> ID .)
    ID              reduce using rule 6 (id -> ID .)

  ! LPAREN          [ reduce using rule 6 (id -> ID .) ]


state 33

    (72) expression -> MINUS . expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression MULTIPLY expression
    (68) expression -> . expression DIVIDE expression
    (69) expression -> . expression LESS expression
    (70) expression -> . expression GREATER expression
    (71) expression -> . LPAREN expression RPAREN
    (72) expression -> . MINUS expression
    (73) expression -> . id_ptr_or_array DOUBLEPLUS
    (74) expression -> . DOUBLEPLUS id_ptr_or_array
    (75) expression -> . id_ptr_or_array
    (76) expression -> . function_app
    (77) expression -> . var_assignment
    (78) expression -> . INT_VAL
    (79) expression -> . FLOAT_VAL
    (11) id_ptr_or_array -> . id
    (12) id_ptr_or_array -> . id array_decs
    (13) id_ptr_or_array -> . ptrs id
    (56) function_app -> . PRINTF LPAREN STRING print_formats RPAREN
    (57) function_app -> . ID LPAREN arguments RPAREN
    (48) var_assignment -> . id_ptr_or_array EQ expression
    (49) var_assignment -> . id_ptr_or_array EQ function_app
    (6) id -> . ID
    (16) ptrs -> . MULTIPLY ptrs
    (17) ptrs -> . MULTIPLY

    LPAREN          shift and go to state 31
    MINUS           shift and go to state 33
    DOUBLEPLUS      shift and go to state 35
    INT_VAL         shift and go to state 36
    FLOAT_VAL       shift and go to state 37
    PRINTF          shift and go to state 30
    ID              shift and go to state 32
    MULTIPLY        shift and go to state 34

    expression                     shift and go to state 67
    id_ptr_or_array                shift and go to state 63
    function_app                   shift and go to state 64
    var_assignment                 shift and go to state 65
    id                             shift and go to state 42
    ptrs                           shift and go to state 43

state 34

    (16) ptrs -> MULTIPLY . ptrs
    (17) ptrs -> MULTIPLY .
    (16) ptrs -> . MULTIPLY ptrs
    (17) ptrs -> . MULTIPLY

    ID              reduce using rule 17 (ptrs -> MULTIPLY .)
    MULTIPLY        shift and go to state 34

    ptrs                           shift and go to state 68

state 35

    (74) expression -> DOUBLEPLUS . id_ptr_or_array
    (11) id_ptr_or_array -> . id
    (12) id_ptr_or_array -> . id array_decs
    (13) id_ptr_or_array -> . ptrs id
    (6) id -> . ID
    (16) ptrs -> . MULTIPLY ptrs
    (17) ptrs -> . MULTIPLY

    ID              shift and go to state 8
    MULTIPLY        shift and go to state 34

    id_ptr_or_array                shift and go to state 69
    id                             shift and go to state 42
    ptrs                           shift and go to state 43

state 36

    (78) expression -> INT_VAL .

    PLUS            reduce using rule 78 (expression -> INT_VAL .)
    MINUS           reduce using rule 78 (expression -> INT_VAL .)
    MULTIPLY        reduce using rule 78 (expression -> INT_VAL .)
    DIVIDE          reduce using rule 78 (expression -> INT_VAL .)
    LESS            reduce using rule 78 (expression -> INT_VAL .)
    GREATER         reduce using rule 78 (expression -> INT_VAL .)
    SEMI            reduce using rule 78 (expression -> INT_VAL .)
    RBRACE          reduce using rule 78 (expression -> INT_VAL .)
    RPAREN          reduce using rule 78 (expression -> INT_VAL .)
    COMMA           reduce using rule 78 (expression -> INT_VAL .)
    SQ_RBRACKET     reduce using rule 78 (expression -> INT_VAL .)
    LPAREN          reduce using rule 78 (expression -> INT_VAL .)
    DOUBLEPLUS      reduce using rule 78 (expression -> INT_VAL .)
    INT_VAL         reduce using rule 78 (expression -> INT_VAL .)
    FLOAT_VAL       reduce using rule 78 (expression -> INT_VAL .)
    PRINTF          reduce using rule 78 (expression -> INT_VAL .)
    ID              reduce using rule 78 (expression -> INT_VAL .)


state 37

    (79) expression -> FLOAT_VAL .

    PLUS            reduce using rule 79 (expression -> FLOAT_VAL .)
    MINUS           reduce using rule 79 (expression -> FLOAT_VAL .)
    MULTIPLY        reduce using rule 79 (expression -> FLOAT_VAL .)
    DIVIDE          reduce using rule 79 (expression -> FLOAT_VAL .)
    LESS            reduce using rule 79 (expression -> FLOAT_VAL .)
    GREATER         reduce using rule 79 (expression -> FLOAT_VAL .)
    SEMI            reduce using rule 79 (expression -> FLOAT_VAL .)
    RBRACE          reduce using rule 79 (expression -> FLOAT_VAL .)
    RPAREN          reduce using rule 79 (expression -> FLOAT_VAL .)
    COMMA           reduce using rule 79 (expression -> FLOAT_VAL .)
    SQ_RBRACKET     reduce using rule 79 (expression -> FLOAT_VAL .)
    LPAREN          reduce using rule 79 (expression -> FLOAT_VAL .)
    DOUBLEPLUS      reduce using rule 79 (expression -> FLOAT_VAL .)
    INT_VAL         reduce using rule 79 (expression -> FLOAT_VAL .)
    FLOAT_VAL       reduce using rule 79 (expression -> FLOAT_VAL .)
    PRINTF          reduce using rule 79 (expression -> FLOAT_VAL .)
    ID              reduce using rule 79 (expression -> FLOAT_VAL .)


state 38

    (54) return_expr -> RETURN . expression
    (55) return_expr -> RETURN .
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression MULTIPLY expression
    (68) expression -> . expression DIVIDE expression
    (69) expression -> . expression LESS expression
    (70) expression -> . expression GREATER expression
    (71) expression -> . LPAREN expression RPAREN
    (72) expression -> . MINUS expression
    (73) expression -> . id_ptr_or_array DOUBLEPLUS
    (74) expression -> . DOUBLEPLUS id_ptr_or_array
    (75) expression -> . id_ptr_or_array
    (76) expression -> . function_app
    (77) expression -> . var_assignment
    (78) expression -> . INT_VAL
    (79) expression -> . FLOAT_VAL
    (11) id_ptr_or_array -> . id
    (12) id_ptr_or_array -> . id array_decs
    (13) id_ptr_or_array -> . ptrs id
    (56) function_app -> . PRINTF LPAREN STRING print_formats RPAREN
    (57) function_app -> . ID LPAREN arguments RPAREN
    (48) var_assignment -> . id_ptr_or_array EQ expression
    (49) var_assignment -> . id_ptr_or_array EQ function_app
    (6) id -> . ID
    (16) ptrs -> . MULTIPLY ptrs
    (17) ptrs -> . MULTIPLY

    SEMI            reduce using rule 55 (return_expr -> RETURN .)
    RBRACE          reduce using rule 55 (return_expr -> RETURN .)
    RPAREN          reduce using rule 55 (return_expr -> RETURN .)
    LPAREN          shift and go to state 31
    MINUS           shift and go to state 33
    DOUBLEPLUS      shift and go to state 35
    INT_VAL         shift and go to state 36
    FLOAT_VAL       shift and go to state 37
    PRINTF          shift and go to state 30
    ID              shift and go to state 32
    MULTIPLY        shift and go to state 34

    expression                     shift and go to state 70
    id_ptr_or_array                shift and go to state 63
    function_app                   shift and go to state 64
    var_assignment                 shift and go to state 65
    id                             shift and go to state 42
    ptrs                           shift and go to state 43

state 39

    (32) conditional -> if . elif_else
    (34) elif_else -> . ELSE IF LPAREN expression RPAREN block elif_else
    (35) elif_else -> . ELSE block
    (36) elif_else -> . empty
    (64) empty -> .

    ELSE            shift and go to state 72
    PRINTF          reduce using rule 64 (empty -> .)
    ID              reduce using rule 64 (empty -> .)
    LPAREN          reduce using rule 64 (empty -> .)
    MINUS           reduce using rule 64 (empty -> .)
    DOUBLEPLUS      reduce using rule 64 (empty -> .)
    INT_VAL         reduce using rule 64 (empty -> .)
    FLOAT_VAL       reduce using rule 64 (empty -> .)
    RETURN          reduce using rule 64 (empty -> .)
    FOR             reduce using rule 64 (empty -> .)
    WHILE           reduce using rule 64 (empty -> .)
    INT             reduce using rule 64 (empty -> .)
    FLOAT           reduce using rule 64 (empty -> .)
    IF              reduce using rule 64 (empty -> .)
    MULTIPLY        reduce using rule 64 (empty -> .)
    RBRACE          reduce using rule 64 (empty -> .)

    elif_else                      shift and go to state 71
    empty                          shift and go to state 73

state 40

    (37) for -> FOR . LPAREN loop_init_or_empty SEMI semi_statement_or_empty SEMI semi_statement_or_empty RPAREN block

    LPAREN          shift and go to state 74


state 41

    (46) while -> WHILE . LPAREN expression RPAREN block

    LPAREN          shift and go to state 75


state 42

    (11) id_ptr_or_array -> id .
    (12) id_ptr_or_array -> id . array_decs
    (14) array_decs -> . SQ_LBRACKET expression SQ_RBRACKET array_decs
    (15) array_decs -> . SQ_LBRACKET expression SQ_RBRACKET

    EQ              reduce using rule 11 (id_ptr_or_array -> id .)
    DOUBLEPLUS      reduce using rule 11 (id_ptr_or_array -> id .)
    PLUS            reduce using rule 11 (id_ptr_or_array -> id .)
    MINUS           reduce using rule 11 (id_ptr_or_array -> id .)
    MULTIPLY        reduce using rule 11 (id_ptr_or_array -> id .)
    DIVIDE          reduce using rule 11 (id_ptr_or_array -> id .)
    LESS            reduce using rule 11 (id_ptr_or_array -> id .)
    GREATER         reduce using rule 11 (id_ptr_or_array -> id .)
    SEMI            reduce using rule 11 (id_ptr_or_array -> id .)
    RBRACE          reduce using rule 11 (id_ptr_or_array -> id .)
    COMMA           reduce using rule 11 (id_ptr_or_array -> id .)
    RPAREN          reduce using rule 11 (id_ptr_or_array -> id .)
    SQ_RBRACKET     reduce using rule 11 (id_ptr_or_array -> id .)
    LPAREN          reduce using rule 11 (id_ptr_or_array -> id .)
    INT_VAL         reduce using rule 11 (id_ptr_or_array -> id .)
    FLOAT_VAL       reduce using rule 11 (id_ptr_or_array -> id .)
    PRINTF          reduce using rule 11 (id_ptr_or_array -> id .)
    ID              reduce using rule 11 (id_ptr_or_array -> id .)
    SQ_LBRACKET     shift and go to state 77

    array_decs                     shift and go to state 76

state 43

    (13) id_ptr_or_array -> ptrs . id
    (6) id -> . ID

    ID              shift and go to state 8

    id                             shift and go to state 78

state 44

    (33) if -> IF . LPAREN expression RPAREN block

    LPAREN          shift and go to state 79


state 45

    (7) variable_declaration -> LPAREN declarations RPAREN .

    LBRACE          reduce using rule 7 (variable_declaration -> LPAREN declarations RPAREN .)


state 46

    (8) declarations -> type id_ptr_or_array . COMMA declarations
    (9) declarations -> type id_ptr_or_array .

    COMMA           shift and go to state 80
    RPAREN          reduce using rule 9 (declarations -> type id_ptr_or_array .)


state 47

    (18) block -> LBRACE statements RBRACE .

    INT             reduce using rule 18 (block -> LBRACE statements RBRACE .)
    FLOAT           reduce using rule 18 (block -> LBRACE statements RBRACE .)
    $end            reduce using rule 18 (block -> LBRACE statements RBRACE .)
    PRINTF          reduce using rule 18 (block -> LBRACE statements RBRACE .)
    ID              reduce using rule 18 (block -> LBRACE statements RBRACE .)
    LPAREN          reduce using rule 18 (block -> LBRACE statements RBRACE .)
    MINUS           reduce using rule 18 (block -> LBRACE statements RBRACE .)
    DOUBLEPLUS      reduce using rule 18 (block -> LBRACE statements RBRACE .)
    INT_VAL         reduce using rule 18 (block -> LBRACE statements RBRACE .)
    FLOAT_VAL       reduce using rule 18 (block -> LBRACE statements RBRACE .)
    RETURN          reduce using rule 18 (block -> LBRACE statements RBRACE .)
    FOR             reduce using rule 18 (block -> LBRACE statements RBRACE .)
    WHILE           reduce using rule 18 (block -> LBRACE statements RBRACE .)
    IF              reduce using rule 18 (block -> LBRACE statements RBRACE .)
    MULTIPLY        reduce using rule 18 (block -> LBRACE statements RBRACE .)
    RBRACE          reduce using rule 18 (block -> LBRACE statements RBRACE .)
    ELSE            reduce using rule 18 (block -> LBRACE statements RBRACE .)


state 48

    (21) statements -> semi_statement SEMI . statements
    (19) statements -> . semi_statement
    (20) statements -> . non_semi_statement
    (21) statements -> . semi_statement SEMI statements
    (22) statements -> . non_semi_statement statements
    (23) statements -> . empty
    (24) semi_statement -> . var_declaration
    (25) semi_statement -> . var_assignment
    (26) semi_statement -> . function_app
    (27) semi_statement -> . expression
    (28) semi_statement -> . return_expr
    (29) non_semi_statement -> . conditional
    (30) non_semi_statement -> . for
    (31) non_semi_statement -> . while
    (64) empty -> .
    (47) var_declaration -> . type var_and_assign
    (48) var_assignment -> . id_ptr_or_array EQ expression
    (49) var_assignment -> . id_ptr_or_array EQ function_app
    (56) function_app -> . PRINTF LPAREN STRING print_formats RPAREN
    (57) function_app -> . ID LPAREN arguments RPAREN
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression MULTIPLY expression
    (68) expression -> . expression DIVIDE expression
    (69) expression -> . expression LESS expression
    (70) expression -> . expression GREATER expression
    (71) expression -> . LPAREN expression RPAREN
    (72) expression -> . MINUS expression
    (73) expression -> . id_ptr_or_array DOUBLEPLUS
    (74) expression -> . DOUBLEPLUS id_ptr_or_array
    (75) expression -> . id_ptr_or_array
    (76) expression -> . function_app
    (77) expression -> . var_assignment
    (78) expression -> . INT_VAL
    (79) expression -> . FLOAT_VAL
    (54) return_expr -> . RETURN expression
    (55) return_expr -> . RETURN
    (32) conditional -> . if elif_else
    (37) for -> . FOR LPAREN loop_init_or_empty SEMI semi_statement_or_empty SEMI semi_statement_or_empty RPAREN block
    (46) while -> . WHILE LPAREN expression RPAREN block
    (4) type -> . INT
    (5) type -> . FLOAT
    (11) id_ptr_or_array -> . id
    (12) id_ptr_or_array -> . id array_decs
    (13) id_ptr_or_array -> . ptrs id
    (33) if -> . IF LPAREN expression RPAREN block
    (6) id -> . ID
    (16) ptrs -> . MULTIPLY ptrs
    (17) ptrs -> . MULTIPLY

    RBRACE          reduce using rule 64 (empty -> .)
    PRINTF          shift and go to state 30
    ID              shift and go to state 32
    LPAREN          shift and go to state 31
    MINUS           shift and go to state 33
    DOUBLEPLUS      shift and go to state 35
    INT_VAL         shift and go to state 36
    FLOAT_VAL       shift and go to state 37
    RETURN          shift and go to state 38
    FOR             shift and go to state 40
    WHILE           shift and go to state 41
    INT             shift and go to state 4
    FLOAT           shift and go to state 5
    IF              shift and go to state 44
    MULTIPLY        shift and go to state 34

    semi_statement                 shift and go to state 17
    statements                     shift and go to state 81
    non_semi_statement             shift and go to state 18
    empty                          shift and go to state 19
    var_declaration                shift and go to state 20
    var_assignment                 shift and go to state 21
    function_app                   shift and go to state 22
    expression                     shift and go to state 23
    return_expr                    shift and go to state 24
    conditional                    shift and go to state 25
    for                            shift and go to state 26
    while                          shift and go to state 27
    type                           shift and go to state 28
    id_ptr_or_array                shift and go to state 29
    if                             shift and go to state 39
    id                             shift and go to state 42
    ptrs                           shift and go to state 43

state 49

    (22) statements -> non_semi_statement statements .

    RBRACE          reduce using rule 22 (statements -> non_semi_statement statements .)


state 50

    (65) expression -> expression PLUS . expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression MULTIPLY expression
    (68) expression -> . expression DIVIDE expression
    (69) expression -> . expression LESS expression
    (70) expression -> . expression GREATER expression
    (71) expression -> . LPAREN expression RPAREN
    (72) expression -> . MINUS expression
    (73) expression -> . id_ptr_or_array DOUBLEPLUS
    (74) expression -> . DOUBLEPLUS id_ptr_or_array
    (75) expression -> . id_ptr_or_array
    (76) expression -> . function_app
    (77) expression -> . var_assignment
    (78) expression -> . INT_VAL
    (79) expression -> . FLOAT_VAL
    (11) id_ptr_or_array -> . id
    (12) id_ptr_or_array -> . id array_decs
    (13) id_ptr_or_array -> . ptrs id
    (56) function_app -> . PRINTF LPAREN STRING print_formats RPAREN
    (57) function_app -> . ID LPAREN arguments RPAREN
    (48) var_assignment -> . id_ptr_or_array EQ expression
    (49) var_assignment -> . id_ptr_or_array EQ function_app
    (6) id -> . ID
    (16) ptrs -> . MULTIPLY ptrs
    (17) ptrs -> . MULTIPLY

    LPAREN          shift and go to state 31
    MINUS           shift and go to state 33
    DOUBLEPLUS      shift and go to state 35
    INT_VAL         shift and go to state 36
    FLOAT_VAL       shift and go to state 37
    PRINTF          shift and go to state 30
    ID              shift and go to state 32
    MULTIPLY        shift and go to state 34

    expression                     shift and go to state 82
    id_ptr_or_array                shift and go to state 63
    function_app                   shift and go to state 64
    var_assignment                 shift and go to state 65
    id                             shift and go to state 42
    ptrs                           shift and go to state 43

state 51

    (66) expression -> expression MINUS . expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression MULTIPLY expression
    (68) expression -> . expression DIVIDE expression
    (69) expression -> . expression LESS expression
    (70) expression -> . expression GREATER expression
    (71) expression -> . LPAREN expression RPAREN
    (72) expression -> . MINUS expression
    (73) expression -> . id_ptr_or_array DOUBLEPLUS
    (74) expression -> . DOUBLEPLUS id_ptr_or_array
    (75) expression -> . id_ptr_or_array
    (76) expression -> . function_app
    (77) expression -> . var_assignment
    (78) expression -> . INT_VAL
    (79) expression -> . FLOAT_VAL
    (11) id_ptr_or_array -> . id
    (12) id_ptr_or_array -> . id array_decs
    (13) id_ptr_or_array -> . ptrs id
    (56) function_app -> . PRINTF LPAREN STRING print_formats RPAREN
    (57) function_app -> . ID LPAREN arguments RPAREN
    (48) var_assignment -> . id_ptr_or_array EQ expression
    (49) var_assignment -> . id_ptr_or_array EQ function_app
    (6) id -> . ID
    (16) ptrs -> . MULTIPLY ptrs
    (17) ptrs -> . MULTIPLY

    LPAREN          shift and go to state 31
    MINUS           shift and go to state 33
    DOUBLEPLUS      shift and go to state 35
    INT_VAL         shift and go to state 36
    FLOAT_VAL       shift and go to state 37
    PRINTF          shift and go to state 30
    ID              shift and go to state 32
    MULTIPLY        shift and go to state 34

    expression                     shift and go to state 83
    id_ptr_or_array                shift and go to state 63
    function_app                   shift and go to state 64
    var_assignment                 shift and go to state 65
    id                             shift and go to state 42
    ptrs                           shift and go to state 43

state 52

    (67) expression -> expression MULTIPLY . expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression MULTIPLY expression
    (68) expression -> . expression DIVIDE expression
    (69) expression -> . expression LESS expression
    (70) expression -> . expression GREATER expression
    (71) expression -> . LPAREN expression RPAREN
    (72) expression -> . MINUS expression
    (73) expression -> . id_ptr_or_array DOUBLEPLUS
    (74) expression -> . DOUBLEPLUS id_ptr_or_array
    (75) expression -> . id_ptr_or_array
    (76) expression -> . function_app
    (77) expression -> . var_assignment
    (78) expression -> . INT_VAL
    (79) expression -> . FLOAT_VAL
    (11) id_ptr_or_array -> . id
    (12) id_ptr_or_array -> . id array_decs
    (13) id_ptr_or_array -> . ptrs id
    (56) function_app -> . PRINTF LPAREN STRING print_formats RPAREN
    (57) function_app -> . ID LPAREN arguments RPAREN
    (48) var_assignment -> . id_ptr_or_array EQ expression
    (49) var_assignment -> . id_ptr_or_array EQ function_app
    (6) id -> . ID
    (16) ptrs -> . MULTIPLY ptrs
    (17) ptrs -> . MULTIPLY

    LPAREN          shift and go to state 31
    MINUS           shift and go to state 33
    DOUBLEPLUS      shift and go to state 35
    INT_VAL         shift and go to state 36
    FLOAT_VAL       shift and go to state 37
    PRINTF          shift and go to state 30
    ID              shift and go to state 32
    MULTIPLY        shift and go to state 34

    expression                     shift and go to state 84
    id_ptr_or_array                shift and go to state 63
    function_app                   shift and go to state 64
    var_assignment                 shift and go to state 65
    id                             shift and go to state 42
    ptrs                           shift and go to state 43

state 53

    (68) expression -> expression DIVIDE . expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression MULTIPLY expression
    (68) expression -> . expression DIVIDE expression
    (69) expression -> . expression LESS expression
    (70) expression -> . expression GREATER expression
    (71) expression -> . LPAREN expression RPAREN
    (72) expression -> . MINUS expression
    (73) expression -> . id_ptr_or_array DOUBLEPLUS
    (74) expression -> . DOUBLEPLUS id_ptr_or_array
    (75) expression -> . id_ptr_or_array
    (76) expression -> . function_app
    (77) expression -> . var_assignment
    (78) expression -> . INT_VAL
    (79) expression -> . FLOAT_VAL
    (11) id_ptr_or_array -> . id
    (12) id_ptr_or_array -> . id array_decs
    (13) id_ptr_or_array -> . ptrs id
    (56) function_app -> . PRINTF LPAREN STRING print_formats RPAREN
    (57) function_app -> . ID LPAREN arguments RPAREN
    (48) var_assignment -> . id_ptr_or_array EQ expression
    (49) var_assignment -> . id_ptr_or_array EQ function_app
    (6) id -> . ID
    (16) ptrs -> . MULTIPLY ptrs
    (17) ptrs -> . MULTIPLY

    LPAREN          shift and go to state 31
    MINUS           shift and go to state 33
    DOUBLEPLUS      shift and go to state 35
    INT_VAL         shift and go to state 36
    FLOAT_VAL       shift and go to state 37
    PRINTF          shift and go to state 30
    ID              shift and go to state 32
    MULTIPLY        shift and go to state 34

    expression                     shift and go to state 85
    id_ptr_or_array                shift and go to state 63
    function_app                   shift and go to state 64
    var_assignment                 shift and go to state 65
    id                             shift and go to state 42
    ptrs                           shift and go to state 43

state 54

    (69) expression -> expression LESS . expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression MULTIPLY expression
    (68) expression -> . expression DIVIDE expression
    (69) expression -> . expression LESS expression
    (70) expression -> . expression GREATER expression
    (71) expression -> . LPAREN expression RPAREN
    (72) expression -> . MINUS expression
    (73) expression -> . id_ptr_or_array DOUBLEPLUS
    (74) expression -> . DOUBLEPLUS id_ptr_or_array
    (75) expression -> . id_ptr_or_array
    (76) expression -> . function_app
    (77) expression -> . var_assignment
    (78) expression -> . INT_VAL
    (79) expression -> . FLOAT_VAL
    (11) id_ptr_or_array -> . id
    (12) id_ptr_or_array -> . id array_decs
    (13) id_ptr_or_array -> . ptrs id
    (56) function_app -> . PRINTF LPAREN STRING print_formats RPAREN
    (57) function_app -> . ID LPAREN arguments RPAREN
    (48) var_assignment -> . id_ptr_or_array EQ expression
    (49) var_assignment -> . id_ptr_or_array EQ function_app
    (6) id -> . ID
    (16) ptrs -> . MULTIPLY ptrs
    (17) ptrs -> . MULTIPLY

    LPAREN          shift and go to state 31
    MINUS           shift and go to state 33
    DOUBLEPLUS      shift and go to state 35
    INT_VAL         shift and go to state 36
    FLOAT_VAL       shift and go to state 37
    PRINTF          shift and go to state 30
    ID              shift and go to state 32
    MULTIPLY        shift and go to state 34

    expression                     shift and go to state 86
    id_ptr_or_array                shift and go to state 63
    function_app                   shift and go to state 64
    var_assignment                 shift and go to state 65
    id                             shift and go to state 42
    ptrs                           shift and go to state 43

state 55

    (70) expression -> expression GREATER . expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression MULTIPLY expression
    (68) expression -> . expression DIVIDE expression
    (69) expression -> . expression LESS expression
    (70) expression -> . expression GREATER expression
    (71) expression -> . LPAREN expression RPAREN
    (72) expression -> . MINUS expression
    (73) expression -> . id_ptr_or_array DOUBLEPLUS
    (74) expression -> . DOUBLEPLUS id_ptr_or_array
    (75) expression -> . id_ptr_or_array
    (76) expression -> . function_app
    (77) expression -> . var_assignment
    (78) expression -> . INT_VAL
    (79) expression -> . FLOAT_VAL
    (11) id_ptr_or_array -> . id
    (12) id_ptr_or_array -> . id array_decs
    (13) id_ptr_or_array -> . ptrs id
    (56) function_app -> . PRINTF LPAREN STRING print_formats RPAREN
    (57) function_app -> . ID LPAREN arguments RPAREN
    (48) var_assignment -> . id_ptr_or_array EQ expression
    (49) var_assignment -> . id_ptr_or_array EQ function_app
    (6) id -> . ID
    (16) ptrs -> . MULTIPLY ptrs
    (17) ptrs -> . MULTIPLY

    LPAREN          shift and go to state 31
    MINUS           shift and go to state 33
    DOUBLEPLUS      shift and go to state 35
    INT_VAL         shift and go to state 36
    FLOAT_VAL       shift and go to state 37
    PRINTF          shift and go to state 30
    ID              shift and go to state 32
    MULTIPLY        shift and go to state 34

    expression                     shift and go to state 87
    id_ptr_or_array                shift and go to state 63
    function_app                   shift and go to state 64
    var_assignment                 shift and go to state 65
    id                             shift and go to state 42
    ptrs                           shift and go to state 43

state 56

    (47) var_declaration -> type var_and_assign .

    SEMI            reduce using rule 47 (var_declaration -> type var_and_assign .)
    RBRACE          reduce using rule 47 (var_declaration -> type var_and_assign .)
    RPAREN          reduce using rule 47 (var_declaration -> type var_and_assign .)


state 57

    (50) var_and_assign -> var_assignment . COMMA var_and_assign
    (51) var_and_assign -> var_assignment .

    COMMA           shift and go to state 88
    SEMI            reduce using rule 51 (var_and_assign -> var_assignment .)
    RBRACE          reduce using rule 51 (var_and_assign -> var_assignment .)
    RPAREN          reduce using rule 51 (var_and_assign -> var_assignment .)


state 58

    (52) var_and_assign -> id_ptr_or_array . COMMA var_and_assign
    (53) var_and_assign -> id_ptr_or_array .
    (48) var_assignment -> id_ptr_or_array . EQ expression
    (49) var_assignment -> id_ptr_or_array . EQ function_app

    COMMA           shift and go to state 89
    SEMI            reduce using rule 53 (var_and_assign -> id_ptr_or_array .)
    RBRACE          reduce using rule 53 (var_and_assign -> id_ptr_or_array .)
    RPAREN          reduce using rule 53 (var_and_assign -> id_ptr_or_array .)
    EQ              shift and go to state 59


state 59

    (48) var_assignment -> id_ptr_or_array EQ . expression
    (49) var_assignment -> id_ptr_or_array EQ . function_app
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression MULTIPLY expression
    (68) expression -> . expression DIVIDE expression
    (69) expression -> . expression LESS expression
    (70) expression -> . expression GREATER expression
    (71) expression -> . LPAREN expression RPAREN
    (72) expression -> . MINUS expression
    (73) expression -> . id_ptr_or_array DOUBLEPLUS
    (74) expression -> . DOUBLEPLUS id_ptr_or_array
    (75) expression -> . id_ptr_or_array
    (76) expression -> . function_app
    (77) expression -> . var_assignment
    (78) expression -> . INT_VAL
    (79) expression -> . FLOAT_VAL
    (56) function_app -> . PRINTF LPAREN STRING print_formats RPAREN
    (57) function_app -> . ID LPAREN arguments RPAREN
    (11) id_ptr_or_array -> . id
    (12) id_ptr_or_array -> . id array_decs
    (13) id_ptr_or_array -> . ptrs id
    (48) var_assignment -> . id_ptr_or_array EQ expression
    (49) var_assignment -> . id_ptr_or_array EQ function_app
    (6) id -> . ID
    (16) ptrs -> . MULTIPLY ptrs
    (17) ptrs -> . MULTIPLY

    LPAREN          shift and go to state 31
    MINUS           shift and go to state 33
    DOUBLEPLUS      shift and go to state 35
    INT_VAL         shift and go to state 36
    FLOAT_VAL       shift and go to state 37
    PRINTF          shift and go to state 30
    ID              shift and go to state 32
    MULTIPLY        shift and go to state 34

    id_ptr_or_array                shift and go to state 63
    expression                     shift and go to state 90
    function_app                   shift and go to state 91
    var_assignment                 shift and go to state 65
    id                             shift and go to state 42
    ptrs                           shift and go to state 43

state 60

    (73) expression -> id_ptr_or_array DOUBLEPLUS .

    PLUS            reduce using rule 73 (expression -> id_ptr_or_array DOUBLEPLUS .)
    MINUS           reduce using rule 73 (expression -> id_ptr_or_array DOUBLEPLUS .)
    MULTIPLY        reduce using rule 73 (expression -> id_ptr_or_array DOUBLEPLUS .)
    DIVIDE          reduce using rule 73 (expression -> id_ptr_or_array DOUBLEPLUS .)
    LESS            reduce using rule 73 (expression -> id_ptr_or_array DOUBLEPLUS .)
    GREATER         reduce using rule 73 (expression -> id_ptr_or_array DOUBLEPLUS .)
    SEMI            reduce using rule 73 (expression -> id_ptr_or_array DOUBLEPLUS .)
    RBRACE          reduce using rule 73 (expression -> id_ptr_or_array DOUBLEPLUS .)
    RPAREN          reduce using rule 73 (expression -> id_ptr_or_array DOUBLEPLUS .)
    COMMA           reduce using rule 73 (expression -> id_ptr_or_array DOUBLEPLUS .)
    SQ_RBRACKET     reduce using rule 73 (expression -> id_ptr_or_array DOUBLEPLUS .)
    LPAREN          reduce using rule 73 (expression -> id_ptr_or_array DOUBLEPLUS .)
    DOUBLEPLUS      reduce using rule 73 (expression -> id_ptr_or_array DOUBLEPLUS .)
    INT_VAL         reduce using rule 73 (expression -> id_ptr_or_array DOUBLEPLUS .)
    FLOAT_VAL       reduce using rule 73 (expression -> id_ptr_or_array DOUBLEPLUS .)
    PRINTF          reduce using rule 73 (expression -> id_ptr_or_array DOUBLEPLUS .)
    ID              reduce using rule 73 (expression -> id_ptr_or_array DOUBLEPLUS .)


state 61

    (56) function_app -> PRINTF LPAREN . STRING print_formats RPAREN

    STRING          shift and go to state 92


state 62

    (71) expression -> LPAREN expression . RPAREN
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . MULTIPLY expression
    (68) expression -> expression . DIVIDE expression
    (69) expression -> expression . LESS expression
    (70) expression -> expression . GREATER expression

    RPAREN          shift and go to state 93
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    MULTIPLY        shift and go to state 52
    DIVIDE          shift and go to state 53
    LESS            shift and go to state 54
    GREATER         shift and go to state 55


state 63

    (73) expression -> id_ptr_or_array . DOUBLEPLUS
    (75) expression -> id_ptr_or_array .
    (48) var_assignment -> id_ptr_or_array . EQ expression
    (49) var_assignment -> id_ptr_or_array . EQ function_app

  ! shift/reduce conflict for DOUBLEPLUS resolved as shift
    DOUBLEPLUS      shift and go to state 60
    RPAREN          reduce using rule 75 (expression -> id_ptr_or_array .)
    PLUS            reduce using rule 75 (expression -> id_ptr_or_array .)
    MINUS           reduce using rule 75 (expression -> id_ptr_or_array .)
    MULTIPLY        reduce using rule 75 (expression -> id_ptr_or_array .)
    DIVIDE          reduce using rule 75 (expression -> id_ptr_or_array .)
    LESS            reduce using rule 75 (expression -> id_ptr_or_array .)
    GREATER         reduce using rule 75 (expression -> id_ptr_or_array .)
    SEMI            reduce using rule 75 (expression -> id_ptr_or_array .)
    RBRACE          reduce using rule 75 (expression -> id_ptr_or_array .)
    COMMA           reduce using rule 75 (expression -> id_ptr_or_array .)
    SQ_RBRACKET     reduce using rule 75 (expression -> id_ptr_or_array .)
    LPAREN          reduce using rule 75 (expression -> id_ptr_or_array .)
    INT_VAL         reduce using rule 75 (expression -> id_ptr_or_array .)
    FLOAT_VAL       reduce using rule 75 (expression -> id_ptr_or_array .)
    PRINTF          reduce using rule 75 (expression -> id_ptr_or_array .)
    ID              reduce using rule 75 (expression -> id_ptr_or_array .)
    EQ              shift and go to state 59

  ! DOUBLEPLUS      [ reduce using rule 75 (expression -> id_ptr_or_array .) ]


state 64

    (76) expression -> function_app .

    RPAREN          reduce using rule 76 (expression -> function_app .)
    PLUS            reduce using rule 76 (expression -> function_app .)
    MINUS           reduce using rule 76 (expression -> function_app .)
    MULTIPLY        reduce using rule 76 (expression -> function_app .)
    DIVIDE          reduce using rule 76 (expression -> function_app .)
    LESS            reduce using rule 76 (expression -> function_app .)
    GREATER         reduce using rule 76 (expression -> function_app .)
    SEMI            reduce using rule 76 (expression -> function_app .)
    RBRACE          reduce using rule 76 (expression -> function_app .)
    COMMA           reduce using rule 76 (expression -> function_app .)
    SQ_RBRACKET     reduce using rule 76 (expression -> function_app .)
    LPAREN          reduce using rule 76 (expression -> function_app .)
    DOUBLEPLUS      reduce using rule 76 (expression -> function_app .)
    INT_VAL         reduce using rule 76 (expression -> function_app .)
    FLOAT_VAL       reduce using rule 76 (expression -> function_app .)
    PRINTF          reduce using rule 76 (expression -> function_app .)
    ID              reduce using rule 76 (expression -> function_app .)


state 65

    (77) expression -> var_assignment .

    RPAREN          reduce using rule 77 (expression -> var_assignment .)
    PLUS            reduce using rule 77 (expression -> var_assignment .)
    MINUS           reduce using rule 77 (expression -> var_assignment .)
    MULTIPLY        reduce using rule 77 (expression -> var_assignment .)
    DIVIDE          reduce using rule 77 (expression -> var_assignment .)
    LESS            reduce using rule 77 (expression -> var_assignment .)
    GREATER         reduce using rule 77 (expression -> var_assignment .)
    SEMI            reduce using rule 77 (expression -> var_assignment .)
    RBRACE          reduce using rule 77 (expression -> var_assignment .)
    COMMA           reduce using rule 77 (expression -> var_assignment .)
    SQ_RBRACKET     reduce using rule 77 (expression -> var_assignment .)
    LPAREN          reduce using rule 77 (expression -> var_assignment .)
    DOUBLEPLUS      reduce using rule 77 (expression -> var_assignment .)
    INT_VAL         reduce using rule 77 (expression -> var_assignment .)
    FLOAT_VAL       reduce using rule 77 (expression -> var_assignment .)
    PRINTF          reduce using rule 77 (expression -> var_assignment .)
    ID              reduce using rule 77 (expression -> var_assignment .)


state 66

    (57) function_app -> ID LPAREN . arguments RPAREN
    (61) arguments -> . expression COMMA arguments
    (62) arguments -> . expression
    (63) arguments -> . empty
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression MULTIPLY expression
    (68) expression -> . expression DIVIDE expression
    (69) expression -> . expression LESS expression
    (70) expression -> . expression GREATER expression
    (71) expression -> . LPAREN expression RPAREN
    (72) expression -> . MINUS expression
    (73) expression -> . id_ptr_or_array DOUBLEPLUS
    (74) expression -> . DOUBLEPLUS id_ptr_or_array
    (75) expression -> . id_ptr_or_array
    (76) expression -> . function_app
    (77) expression -> . var_assignment
    (78) expression -> . INT_VAL
    (79) expression -> . FLOAT_VAL
    (64) empty -> .
    (11) id_ptr_or_array -> . id
    (12) id_ptr_or_array -> . id array_decs
    (13) id_ptr_or_array -> . ptrs id
    (56) function_app -> . PRINTF LPAREN STRING print_formats RPAREN
    (57) function_app -> . ID LPAREN arguments RPAREN
    (48) var_assignment -> . id_ptr_or_array EQ expression
    (49) var_assignment -> . id_ptr_or_array EQ function_app
    (6) id -> . ID
    (16) ptrs -> . MULTIPLY ptrs
    (17) ptrs -> . MULTIPLY

    LPAREN          shift and go to state 31
    MINUS           shift and go to state 33
    DOUBLEPLUS      shift and go to state 35
    INT_VAL         shift and go to state 36
    FLOAT_VAL       shift and go to state 37
    RPAREN          reduce using rule 64 (empty -> .)
    PRINTF          shift and go to state 30
    ID              shift and go to state 32
    MULTIPLY        shift and go to state 34

    arguments                      shift and go to state 94
    expression                     shift and go to state 95
    empty                          shift and go to state 96
    id_ptr_or_array                shift and go to state 63
    function_app                   shift and go to state 64
    var_assignment                 shift and go to state 65
    id                             shift and go to state 42
    ptrs                           shift and go to state 43

state 67

    (72) expression -> MINUS expression .
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . MULTIPLY expression
    (68) expression -> expression . DIVIDE expression
    (69) expression -> expression . LESS expression
    (70) expression -> expression . GREATER expression

    PLUS            reduce using rule 72 (expression -> MINUS expression .)
    MINUS           reduce using rule 72 (expression -> MINUS expression .)
    LESS            reduce using rule 72 (expression -> MINUS expression .)
    GREATER         reduce using rule 72 (expression -> MINUS expression .)
    SEMI            reduce using rule 72 (expression -> MINUS expression .)
    RBRACE          reduce using rule 72 (expression -> MINUS expression .)
    RPAREN          reduce using rule 72 (expression -> MINUS expression .)
    COMMA           reduce using rule 72 (expression -> MINUS expression .)
    SQ_RBRACKET     reduce using rule 72 (expression -> MINUS expression .)
    LPAREN          reduce using rule 72 (expression -> MINUS expression .)
    DOUBLEPLUS      reduce using rule 72 (expression -> MINUS expression .)
    INT_VAL         reduce using rule 72 (expression -> MINUS expression .)
    FLOAT_VAL       reduce using rule 72 (expression -> MINUS expression .)
    PRINTF          reduce using rule 72 (expression -> MINUS expression .)
    ID              reduce using rule 72 (expression -> MINUS expression .)
    MULTIPLY        shift and go to state 52
    DIVIDE          shift and go to state 53

  ! MULTIPLY        [ reduce using rule 72 (expression -> MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 72 (expression -> MINUS expression .) ]
  ! PLUS            [ shift and go to state 50 ]
  ! MINUS           [ shift and go to state 51 ]
  ! LESS            [ shift and go to state 54 ]
  ! GREATER         [ shift and go to state 55 ]


state 68

    (16) ptrs -> MULTIPLY ptrs .

    ID              reduce using rule 16 (ptrs -> MULTIPLY ptrs .)


state 69

    (74) expression -> DOUBLEPLUS id_ptr_or_array .

    PLUS            reduce using rule 74 (expression -> DOUBLEPLUS id_ptr_or_array .)
    MINUS           reduce using rule 74 (expression -> DOUBLEPLUS id_ptr_or_array .)
    MULTIPLY        reduce using rule 74 (expression -> DOUBLEPLUS id_ptr_or_array .)
    DIVIDE          reduce using rule 74 (expression -> DOUBLEPLUS id_ptr_or_array .)
    LESS            reduce using rule 74 (expression -> DOUBLEPLUS id_ptr_or_array .)
    GREATER         reduce using rule 74 (expression -> DOUBLEPLUS id_ptr_or_array .)
    SEMI            reduce using rule 74 (expression -> DOUBLEPLUS id_ptr_or_array .)
    RBRACE          reduce using rule 74 (expression -> DOUBLEPLUS id_ptr_or_array .)
    RPAREN          reduce using rule 74 (expression -> DOUBLEPLUS id_ptr_or_array .)
    COMMA           reduce using rule 74 (expression -> DOUBLEPLUS id_ptr_or_array .)
    SQ_RBRACKET     reduce using rule 74 (expression -> DOUBLEPLUS id_ptr_or_array .)
    LPAREN          reduce using rule 74 (expression -> DOUBLEPLUS id_ptr_or_array .)
    DOUBLEPLUS      reduce using rule 74 (expression -> DOUBLEPLUS id_ptr_or_array .)
    INT_VAL         reduce using rule 74 (expression -> DOUBLEPLUS id_ptr_or_array .)
    FLOAT_VAL       reduce using rule 74 (expression -> DOUBLEPLUS id_ptr_or_array .)
    PRINTF          reduce using rule 74 (expression -> DOUBLEPLUS id_ptr_or_array .)
    ID              reduce using rule 74 (expression -> DOUBLEPLUS id_ptr_or_array .)


state 70

    (54) return_expr -> RETURN expression .
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . MULTIPLY expression
    (68) expression -> expression . DIVIDE expression
    (69) expression -> expression . LESS expression
    (70) expression -> expression . GREATER expression

    SEMI            reduce using rule 54 (return_expr -> RETURN expression .)
    RBRACE          reduce using rule 54 (return_expr -> RETURN expression .)
    RPAREN          reduce using rule 54 (return_expr -> RETURN expression .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    MULTIPLY        shift and go to state 52
    DIVIDE          shift and go to state 53
    LESS            shift and go to state 54
    GREATER         shift and go to state 55


state 71

    (32) conditional -> if elif_else .

    PRINTF          reduce using rule 32 (conditional -> if elif_else .)
    ID              reduce using rule 32 (conditional -> if elif_else .)
    LPAREN          reduce using rule 32 (conditional -> if elif_else .)
    MINUS           reduce using rule 32 (conditional -> if elif_else .)
    DOUBLEPLUS      reduce using rule 32 (conditional -> if elif_else .)
    INT_VAL         reduce using rule 32 (conditional -> if elif_else .)
    FLOAT_VAL       reduce using rule 32 (conditional -> if elif_else .)
    RETURN          reduce using rule 32 (conditional -> if elif_else .)
    FOR             reduce using rule 32 (conditional -> if elif_else .)
    WHILE           reduce using rule 32 (conditional -> if elif_else .)
    INT             reduce using rule 32 (conditional -> if elif_else .)
    FLOAT           reduce using rule 32 (conditional -> if elif_else .)
    IF              reduce using rule 32 (conditional -> if elif_else .)
    MULTIPLY        reduce using rule 32 (conditional -> if elif_else .)
    RBRACE          reduce using rule 32 (conditional -> if elif_else .)


state 72

    (34) elif_else -> ELSE . IF LPAREN expression RPAREN block elif_else
    (35) elif_else -> ELSE . block
    (18) block -> . LBRACE statements RBRACE

    IF              shift and go to state 97
    LBRACE          shift and go to state 12

    block                          shift and go to state 98

state 73

    (36) elif_else -> empty .

    PRINTF          reduce using rule 36 (elif_else -> empty .)
    ID              reduce using rule 36 (elif_else -> empty .)
    LPAREN          reduce using rule 36 (elif_else -> empty .)
    MINUS           reduce using rule 36 (elif_else -> empty .)
    DOUBLEPLUS      reduce using rule 36 (elif_else -> empty .)
    INT_VAL         reduce using rule 36 (elif_else -> empty .)
    FLOAT_VAL       reduce using rule 36 (elif_else -> empty .)
    RETURN          reduce using rule 36 (elif_else -> empty .)
    FOR             reduce using rule 36 (elif_else -> empty .)
    WHILE           reduce using rule 36 (elif_else -> empty .)
    INT             reduce using rule 36 (elif_else -> empty .)
    FLOAT           reduce using rule 36 (elif_else -> empty .)
    IF              reduce using rule 36 (elif_else -> empty .)
    MULTIPLY        reduce using rule 36 (elif_else -> empty .)
    RBRACE          reduce using rule 36 (elif_else -> empty .)


state 74

    (37) for -> FOR LPAREN . loop_init_or_empty SEMI semi_statement_or_empty SEMI semi_statement_or_empty RPAREN block
    (38) loop_init_or_empty -> . loop_init
    (39) loop_init_or_empty -> . expression
    (40) loop_init_or_empty -> . empty
    (44) loop_init -> . type var_assignment
    (45) loop_init -> . semi_statement
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression MULTIPLY expression
    (68) expression -> . expression DIVIDE expression
    (69) expression -> . expression LESS expression
    (70) expression -> . expression GREATER expression
    (71) expression -> . LPAREN expression RPAREN
    (72) expression -> . MINUS expression
    (73) expression -> . id_ptr_or_array DOUBLEPLUS
    (74) expression -> . DOUBLEPLUS id_ptr_or_array
    (75) expression -> . id_ptr_or_array
    (76) expression -> . function_app
    (77) expression -> . var_assignment
    (78) expression -> . INT_VAL
    (79) expression -> . FLOAT_VAL
    (64) empty -> .
    (4) type -> . INT
    (5) type -> . FLOAT
    (24) semi_statement -> . var_declaration
    (25) semi_statement -> . var_assignment
    (26) semi_statement -> . function_app
    (27) semi_statement -> . expression
    (28) semi_statement -> . return_expr
    (11) id_ptr_or_array -> . id
    (12) id_ptr_or_array -> . id array_decs
    (13) id_ptr_or_array -> . ptrs id
    (56) function_app -> . PRINTF LPAREN STRING print_formats RPAREN
    (57) function_app -> . ID LPAREN arguments RPAREN
    (48) var_assignment -> . id_ptr_or_array EQ expression
    (49) var_assignment -> . id_ptr_or_array EQ function_app
    (47) var_declaration -> . type var_and_assign
    (54) return_expr -> . RETURN expression
    (55) return_expr -> . RETURN
    (6) id -> . ID
    (16) ptrs -> . MULTIPLY ptrs
    (17) ptrs -> . MULTIPLY

    LPAREN          shift and go to state 31
    MINUS           shift and go to state 33
    DOUBLEPLUS      shift and go to state 35
    INT_VAL         shift and go to state 36
    FLOAT_VAL       shift and go to state 37
    SEMI            reduce using rule 64 (empty -> .)
    INT             shift and go to state 4
    FLOAT           shift and go to state 5
    PRINTF          shift and go to state 30
    ID              shift and go to state 32
    RETURN          shift and go to state 38
    MULTIPLY        shift and go to state 34

    loop_init_or_empty             shift and go to state 99
    loop_init                      shift and go to state 100
    expression                     shift and go to state 101
    empty                          shift and go to state 102
    type                           shift and go to state 103
    var_assignment                 shift and go to state 104
    semi_statement                 shift and go to state 105
    id_ptr_or_array                shift and go to state 63
    function_app                   shift and go to state 106
    var_declaration                shift and go to state 20
    return_expr                    shift and go to state 24
    id                             shift and go to state 42
    ptrs                           shift and go to state 43

state 75

    (46) while -> WHILE LPAREN . expression RPAREN block
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression MULTIPLY expression
    (68) expression -> . expression DIVIDE expression
    (69) expression -> . expression LESS expression
    (70) expression -> . expression GREATER expression
    (71) expression -> . LPAREN expression RPAREN
    (72) expression -> . MINUS expression
    (73) expression -> . id_ptr_or_array DOUBLEPLUS
    (74) expression -> . DOUBLEPLUS id_ptr_or_array
    (75) expression -> . id_ptr_or_array
    (76) expression -> . function_app
    (77) expression -> . var_assignment
    (78) expression -> . INT_VAL
    (79) expression -> . FLOAT_VAL
    (11) id_ptr_or_array -> . id
    (12) id_ptr_or_array -> . id array_decs
    (13) id_ptr_or_array -> . ptrs id
    (56) function_app -> . PRINTF LPAREN STRING print_formats RPAREN
    (57) function_app -> . ID LPAREN arguments RPAREN
    (48) var_assignment -> . id_ptr_or_array EQ expression
    (49) var_assignment -> . id_ptr_or_array EQ function_app
    (6) id -> . ID
    (16) ptrs -> . MULTIPLY ptrs
    (17) ptrs -> . MULTIPLY

    LPAREN          shift and go to state 31
    MINUS           shift and go to state 33
    DOUBLEPLUS      shift and go to state 35
    INT_VAL         shift and go to state 36
    FLOAT_VAL       shift and go to state 37
    PRINTF          shift and go to state 30
    ID              shift and go to state 32
    MULTIPLY        shift and go to state 34

    expression                     shift and go to state 107
    id_ptr_or_array                shift and go to state 63
    function_app                   shift and go to state 64
    var_assignment                 shift and go to state 65
    id                             shift and go to state 42
    ptrs                           shift and go to state 43

state 76

    (12) id_ptr_or_array -> id array_decs .

    EQ              reduce using rule 12 (id_ptr_or_array -> id array_decs .)
    DOUBLEPLUS      reduce using rule 12 (id_ptr_or_array -> id array_decs .)
    PLUS            reduce using rule 12 (id_ptr_or_array -> id array_decs .)
    MINUS           reduce using rule 12 (id_ptr_or_array -> id array_decs .)
    MULTIPLY        reduce using rule 12 (id_ptr_or_array -> id array_decs .)
    DIVIDE          reduce using rule 12 (id_ptr_or_array -> id array_decs .)
    LESS            reduce using rule 12 (id_ptr_or_array -> id array_decs .)
    GREATER         reduce using rule 12 (id_ptr_or_array -> id array_decs .)
    SEMI            reduce using rule 12 (id_ptr_or_array -> id array_decs .)
    RBRACE          reduce using rule 12 (id_ptr_or_array -> id array_decs .)
    COMMA           reduce using rule 12 (id_ptr_or_array -> id array_decs .)
    RPAREN          reduce using rule 12 (id_ptr_or_array -> id array_decs .)
    SQ_RBRACKET     reduce using rule 12 (id_ptr_or_array -> id array_decs .)
    LPAREN          reduce using rule 12 (id_ptr_or_array -> id array_decs .)
    INT_VAL         reduce using rule 12 (id_ptr_or_array -> id array_decs .)
    FLOAT_VAL       reduce using rule 12 (id_ptr_or_array -> id array_decs .)
    PRINTF          reduce using rule 12 (id_ptr_or_array -> id array_decs .)
    ID              reduce using rule 12 (id_ptr_or_array -> id array_decs .)


state 77

    (14) array_decs -> SQ_LBRACKET . expression SQ_RBRACKET array_decs
    (15) array_decs -> SQ_LBRACKET . expression SQ_RBRACKET
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression MULTIPLY expression
    (68) expression -> . expression DIVIDE expression
    (69) expression -> . expression LESS expression
    (70) expression -> . expression GREATER expression
    (71) expression -> . LPAREN expression RPAREN
    (72) expression -> . MINUS expression
    (73) expression -> . id_ptr_or_array DOUBLEPLUS
    (74) expression -> . DOUBLEPLUS id_ptr_or_array
    (75) expression -> . id_ptr_or_array
    (76) expression -> . function_app
    (77) expression -> . var_assignment
    (78) expression -> . INT_VAL
    (79) expression -> . FLOAT_VAL
    (11) id_ptr_or_array -> . id
    (12) id_ptr_or_array -> . id array_decs
    (13) id_ptr_or_array -> . ptrs id
    (56) function_app -> . PRINTF LPAREN STRING print_formats RPAREN
    (57) function_app -> . ID LPAREN arguments RPAREN
    (48) var_assignment -> . id_ptr_or_array EQ expression
    (49) var_assignment -> . id_ptr_or_array EQ function_app
    (6) id -> . ID
    (16) ptrs -> . MULTIPLY ptrs
    (17) ptrs -> . MULTIPLY

    LPAREN          shift and go to state 31
    MINUS           shift and go to state 33
    DOUBLEPLUS      shift and go to state 35
    INT_VAL         shift and go to state 36
    FLOAT_VAL       shift and go to state 37
    PRINTF          shift and go to state 30
    ID              shift and go to state 32
    MULTIPLY        shift and go to state 34

    expression                     shift and go to state 108
    id_ptr_or_array                shift and go to state 63
    function_app                   shift and go to state 64
    var_assignment                 shift and go to state 65
    id                             shift and go to state 42
    ptrs                           shift and go to state 43

state 78

    (13) id_ptr_or_array -> ptrs id .

    EQ              reduce using rule 13 (id_ptr_or_array -> ptrs id .)
    DOUBLEPLUS      reduce using rule 13 (id_ptr_or_array -> ptrs id .)
    PLUS            reduce using rule 13 (id_ptr_or_array -> ptrs id .)
    MINUS           reduce using rule 13 (id_ptr_or_array -> ptrs id .)
    MULTIPLY        reduce using rule 13 (id_ptr_or_array -> ptrs id .)
    DIVIDE          reduce using rule 13 (id_ptr_or_array -> ptrs id .)
    LESS            reduce using rule 13 (id_ptr_or_array -> ptrs id .)
    GREATER         reduce using rule 13 (id_ptr_or_array -> ptrs id .)
    SEMI            reduce using rule 13 (id_ptr_or_array -> ptrs id .)
    RBRACE          reduce using rule 13 (id_ptr_or_array -> ptrs id .)
    COMMA           reduce using rule 13 (id_ptr_or_array -> ptrs id .)
    RPAREN          reduce using rule 13 (id_ptr_or_array -> ptrs id .)
    SQ_RBRACKET     reduce using rule 13 (id_ptr_or_array -> ptrs id .)
    LPAREN          reduce using rule 13 (id_ptr_or_array -> ptrs id .)
    INT_VAL         reduce using rule 13 (id_ptr_or_array -> ptrs id .)
    FLOAT_VAL       reduce using rule 13 (id_ptr_or_array -> ptrs id .)
    PRINTF          reduce using rule 13 (id_ptr_or_array -> ptrs id .)
    ID              reduce using rule 13 (id_ptr_or_array -> ptrs id .)


state 79

    (33) if -> IF LPAREN . expression RPAREN block
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression MULTIPLY expression
    (68) expression -> . expression DIVIDE expression
    (69) expression -> . expression LESS expression
    (70) expression -> . expression GREATER expression
    (71) expression -> . LPAREN expression RPAREN
    (72) expression -> . MINUS expression
    (73) expression -> . id_ptr_or_array DOUBLEPLUS
    (74) expression -> . DOUBLEPLUS id_ptr_or_array
    (75) expression -> . id_ptr_or_array
    (76) expression -> . function_app
    (77) expression -> . var_assignment
    (78) expression -> . INT_VAL
    (79) expression -> . FLOAT_VAL
    (11) id_ptr_or_array -> . id
    (12) id_ptr_or_array -> . id array_decs
    (13) id_ptr_or_array -> . ptrs id
    (56) function_app -> . PRINTF LPAREN STRING print_formats RPAREN
    (57) function_app -> . ID LPAREN arguments RPAREN
    (48) var_assignment -> . id_ptr_or_array EQ expression
    (49) var_assignment -> . id_ptr_or_array EQ function_app
    (6) id -> . ID
    (16) ptrs -> . MULTIPLY ptrs
    (17) ptrs -> . MULTIPLY

    LPAREN          shift and go to state 31
    MINUS           shift and go to state 33
    DOUBLEPLUS      shift and go to state 35
    INT_VAL         shift and go to state 36
    FLOAT_VAL       shift and go to state 37
    PRINTF          shift and go to state 30
    ID              shift and go to state 32
    MULTIPLY        shift and go to state 34

    expression                     shift and go to state 109
    id_ptr_or_array                shift and go to state 63
    function_app                   shift and go to state 64
    var_assignment                 shift and go to state 65
    id                             shift and go to state 42
    ptrs                           shift and go to state 43

state 80

    (8) declarations -> type id_ptr_or_array COMMA . declarations
    (8) declarations -> . type id_ptr_or_array COMMA declarations
    (9) declarations -> . type id_ptr_or_array
    (10) declarations -> . VOID
    (4) type -> . INT
    (5) type -> . FLOAT

    VOID            shift and go to state 15
    INT             shift and go to state 4
    FLOAT           shift and go to state 5

    type                           shift and go to state 14
    declarations                   shift and go to state 110

state 81

    (21) statements -> semi_statement SEMI statements .

    RBRACE          reduce using rule 21 (statements -> semi_statement SEMI statements .)


state 82

    (65) expression -> expression PLUS expression .
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . MULTIPLY expression
    (68) expression -> expression . DIVIDE expression
    (69) expression -> expression . LESS expression
    (70) expression -> expression . GREATER expression

    PLUS            reduce using rule 65 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 65 (expression -> expression PLUS expression .)
    LESS            reduce using rule 65 (expression -> expression PLUS expression .)
    GREATER         reduce using rule 65 (expression -> expression PLUS expression .)
    SEMI            reduce using rule 65 (expression -> expression PLUS expression .)
    RBRACE          reduce using rule 65 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 65 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 65 (expression -> expression PLUS expression .)
    SQ_RBRACKET     reduce using rule 65 (expression -> expression PLUS expression .)
    LPAREN          reduce using rule 65 (expression -> expression PLUS expression .)
    DOUBLEPLUS      reduce using rule 65 (expression -> expression PLUS expression .)
    INT_VAL         reduce using rule 65 (expression -> expression PLUS expression .)
    FLOAT_VAL       reduce using rule 65 (expression -> expression PLUS expression .)
    PRINTF          reduce using rule 65 (expression -> expression PLUS expression .)
    ID              reduce using rule 65 (expression -> expression PLUS expression .)
    MULTIPLY        shift and go to state 52
    DIVIDE          shift and go to state 53

  ! MULTIPLY        [ reduce using rule 65 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 65 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 50 ]
  ! MINUS           [ shift and go to state 51 ]
  ! LESS            [ shift and go to state 54 ]
  ! GREATER         [ shift and go to state 55 ]


state 83

    (66) expression -> expression MINUS expression .
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . MULTIPLY expression
    (68) expression -> expression . DIVIDE expression
    (69) expression -> expression . LESS expression
    (70) expression -> expression . GREATER expression

    PLUS            reduce using rule 66 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 66 (expression -> expression MINUS expression .)
    LESS            reduce using rule 66 (expression -> expression MINUS expression .)
    GREATER         reduce using rule 66 (expression -> expression MINUS expression .)
    SEMI            reduce using rule 66 (expression -> expression MINUS expression .)
    RBRACE          reduce using rule 66 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 66 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 66 (expression -> expression MINUS expression .)
    SQ_RBRACKET     reduce using rule 66 (expression -> expression MINUS expression .)
    LPAREN          reduce using rule 66 (expression -> expression MINUS expression .)
    DOUBLEPLUS      reduce using rule 66 (expression -> expression MINUS expression .)
    INT_VAL         reduce using rule 66 (expression -> expression MINUS expression .)
    FLOAT_VAL       reduce using rule 66 (expression -> expression MINUS expression .)
    PRINTF          reduce using rule 66 (expression -> expression MINUS expression .)
    ID              reduce using rule 66 (expression -> expression MINUS expression .)
    MULTIPLY        shift and go to state 52
    DIVIDE          shift and go to state 53

  ! MULTIPLY        [ reduce using rule 66 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 66 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 50 ]
  ! MINUS           [ shift and go to state 51 ]
  ! LESS            [ shift and go to state 54 ]
  ! GREATER         [ shift and go to state 55 ]


state 84

    (67) expression -> expression MULTIPLY expression .
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . MULTIPLY expression
    (68) expression -> expression . DIVIDE expression
    (69) expression -> expression . LESS expression
    (70) expression -> expression . GREATER expression

    PLUS            reduce using rule 67 (expression -> expression MULTIPLY expression .)
    MINUS           reduce using rule 67 (expression -> expression MULTIPLY expression .)
    MULTIPLY        reduce using rule 67 (expression -> expression MULTIPLY expression .)
    DIVIDE          reduce using rule 67 (expression -> expression MULTIPLY expression .)
    LESS            reduce using rule 67 (expression -> expression MULTIPLY expression .)
    GREATER         reduce using rule 67 (expression -> expression MULTIPLY expression .)
    SEMI            reduce using rule 67 (expression -> expression MULTIPLY expression .)
    RBRACE          reduce using rule 67 (expression -> expression MULTIPLY expression .)
    RPAREN          reduce using rule 67 (expression -> expression MULTIPLY expression .)
    COMMA           reduce using rule 67 (expression -> expression MULTIPLY expression .)
    SQ_RBRACKET     reduce using rule 67 (expression -> expression MULTIPLY expression .)
    LPAREN          reduce using rule 67 (expression -> expression MULTIPLY expression .)
    DOUBLEPLUS      reduce using rule 67 (expression -> expression MULTIPLY expression .)
    INT_VAL         reduce using rule 67 (expression -> expression MULTIPLY expression .)
    FLOAT_VAL       reduce using rule 67 (expression -> expression MULTIPLY expression .)
    PRINTF          reduce using rule 67 (expression -> expression MULTIPLY expression .)
    ID              reduce using rule 67 (expression -> expression MULTIPLY expression .)

  ! PLUS            [ shift and go to state 50 ]
  ! MINUS           [ shift and go to state 51 ]
  ! MULTIPLY        [ shift and go to state 52 ]
  ! DIVIDE          [ shift and go to state 53 ]
  ! LESS            [ shift and go to state 54 ]
  ! GREATER         [ shift and go to state 55 ]


state 85

    (68) expression -> expression DIVIDE expression .
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . MULTIPLY expression
    (68) expression -> expression . DIVIDE expression
    (69) expression -> expression . LESS expression
    (70) expression -> expression . GREATER expression

    PLUS            reduce using rule 68 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 68 (expression -> expression DIVIDE expression .)
    MULTIPLY        reduce using rule 68 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 68 (expression -> expression DIVIDE expression .)
    LESS            reduce using rule 68 (expression -> expression DIVIDE expression .)
    GREATER         reduce using rule 68 (expression -> expression DIVIDE expression .)
    SEMI            reduce using rule 68 (expression -> expression DIVIDE expression .)
    RBRACE          reduce using rule 68 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 68 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 68 (expression -> expression DIVIDE expression .)
    SQ_RBRACKET     reduce using rule 68 (expression -> expression DIVIDE expression .)
    LPAREN          reduce using rule 68 (expression -> expression DIVIDE expression .)
    DOUBLEPLUS      reduce using rule 68 (expression -> expression DIVIDE expression .)
    INT_VAL         reduce using rule 68 (expression -> expression DIVIDE expression .)
    FLOAT_VAL       reduce using rule 68 (expression -> expression DIVIDE expression .)
    PRINTF          reduce using rule 68 (expression -> expression DIVIDE expression .)
    ID              reduce using rule 68 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 50 ]
  ! MINUS           [ shift and go to state 51 ]
  ! MULTIPLY        [ shift and go to state 52 ]
  ! DIVIDE          [ shift and go to state 53 ]
  ! LESS            [ shift and go to state 54 ]
  ! GREATER         [ shift and go to state 55 ]


state 86

    (69) expression -> expression LESS expression .
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . MULTIPLY expression
    (68) expression -> expression . DIVIDE expression
    (69) expression -> expression . LESS expression
    (70) expression -> expression . GREATER expression

    LESS            reduce using rule 69 (expression -> expression LESS expression .)
    GREATER         reduce using rule 69 (expression -> expression LESS expression .)
    SEMI            reduce using rule 69 (expression -> expression LESS expression .)
    RBRACE          reduce using rule 69 (expression -> expression LESS expression .)
    RPAREN          reduce using rule 69 (expression -> expression LESS expression .)
    COMMA           reduce using rule 69 (expression -> expression LESS expression .)
    SQ_RBRACKET     reduce using rule 69 (expression -> expression LESS expression .)
    LPAREN          reduce using rule 69 (expression -> expression LESS expression .)
    DOUBLEPLUS      reduce using rule 69 (expression -> expression LESS expression .)
    INT_VAL         reduce using rule 69 (expression -> expression LESS expression .)
    FLOAT_VAL       reduce using rule 69 (expression -> expression LESS expression .)
    PRINTF          reduce using rule 69 (expression -> expression LESS expression .)
    ID              reduce using rule 69 (expression -> expression LESS expression .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    MULTIPLY        shift and go to state 52
    DIVIDE          shift and go to state 53

  ! PLUS            [ reduce using rule 69 (expression -> expression LESS expression .) ]
  ! MINUS           [ reduce using rule 69 (expression -> expression LESS expression .) ]
  ! MULTIPLY        [ reduce using rule 69 (expression -> expression LESS expression .) ]
  ! DIVIDE          [ reduce using rule 69 (expression -> expression LESS expression .) ]
  ! LESS            [ shift and go to state 54 ]
  ! GREATER         [ shift and go to state 55 ]


state 87

    (70) expression -> expression GREATER expression .
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . MULTIPLY expression
    (68) expression -> expression . DIVIDE expression
    (69) expression -> expression . LESS expression
    (70) expression -> expression . GREATER expression

    LESS            reduce using rule 70 (expression -> expression GREATER expression .)
    GREATER         reduce using rule 70 (expression -> expression GREATER expression .)
    SEMI            reduce using rule 70 (expression -> expression GREATER expression .)
    RBRACE          reduce using rule 70 (expression -> expression GREATER expression .)
    RPAREN          reduce using rule 70 (expression -> expression GREATER expression .)
    COMMA           reduce using rule 70 (expression -> expression GREATER expression .)
    SQ_RBRACKET     reduce using rule 70 (expression -> expression GREATER expression .)
    LPAREN          reduce using rule 70 (expression -> expression GREATER expression .)
    DOUBLEPLUS      reduce using rule 70 (expression -> expression GREATER expression .)
    INT_VAL         reduce using rule 70 (expression -> expression GREATER expression .)
    FLOAT_VAL       reduce using rule 70 (expression -> expression GREATER expression .)
    PRINTF          reduce using rule 70 (expression -> expression GREATER expression .)
    ID              reduce using rule 70 (expression -> expression GREATER expression .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    MULTIPLY        shift and go to state 52
    DIVIDE          shift and go to state 53

  ! PLUS            [ reduce using rule 70 (expression -> expression GREATER expression .) ]
  ! MINUS           [ reduce using rule 70 (expression -> expression GREATER expression .) ]
  ! MULTIPLY        [ reduce using rule 70 (expression -> expression GREATER expression .) ]
  ! DIVIDE          [ reduce using rule 70 (expression -> expression GREATER expression .) ]
  ! LESS            [ shift and go to state 54 ]
  ! GREATER         [ shift and go to state 55 ]


state 88

    (50) var_and_assign -> var_assignment COMMA . var_and_assign
    (50) var_and_assign -> . var_assignment COMMA var_and_assign
    (51) var_and_assign -> . var_assignment
    (52) var_and_assign -> . id_ptr_or_array COMMA var_and_assign
    (53) var_and_assign -> . id_ptr_or_array
    (48) var_assignment -> . id_ptr_or_array EQ expression
    (49) var_assignment -> . id_ptr_or_array EQ function_app
    (11) id_ptr_or_array -> . id
    (12) id_ptr_or_array -> . id array_decs
    (13) id_ptr_or_array -> . ptrs id
    (6) id -> . ID
    (16) ptrs -> . MULTIPLY ptrs
    (17) ptrs -> . MULTIPLY

    ID              shift and go to state 8
    MULTIPLY        shift and go to state 34

    var_assignment                 shift and go to state 57
    var_and_assign                 shift and go to state 111
    id_ptr_or_array                shift and go to state 58
    id                             shift and go to state 42
    ptrs                           shift and go to state 43

state 89

    (52) var_and_assign -> id_ptr_or_array COMMA . var_and_assign
    (50) var_and_assign -> . var_assignment COMMA var_and_assign
    (51) var_and_assign -> . var_assignment
    (52) var_and_assign -> . id_ptr_or_array COMMA var_and_assign
    (53) var_and_assign -> . id_ptr_or_array
    (48) var_assignment -> . id_ptr_or_array EQ expression
    (49) var_assignment -> . id_ptr_or_array EQ function_app
    (11) id_ptr_or_array -> . id
    (12) id_ptr_or_array -> . id array_decs
    (13) id_ptr_or_array -> . ptrs id
    (6) id -> . ID
    (16) ptrs -> . MULTIPLY ptrs
    (17) ptrs -> . MULTIPLY

    ID              shift and go to state 8
    MULTIPLY        shift and go to state 34

    id_ptr_or_array                shift and go to state 58
    var_and_assign                 shift and go to state 112
    var_assignment                 shift and go to state 57
    id                             shift and go to state 42
    ptrs                           shift and go to state 43

state 90

    (48) var_assignment -> id_ptr_or_array EQ expression .
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . MULTIPLY expression
    (68) expression -> expression . DIVIDE expression
    (69) expression -> expression . LESS expression
    (70) expression -> expression . GREATER expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
    SEMI            reduce using rule 48 (var_assignment -> id_ptr_or_array EQ expression .)
    RBRACE          reduce using rule 48 (var_assignment -> id_ptr_or_array EQ expression .)
    COMMA           reduce using rule 48 (var_assignment -> id_ptr_or_array EQ expression .)
    RPAREN          reduce using rule 48 (var_assignment -> id_ptr_or_array EQ expression .)
    SQ_RBRACKET     reduce using rule 48 (var_assignment -> id_ptr_or_array EQ expression .)
    LPAREN          reduce using rule 48 (var_assignment -> id_ptr_or_array EQ expression .)
    DOUBLEPLUS      reduce using rule 48 (var_assignment -> id_ptr_or_array EQ expression .)
    INT_VAL         reduce using rule 48 (var_assignment -> id_ptr_or_array EQ expression .)
    FLOAT_VAL       reduce using rule 48 (var_assignment -> id_ptr_or_array EQ expression .)
    PRINTF          reduce using rule 48 (var_assignment -> id_ptr_or_array EQ expression .)
    ID              reduce using rule 48 (var_assignment -> id_ptr_or_array EQ expression .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    MULTIPLY        shift and go to state 52
    DIVIDE          shift and go to state 53
    LESS            shift and go to state 54
    GREATER         shift and go to state 55

  ! PLUS            [ reduce using rule 48 (var_assignment -> id_ptr_or_array EQ expression .) ]
  ! MINUS           [ reduce using rule 48 (var_assignment -> id_ptr_or_array EQ expression .) ]
  ! MULTIPLY        [ reduce using rule 48 (var_assignment -> id_ptr_or_array EQ expression .) ]
  ! DIVIDE          [ reduce using rule 48 (var_assignment -> id_ptr_or_array EQ expression .) ]
  ! LESS            [ reduce using rule 48 (var_assignment -> id_ptr_or_array EQ expression .) ]
  ! GREATER         [ reduce using rule 48 (var_assignment -> id_ptr_or_array EQ expression .) ]


state 91

    (49) var_assignment -> id_ptr_or_array EQ function_app .
    (76) expression -> function_app .

  ! reduce/reduce conflict for PLUS resolved using rule 49 (var_assignment -> id_ptr_or_array EQ function_app .)
  ! reduce/reduce conflict for MINUS resolved using rule 49 (var_assignment -> id_ptr_or_array EQ function_app .)
  ! reduce/reduce conflict for MULTIPLY resolved using rule 49 (var_assignment -> id_ptr_or_array EQ function_app .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 49 (var_assignment -> id_ptr_or_array EQ function_app .)
  ! reduce/reduce conflict for LESS resolved using rule 49 (var_assignment -> id_ptr_or_array EQ function_app .)
  ! reduce/reduce conflict for GREATER resolved using rule 49 (var_assignment -> id_ptr_or_array EQ function_app .)
  ! reduce/reduce conflict for SEMI resolved using rule 49 (var_assignment -> id_ptr_or_array EQ function_app .)
  ! reduce/reduce conflict for RBRACE resolved using rule 49 (var_assignment -> id_ptr_or_array EQ function_app .)
  ! reduce/reduce conflict for RPAREN resolved using rule 49 (var_assignment -> id_ptr_or_array EQ function_app .)
  ! reduce/reduce conflict for COMMA resolved using rule 49 (var_assignment -> id_ptr_or_array EQ function_app .)
  ! reduce/reduce conflict for SQ_RBRACKET resolved using rule 49 (var_assignment -> id_ptr_or_array EQ function_app .)
  ! reduce/reduce conflict for LPAREN resolved using rule 49 (var_assignment -> id_ptr_or_array EQ function_app .)
  ! reduce/reduce conflict for DOUBLEPLUS resolved using rule 49 (var_assignment -> id_ptr_or_array EQ function_app .)
  ! reduce/reduce conflict for INT_VAL resolved using rule 49 (var_assignment -> id_ptr_or_array EQ function_app .)
  ! reduce/reduce conflict for FLOAT_VAL resolved using rule 49 (var_assignment -> id_ptr_or_array EQ function_app .)
  ! reduce/reduce conflict for PRINTF resolved using rule 49 (var_assignment -> id_ptr_or_array EQ function_app .)
  ! reduce/reduce conflict for ID resolved using rule 49 (var_assignment -> id_ptr_or_array EQ function_app .)
    SEMI            reduce using rule 49 (var_assignment -> id_ptr_or_array EQ function_app .)
    RBRACE          reduce using rule 49 (var_assignment -> id_ptr_or_array EQ function_app .)
    PLUS            reduce using rule 49 (var_assignment -> id_ptr_or_array EQ function_app .)
    MINUS           reduce using rule 49 (var_assignment -> id_ptr_or_array EQ function_app .)
    MULTIPLY        reduce using rule 49 (var_assignment -> id_ptr_or_array EQ function_app .)
    DIVIDE          reduce using rule 49 (var_assignment -> id_ptr_or_array EQ function_app .)
    LESS            reduce using rule 49 (var_assignment -> id_ptr_or_array EQ function_app .)
    GREATER         reduce using rule 49 (var_assignment -> id_ptr_or_array EQ function_app .)
    COMMA           reduce using rule 49 (var_assignment -> id_ptr_or_array EQ function_app .)
    RPAREN          reduce using rule 49 (var_assignment -> id_ptr_or_array EQ function_app .)
    SQ_RBRACKET     reduce using rule 49 (var_assignment -> id_ptr_or_array EQ function_app .)
    LPAREN          reduce using rule 49 (var_assignment -> id_ptr_or_array EQ function_app .)
    DOUBLEPLUS      reduce using rule 49 (var_assignment -> id_ptr_or_array EQ function_app .)
    INT_VAL         reduce using rule 49 (var_assignment -> id_ptr_or_array EQ function_app .)
    FLOAT_VAL       reduce using rule 49 (var_assignment -> id_ptr_or_array EQ function_app .)
    PRINTF          reduce using rule 49 (var_assignment -> id_ptr_or_array EQ function_app .)
    ID              reduce using rule 49 (var_assignment -> id_ptr_or_array EQ function_app .)

  ! PLUS            [ reduce using rule 76 (expression -> function_app .) ]
  ! MINUS           [ reduce using rule 76 (expression -> function_app .) ]
  ! MULTIPLY        [ reduce using rule 76 (expression -> function_app .) ]
  ! DIVIDE          [ reduce using rule 76 (expression -> function_app .) ]
  ! LESS            [ reduce using rule 76 (expression -> function_app .) ]
  ! GREATER         [ reduce using rule 76 (expression -> function_app .) ]
  ! SEMI            [ reduce using rule 76 (expression -> function_app .) ]
  ! RBRACE          [ reduce using rule 76 (expression -> function_app .) ]
  ! RPAREN          [ reduce using rule 76 (expression -> function_app .) ]
  ! COMMA           [ reduce using rule 76 (expression -> function_app .) ]
  ! SQ_RBRACKET     [ reduce using rule 76 (expression -> function_app .) ]
  ! LPAREN          [ reduce using rule 76 (expression -> function_app .) ]
  ! DOUBLEPLUS      [ reduce using rule 76 (expression -> function_app .) ]
  ! INT_VAL         [ reduce using rule 76 (expression -> function_app .) ]
  ! FLOAT_VAL       [ reduce using rule 76 (expression -> function_app .) ]
  ! PRINTF          [ reduce using rule 76 (expression -> function_app .) ]
  ! ID              [ reduce using rule 76 (expression -> function_app .) ]


state 92

    (56) function_app -> PRINTF LPAREN STRING . print_formats RPAREN
    (58) print_formats -> . COMMA expression print_formats
    (59) print_formats -> . expression
    (60) print_formats -> . empty
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression MULTIPLY expression
    (68) expression -> . expression DIVIDE expression
    (69) expression -> . expression LESS expression
    (70) expression -> . expression GREATER expression
    (71) expression -> . LPAREN expression RPAREN
    (72) expression -> . MINUS expression
    (73) expression -> . id_ptr_or_array DOUBLEPLUS
    (74) expression -> . DOUBLEPLUS id_ptr_or_array
    (75) expression -> . id_ptr_or_array
    (76) expression -> . function_app
    (77) expression -> . var_assignment
    (78) expression -> . INT_VAL
    (79) expression -> . FLOAT_VAL
    (64) empty -> .
    (11) id_ptr_or_array -> . id
    (12) id_ptr_or_array -> . id array_decs
    (13) id_ptr_or_array -> . ptrs id
    (56) function_app -> . PRINTF LPAREN STRING print_formats RPAREN
    (57) function_app -> . ID LPAREN arguments RPAREN
    (48) var_assignment -> . id_ptr_or_array EQ expression
    (49) var_assignment -> . id_ptr_or_array EQ function_app
    (6) id -> . ID
    (16) ptrs -> . MULTIPLY ptrs
    (17) ptrs -> . MULTIPLY

    COMMA           shift and go to state 114
    LPAREN          shift and go to state 31
    MINUS           shift and go to state 33
    DOUBLEPLUS      shift and go to state 35
    INT_VAL         shift and go to state 36
    FLOAT_VAL       shift and go to state 37
    RPAREN          reduce using rule 64 (empty -> .)
    PRINTF          shift and go to state 30
    ID              shift and go to state 32
    MULTIPLY        shift and go to state 34

    print_formats                  shift and go to state 113
    expression                     shift and go to state 115
    empty                          shift and go to state 116
    id_ptr_or_array                shift and go to state 63
    function_app                   shift and go to state 64
    var_assignment                 shift and go to state 65
    id                             shift and go to state 42
    ptrs                           shift and go to state 43

state 93

    (71) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 71 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 71 (expression -> LPAREN expression RPAREN .)
    MULTIPLY        reduce using rule 71 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 71 (expression -> LPAREN expression RPAREN .)
    LESS            reduce using rule 71 (expression -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 71 (expression -> LPAREN expression RPAREN .)
    SEMI            reduce using rule 71 (expression -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 71 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 71 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 71 (expression -> LPAREN expression RPAREN .)
    SQ_RBRACKET     reduce using rule 71 (expression -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 71 (expression -> LPAREN expression RPAREN .)
    DOUBLEPLUS      reduce using rule 71 (expression -> LPAREN expression RPAREN .)
    INT_VAL         reduce using rule 71 (expression -> LPAREN expression RPAREN .)
    FLOAT_VAL       reduce using rule 71 (expression -> LPAREN expression RPAREN .)
    PRINTF          reduce using rule 71 (expression -> LPAREN expression RPAREN .)
    ID              reduce using rule 71 (expression -> LPAREN expression RPAREN .)


state 94

    (57) function_app -> ID LPAREN arguments . RPAREN

    RPAREN          shift and go to state 117


state 95

    (61) arguments -> expression . COMMA arguments
    (62) arguments -> expression .
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . MULTIPLY expression
    (68) expression -> expression . DIVIDE expression
    (69) expression -> expression . LESS expression
    (70) expression -> expression . GREATER expression

    COMMA           shift and go to state 118
    RPAREN          reduce using rule 62 (arguments -> expression .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    MULTIPLY        shift and go to state 52
    DIVIDE          shift and go to state 53
    LESS            shift and go to state 54
    GREATER         shift and go to state 55


state 96

    (63) arguments -> empty .

    RPAREN          reduce using rule 63 (arguments -> empty .)


state 97

    (34) elif_else -> ELSE IF . LPAREN expression RPAREN block elif_else

    LPAREN          shift and go to state 119


state 98

    (35) elif_else -> ELSE block .

    PRINTF          reduce using rule 35 (elif_else -> ELSE block .)
    ID              reduce using rule 35 (elif_else -> ELSE block .)
    LPAREN          reduce using rule 35 (elif_else -> ELSE block .)
    MINUS           reduce using rule 35 (elif_else -> ELSE block .)
    DOUBLEPLUS      reduce using rule 35 (elif_else -> ELSE block .)
    INT_VAL         reduce using rule 35 (elif_else -> ELSE block .)
    FLOAT_VAL       reduce using rule 35 (elif_else -> ELSE block .)
    RETURN          reduce using rule 35 (elif_else -> ELSE block .)
    FOR             reduce using rule 35 (elif_else -> ELSE block .)
    WHILE           reduce using rule 35 (elif_else -> ELSE block .)
    INT             reduce using rule 35 (elif_else -> ELSE block .)
    FLOAT           reduce using rule 35 (elif_else -> ELSE block .)
    IF              reduce using rule 35 (elif_else -> ELSE block .)
    MULTIPLY        reduce using rule 35 (elif_else -> ELSE block .)
    RBRACE          reduce using rule 35 (elif_else -> ELSE block .)


state 99

    (37) for -> FOR LPAREN loop_init_or_empty . SEMI semi_statement_or_empty SEMI semi_statement_or_empty RPAREN block

    SEMI            shift and go to state 120


state 100

    (38) loop_init_or_empty -> loop_init .

    SEMI            reduce using rule 38 (loop_init_or_empty -> loop_init .)


state 101

    (39) loop_init_or_empty -> expression .
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . MULTIPLY expression
    (68) expression -> expression . DIVIDE expression
    (69) expression -> expression . LESS expression
    (70) expression -> expression . GREATER expression
    (27) semi_statement -> expression .

  ! reduce/reduce conflict for SEMI resolved using rule 27 (semi_statement -> expression .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    MULTIPLY        shift and go to state 52
    DIVIDE          shift and go to state 53
    LESS            shift and go to state 54
    GREATER         shift and go to state 55
    SEMI            reduce using rule 27 (semi_statement -> expression .)

  ! SEMI            [ reduce using rule 39 (loop_init_or_empty -> expression .) ]


state 102

    (40) loop_init_or_empty -> empty .

    SEMI            reduce using rule 40 (loop_init_or_empty -> empty .)


state 103

    (44) loop_init -> type . var_assignment
    (47) var_declaration -> type . var_and_assign
    (48) var_assignment -> . id_ptr_or_array EQ expression
    (49) var_assignment -> . id_ptr_or_array EQ function_app
    (50) var_and_assign -> . var_assignment COMMA var_and_assign
    (51) var_and_assign -> . var_assignment
    (52) var_and_assign -> . id_ptr_or_array COMMA var_and_assign
    (53) var_and_assign -> . id_ptr_or_array
    (11) id_ptr_or_array -> . id
    (12) id_ptr_or_array -> . id array_decs
    (13) id_ptr_or_array -> . ptrs id
    (6) id -> . ID
    (16) ptrs -> . MULTIPLY ptrs
    (17) ptrs -> . MULTIPLY

    ID              shift and go to state 8
    MULTIPLY        shift and go to state 34

    var_assignment                 shift and go to state 121
    var_and_assign                 shift and go to state 56
    id_ptr_or_array                shift and go to state 122
    id                             shift and go to state 42
    ptrs                           shift and go to state 43

state 104

    (77) expression -> var_assignment .
    (25) semi_statement -> var_assignment .

  ! reduce/reduce conflict for SEMI resolved using rule 25 (semi_statement -> var_assignment .)
    PLUS            reduce using rule 77 (expression -> var_assignment .)
    MINUS           reduce using rule 77 (expression -> var_assignment .)
    MULTIPLY        reduce using rule 77 (expression -> var_assignment .)
    DIVIDE          reduce using rule 77 (expression -> var_assignment .)
    LESS            reduce using rule 77 (expression -> var_assignment .)
    GREATER         reduce using rule 77 (expression -> var_assignment .)
    SEMI            reduce using rule 25 (semi_statement -> var_assignment .)

  ! SEMI            [ reduce using rule 77 (expression -> var_assignment .) ]


state 105

    (45) loop_init -> semi_statement .

    SEMI            reduce using rule 45 (loop_init -> semi_statement .)


state 106

    (76) expression -> function_app .
    (26) semi_statement -> function_app .

  ! reduce/reduce conflict for SEMI resolved using rule 26 (semi_statement -> function_app .)
    PLUS            reduce using rule 76 (expression -> function_app .)
    MINUS           reduce using rule 76 (expression -> function_app .)
    MULTIPLY        reduce using rule 76 (expression -> function_app .)
    DIVIDE          reduce using rule 76 (expression -> function_app .)
    LESS            reduce using rule 76 (expression -> function_app .)
    GREATER         reduce using rule 76 (expression -> function_app .)
    SEMI            reduce using rule 26 (semi_statement -> function_app .)

  ! SEMI            [ reduce using rule 76 (expression -> function_app .) ]


state 107

    (46) while -> WHILE LPAREN expression . RPAREN block
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . MULTIPLY expression
    (68) expression -> expression . DIVIDE expression
    (69) expression -> expression . LESS expression
    (70) expression -> expression . GREATER expression

    RPAREN          shift and go to state 123
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    MULTIPLY        shift and go to state 52
    DIVIDE          shift and go to state 53
    LESS            shift and go to state 54
    GREATER         shift and go to state 55


state 108

    (14) array_decs -> SQ_LBRACKET expression . SQ_RBRACKET array_decs
    (15) array_decs -> SQ_LBRACKET expression . SQ_RBRACKET
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . MULTIPLY expression
    (68) expression -> expression . DIVIDE expression
    (69) expression -> expression . LESS expression
    (70) expression -> expression . GREATER expression

    SQ_RBRACKET     shift and go to state 124
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    MULTIPLY        shift and go to state 52
    DIVIDE          shift and go to state 53
    LESS            shift and go to state 54
    GREATER         shift and go to state 55


state 109

    (33) if -> IF LPAREN expression . RPAREN block
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . MULTIPLY expression
    (68) expression -> expression . DIVIDE expression
    (69) expression -> expression . LESS expression
    (70) expression -> expression . GREATER expression

    RPAREN          shift and go to state 125
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    MULTIPLY        shift and go to state 52
    DIVIDE          shift and go to state 53
    LESS            shift and go to state 54
    GREATER         shift and go to state 55


state 110

    (8) declarations -> type id_ptr_or_array COMMA declarations .

    RPAREN          reduce using rule 8 (declarations -> type id_ptr_or_array COMMA declarations .)


state 111

    (50) var_and_assign -> var_assignment COMMA var_and_assign .

    SEMI            reduce using rule 50 (var_and_assign -> var_assignment COMMA var_and_assign .)
    RBRACE          reduce using rule 50 (var_and_assign -> var_assignment COMMA var_and_assign .)
    RPAREN          reduce using rule 50 (var_and_assign -> var_assignment COMMA var_and_assign .)


state 112

    (52) var_and_assign -> id_ptr_or_array COMMA var_and_assign .

    SEMI            reduce using rule 52 (var_and_assign -> id_ptr_or_array COMMA var_and_assign .)
    RBRACE          reduce using rule 52 (var_and_assign -> id_ptr_or_array COMMA var_and_assign .)
    RPAREN          reduce using rule 52 (var_and_assign -> id_ptr_or_array COMMA var_and_assign .)


state 113

    (56) function_app -> PRINTF LPAREN STRING print_formats . RPAREN

    RPAREN          shift and go to state 126


state 114

    (58) print_formats -> COMMA . expression print_formats
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression MULTIPLY expression
    (68) expression -> . expression DIVIDE expression
    (69) expression -> . expression LESS expression
    (70) expression -> . expression GREATER expression
    (71) expression -> . LPAREN expression RPAREN
    (72) expression -> . MINUS expression
    (73) expression -> . id_ptr_or_array DOUBLEPLUS
    (74) expression -> . DOUBLEPLUS id_ptr_or_array
    (75) expression -> . id_ptr_or_array
    (76) expression -> . function_app
    (77) expression -> . var_assignment
    (78) expression -> . INT_VAL
    (79) expression -> . FLOAT_VAL
    (11) id_ptr_or_array -> . id
    (12) id_ptr_or_array -> . id array_decs
    (13) id_ptr_or_array -> . ptrs id
    (56) function_app -> . PRINTF LPAREN STRING print_formats RPAREN
    (57) function_app -> . ID LPAREN arguments RPAREN
    (48) var_assignment -> . id_ptr_or_array EQ expression
    (49) var_assignment -> . id_ptr_or_array EQ function_app
    (6) id -> . ID
    (16) ptrs -> . MULTIPLY ptrs
    (17) ptrs -> . MULTIPLY

    LPAREN          shift and go to state 31
    MINUS           shift and go to state 33
    DOUBLEPLUS      shift and go to state 35
    INT_VAL         shift and go to state 36
    FLOAT_VAL       shift and go to state 37
    PRINTF          shift and go to state 30
    ID              shift and go to state 32
    MULTIPLY        shift and go to state 34

    expression                     shift and go to state 127
    id_ptr_or_array                shift and go to state 63
    function_app                   shift and go to state 64
    var_assignment                 shift and go to state 65
    id                             shift and go to state 42
    ptrs                           shift and go to state 43

state 115

    (59) print_formats -> expression .
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . MULTIPLY expression
    (68) expression -> expression . DIVIDE expression
    (69) expression -> expression . LESS expression
    (70) expression -> expression . GREATER expression

    RPAREN          reduce using rule 59 (print_formats -> expression .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    MULTIPLY        shift and go to state 52
    DIVIDE          shift and go to state 53
    LESS            shift and go to state 54
    GREATER         shift and go to state 55


state 116

    (60) print_formats -> empty .

    RPAREN          reduce using rule 60 (print_formats -> empty .)


state 117

    (57) function_app -> ID LPAREN arguments RPAREN .

    SEMI            reduce using rule 57 (function_app -> ID LPAREN arguments RPAREN .)
    RBRACE          reduce using rule 57 (function_app -> ID LPAREN arguments RPAREN .)
    PLUS            reduce using rule 57 (function_app -> ID LPAREN arguments RPAREN .)
    MINUS           reduce using rule 57 (function_app -> ID LPAREN arguments RPAREN .)
    MULTIPLY        reduce using rule 57 (function_app -> ID LPAREN arguments RPAREN .)
    DIVIDE          reduce using rule 57 (function_app -> ID LPAREN arguments RPAREN .)
    LESS            reduce using rule 57 (function_app -> ID LPAREN arguments RPAREN .)
    GREATER         reduce using rule 57 (function_app -> ID LPAREN arguments RPAREN .)
    RPAREN          reduce using rule 57 (function_app -> ID LPAREN arguments RPAREN .)
    COMMA           reduce using rule 57 (function_app -> ID LPAREN arguments RPAREN .)
    SQ_RBRACKET     reduce using rule 57 (function_app -> ID LPAREN arguments RPAREN .)
    LPAREN          reduce using rule 57 (function_app -> ID LPAREN arguments RPAREN .)
    DOUBLEPLUS      reduce using rule 57 (function_app -> ID LPAREN arguments RPAREN .)
    INT_VAL         reduce using rule 57 (function_app -> ID LPAREN arguments RPAREN .)
    FLOAT_VAL       reduce using rule 57 (function_app -> ID LPAREN arguments RPAREN .)
    PRINTF          reduce using rule 57 (function_app -> ID LPAREN arguments RPAREN .)
    ID              reduce using rule 57 (function_app -> ID LPAREN arguments RPAREN .)


state 118

    (61) arguments -> expression COMMA . arguments
    (61) arguments -> . expression COMMA arguments
    (62) arguments -> . expression
    (63) arguments -> . empty
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression MULTIPLY expression
    (68) expression -> . expression DIVIDE expression
    (69) expression -> . expression LESS expression
    (70) expression -> . expression GREATER expression
    (71) expression -> . LPAREN expression RPAREN
    (72) expression -> . MINUS expression
    (73) expression -> . id_ptr_or_array DOUBLEPLUS
    (74) expression -> . DOUBLEPLUS id_ptr_or_array
    (75) expression -> . id_ptr_or_array
    (76) expression -> . function_app
    (77) expression -> . var_assignment
    (78) expression -> . INT_VAL
    (79) expression -> . FLOAT_VAL
    (64) empty -> .
    (11) id_ptr_or_array -> . id
    (12) id_ptr_or_array -> . id array_decs
    (13) id_ptr_or_array -> . ptrs id
    (56) function_app -> . PRINTF LPAREN STRING print_formats RPAREN
    (57) function_app -> . ID LPAREN arguments RPAREN
    (48) var_assignment -> . id_ptr_or_array EQ expression
    (49) var_assignment -> . id_ptr_or_array EQ function_app
    (6) id -> . ID
    (16) ptrs -> . MULTIPLY ptrs
    (17) ptrs -> . MULTIPLY

    LPAREN          shift and go to state 31
    MINUS           shift and go to state 33
    DOUBLEPLUS      shift and go to state 35
    INT_VAL         shift and go to state 36
    FLOAT_VAL       shift and go to state 37
    RPAREN          reduce using rule 64 (empty -> .)
    PRINTF          shift and go to state 30
    ID              shift and go to state 32
    MULTIPLY        shift and go to state 34

    expression                     shift and go to state 95
    arguments                      shift and go to state 128
    empty                          shift and go to state 96
    id_ptr_or_array                shift and go to state 63
    function_app                   shift and go to state 64
    var_assignment                 shift and go to state 65
    id                             shift and go to state 42
    ptrs                           shift and go to state 43

state 119

    (34) elif_else -> ELSE IF LPAREN . expression RPAREN block elif_else
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression MULTIPLY expression
    (68) expression -> . expression DIVIDE expression
    (69) expression -> . expression LESS expression
    (70) expression -> . expression GREATER expression
    (71) expression -> . LPAREN expression RPAREN
    (72) expression -> . MINUS expression
    (73) expression -> . id_ptr_or_array DOUBLEPLUS
    (74) expression -> . DOUBLEPLUS id_ptr_or_array
    (75) expression -> . id_ptr_or_array
    (76) expression -> . function_app
    (77) expression -> . var_assignment
    (78) expression -> . INT_VAL
    (79) expression -> . FLOAT_VAL
    (11) id_ptr_or_array -> . id
    (12) id_ptr_or_array -> . id array_decs
    (13) id_ptr_or_array -> . ptrs id
    (56) function_app -> . PRINTF LPAREN STRING print_formats RPAREN
    (57) function_app -> . ID LPAREN arguments RPAREN
    (48) var_assignment -> . id_ptr_or_array EQ expression
    (49) var_assignment -> . id_ptr_or_array EQ function_app
    (6) id -> . ID
    (16) ptrs -> . MULTIPLY ptrs
    (17) ptrs -> . MULTIPLY

    LPAREN          shift and go to state 31
    MINUS           shift and go to state 33
    DOUBLEPLUS      shift and go to state 35
    INT_VAL         shift and go to state 36
    FLOAT_VAL       shift and go to state 37
    PRINTF          shift and go to state 30
    ID              shift and go to state 32
    MULTIPLY        shift and go to state 34

    expression                     shift and go to state 129
    id_ptr_or_array                shift and go to state 63
    function_app                   shift and go to state 64
    var_assignment                 shift and go to state 65
    id                             shift and go to state 42
    ptrs                           shift and go to state 43

state 120

    (37) for -> FOR LPAREN loop_init_or_empty SEMI . semi_statement_or_empty SEMI semi_statement_or_empty RPAREN block
    (41) semi_statement_or_empty -> . semi_statement
    (42) semi_statement_or_empty -> . expression
    (43) semi_statement_or_empty -> . empty
    (24) semi_statement -> . var_declaration
    (25) semi_statement -> . var_assignment
    (26) semi_statement -> . function_app
    (27) semi_statement -> . expression
    (28) semi_statement -> . return_expr
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression MULTIPLY expression
    (68) expression -> . expression DIVIDE expression
    (69) expression -> . expression LESS expression
    (70) expression -> . expression GREATER expression
    (71) expression -> . LPAREN expression RPAREN
    (72) expression -> . MINUS expression
    (73) expression -> . id_ptr_or_array DOUBLEPLUS
    (74) expression -> . DOUBLEPLUS id_ptr_or_array
    (75) expression -> . id_ptr_or_array
    (76) expression -> . function_app
    (77) expression -> . var_assignment
    (78) expression -> . INT_VAL
    (79) expression -> . FLOAT_VAL
    (64) empty -> .
    (47) var_declaration -> . type var_and_assign
    (48) var_assignment -> . id_ptr_or_array EQ expression
    (49) var_assignment -> . id_ptr_or_array EQ function_app
    (56) function_app -> . PRINTF LPAREN STRING print_formats RPAREN
    (57) function_app -> . ID LPAREN arguments RPAREN
    (54) return_expr -> . RETURN expression
    (55) return_expr -> . RETURN
    (11) id_ptr_or_array -> . id
    (12) id_ptr_or_array -> . id array_decs
    (13) id_ptr_or_array -> . ptrs id
    (4) type -> . INT
    (5) type -> . FLOAT
    (6) id -> . ID
    (16) ptrs -> . MULTIPLY ptrs
    (17) ptrs -> . MULTIPLY

    LPAREN          shift and go to state 31
    MINUS           shift and go to state 33
    DOUBLEPLUS      shift and go to state 35
    INT_VAL         shift and go to state 36
    FLOAT_VAL       shift and go to state 37
    SEMI            reduce using rule 64 (empty -> .)
    PRINTF          shift and go to state 30
    ID              shift and go to state 32
    RETURN          shift and go to state 38
    INT             shift and go to state 4
    FLOAT           shift and go to state 5
    MULTIPLY        shift and go to state 34

    semi_statement_or_empty        shift and go to state 130
    semi_statement                 shift and go to state 131
    expression                     shift and go to state 132
    empty                          shift and go to state 133
    var_declaration                shift and go to state 20
    var_assignment                 shift and go to state 21
    function_app                   shift and go to state 22
    return_expr                    shift and go to state 24
    id_ptr_or_array                shift and go to state 63
    type                           shift and go to state 28
    id                             shift and go to state 42
    ptrs                           shift and go to state 43

state 121

    (44) loop_init -> type var_assignment .
    (50) var_and_assign -> var_assignment . COMMA var_and_assign
    (51) var_and_assign -> var_assignment .

  ! reduce/reduce conflict for SEMI resolved using rule 44 (loop_init -> type var_assignment .)
    SEMI            reduce using rule 44 (loop_init -> type var_assignment .)
    COMMA           shift and go to state 88

  ! SEMI            [ reduce using rule 51 (var_and_assign -> var_assignment .) ]


state 122

    (48) var_assignment -> id_ptr_or_array . EQ expression
    (49) var_assignment -> id_ptr_or_array . EQ function_app
    (52) var_and_assign -> id_ptr_or_array . COMMA var_and_assign
    (53) var_and_assign -> id_ptr_or_array .

    EQ              shift and go to state 59
    COMMA           shift and go to state 89
    SEMI            reduce using rule 53 (var_and_assign -> id_ptr_or_array .)


state 123

    (46) while -> WHILE LPAREN expression RPAREN . block
    (18) block -> . LBRACE statements RBRACE

    LBRACE          shift and go to state 12

    block                          shift and go to state 134

state 124

    (14) array_decs -> SQ_LBRACKET expression SQ_RBRACKET . array_decs
    (15) array_decs -> SQ_LBRACKET expression SQ_RBRACKET .
    (14) array_decs -> . SQ_LBRACKET expression SQ_RBRACKET array_decs
    (15) array_decs -> . SQ_LBRACKET expression SQ_RBRACKET

    EQ              reduce using rule 15 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET .)
    DOUBLEPLUS      reduce using rule 15 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET .)
    PLUS            reduce using rule 15 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET .)
    MINUS           reduce using rule 15 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET .)
    MULTIPLY        reduce using rule 15 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET .)
    DIVIDE          reduce using rule 15 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET .)
    LESS            reduce using rule 15 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET .)
    GREATER         reduce using rule 15 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET .)
    SEMI            reduce using rule 15 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET .)
    RBRACE          reduce using rule 15 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET .)
    COMMA           reduce using rule 15 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET .)
    RPAREN          reduce using rule 15 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET .)
    SQ_RBRACKET     reduce using rule 15 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET .)
    LPAREN          reduce using rule 15 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET .)
    INT_VAL         reduce using rule 15 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET .)
    FLOAT_VAL       reduce using rule 15 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET .)
    PRINTF          reduce using rule 15 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET .)
    ID              reduce using rule 15 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET .)
    SQ_LBRACKET     shift and go to state 77

    array_decs                     shift and go to state 135

state 125

    (33) if -> IF LPAREN expression RPAREN . block
    (18) block -> . LBRACE statements RBRACE

    LBRACE          shift and go to state 12

    block                          shift and go to state 136

state 126

    (56) function_app -> PRINTF LPAREN STRING print_formats RPAREN .

    SEMI            reduce using rule 56 (function_app -> PRINTF LPAREN STRING print_formats RPAREN .)
    RBRACE          reduce using rule 56 (function_app -> PRINTF LPAREN STRING print_formats RPAREN .)
    PLUS            reduce using rule 56 (function_app -> PRINTF LPAREN STRING print_formats RPAREN .)
    MINUS           reduce using rule 56 (function_app -> PRINTF LPAREN STRING print_formats RPAREN .)
    MULTIPLY        reduce using rule 56 (function_app -> PRINTF LPAREN STRING print_formats RPAREN .)
    DIVIDE          reduce using rule 56 (function_app -> PRINTF LPAREN STRING print_formats RPAREN .)
    LESS            reduce using rule 56 (function_app -> PRINTF LPAREN STRING print_formats RPAREN .)
    GREATER         reduce using rule 56 (function_app -> PRINTF LPAREN STRING print_formats RPAREN .)
    RPAREN          reduce using rule 56 (function_app -> PRINTF LPAREN STRING print_formats RPAREN .)
    COMMA           reduce using rule 56 (function_app -> PRINTF LPAREN STRING print_formats RPAREN .)
    SQ_RBRACKET     reduce using rule 56 (function_app -> PRINTF LPAREN STRING print_formats RPAREN .)
    LPAREN          reduce using rule 56 (function_app -> PRINTF LPAREN STRING print_formats RPAREN .)
    DOUBLEPLUS      reduce using rule 56 (function_app -> PRINTF LPAREN STRING print_formats RPAREN .)
    INT_VAL         reduce using rule 56 (function_app -> PRINTF LPAREN STRING print_formats RPAREN .)
    FLOAT_VAL       reduce using rule 56 (function_app -> PRINTF LPAREN STRING print_formats RPAREN .)
    PRINTF          reduce using rule 56 (function_app -> PRINTF LPAREN STRING print_formats RPAREN .)
    ID              reduce using rule 56 (function_app -> PRINTF LPAREN STRING print_formats RPAREN .)


state 127

    (58) print_formats -> COMMA expression . print_formats
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . MULTIPLY expression
    (68) expression -> expression . DIVIDE expression
    (69) expression -> expression . LESS expression
    (70) expression -> expression . GREATER expression
    (58) print_formats -> . COMMA expression print_formats
    (59) print_formats -> . expression
    (60) print_formats -> . empty
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression MULTIPLY expression
    (68) expression -> . expression DIVIDE expression
    (69) expression -> . expression LESS expression
    (70) expression -> . expression GREATER expression
    (71) expression -> . LPAREN expression RPAREN
    (72) expression -> . MINUS expression
    (73) expression -> . id_ptr_or_array DOUBLEPLUS
    (74) expression -> . DOUBLEPLUS id_ptr_or_array
    (75) expression -> . id_ptr_or_array
    (76) expression -> . function_app
    (77) expression -> . var_assignment
    (78) expression -> . INT_VAL
    (79) expression -> . FLOAT_VAL
    (64) empty -> .
    (11) id_ptr_or_array -> . id
    (12) id_ptr_or_array -> . id array_decs
    (13) id_ptr_or_array -> . ptrs id
    (56) function_app -> . PRINTF LPAREN STRING print_formats RPAREN
    (57) function_app -> . ID LPAREN arguments RPAREN
    (48) var_assignment -> . id_ptr_or_array EQ expression
    (49) var_assignment -> . id_ptr_or_array EQ function_app
    (6) id -> . ID
    (16) ptrs -> . MULTIPLY ptrs
    (17) ptrs -> . MULTIPLY

    PLUS            shift and go to state 50
    MINUS           shift and go to state 138
    MULTIPLY        shift and go to state 139
    DIVIDE          shift and go to state 53
    LESS            shift and go to state 54
    GREATER         shift and go to state 55
    COMMA           shift and go to state 114
    LPAREN          shift and go to state 31
    DOUBLEPLUS      shift and go to state 35
    INT_VAL         shift and go to state 36
    FLOAT_VAL       shift and go to state 37
    RPAREN          reduce using rule 64 (empty -> .)
    PRINTF          shift and go to state 30
    ID              shift and go to state 32

    expression                     shift and go to state 115
    print_formats                  shift and go to state 137
    empty                          shift and go to state 116
    id_ptr_or_array                shift and go to state 63
    function_app                   shift and go to state 64
    var_assignment                 shift and go to state 65
    id                             shift and go to state 42
    ptrs                           shift and go to state 43

state 128

    (61) arguments -> expression COMMA arguments .

    RPAREN          reduce using rule 61 (arguments -> expression COMMA arguments .)


state 129

    (34) elif_else -> ELSE IF LPAREN expression . RPAREN block elif_else
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . MULTIPLY expression
    (68) expression -> expression . DIVIDE expression
    (69) expression -> expression . LESS expression
    (70) expression -> expression . GREATER expression

    RPAREN          shift and go to state 140
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    MULTIPLY        shift and go to state 52
    DIVIDE          shift and go to state 53
    LESS            shift and go to state 54
    GREATER         shift and go to state 55


state 130

    (37) for -> FOR LPAREN loop_init_or_empty SEMI semi_statement_or_empty . SEMI semi_statement_or_empty RPAREN block

    SEMI            shift and go to state 141


state 131

    (41) semi_statement_or_empty -> semi_statement .

    SEMI            reduce using rule 41 (semi_statement_or_empty -> semi_statement .)
    RPAREN          reduce using rule 41 (semi_statement_or_empty -> semi_statement .)


state 132

    (42) semi_statement_or_empty -> expression .
    (27) semi_statement -> expression .
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . MULTIPLY expression
    (68) expression -> expression . DIVIDE expression
    (69) expression -> expression . LESS expression
    (70) expression -> expression . GREATER expression

  ! reduce/reduce conflict for SEMI resolved using rule 27 (semi_statement -> expression .)
  ! reduce/reduce conflict for RPAREN resolved using rule 27 (semi_statement -> expression .)
    SEMI            reduce using rule 27 (semi_statement -> expression .)
    RPAREN          reduce using rule 27 (semi_statement -> expression .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    MULTIPLY        shift and go to state 52
    DIVIDE          shift and go to state 53
    LESS            shift and go to state 54
    GREATER         shift and go to state 55

  ! SEMI            [ reduce using rule 42 (semi_statement_or_empty -> expression .) ]
  ! RPAREN          [ reduce using rule 42 (semi_statement_or_empty -> expression .) ]


state 133

    (43) semi_statement_or_empty -> empty .

    SEMI            reduce using rule 43 (semi_statement_or_empty -> empty .)
    RPAREN          reduce using rule 43 (semi_statement_or_empty -> empty .)


state 134

    (46) while -> WHILE LPAREN expression RPAREN block .

    PRINTF          reduce using rule 46 (while -> WHILE LPAREN expression RPAREN block .)
    ID              reduce using rule 46 (while -> WHILE LPAREN expression RPAREN block .)
    LPAREN          reduce using rule 46 (while -> WHILE LPAREN expression RPAREN block .)
    MINUS           reduce using rule 46 (while -> WHILE LPAREN expression RPAREN block .)
    DOUBLEPLUS      reduce using rule 46 (while -> WHILE LPAREN expression RPAREN block .)
    INT_VAL         reduce using rule 46 (while -> WHILE LPAREN expression RPAREN block .)
    FLOAT_VAL       reduce using rule 46 (while -> WHILE LPAREN expression RPAREN block .)
    RETURN          reduce using rule 46 (while -> WHILE LPAREN expression RPAREN block .)
    FOR             reduce using rule 46 (while -> WHILE LPAREN expression RPAREN block .)
    WHILE           reduce using rule 46 (while -> WHILE LPAREN expression RPAREN block .)
    INT             reduce using rule 46 (while -> WHILE LPAREN expression RPAREN block .)
    FLOAT           reduce using rule 46 (while -> WHILE LPAREN expression RPAREN block .)
    IF              reduce using rule 46 (while -> WHILE LPAREN expression RPAREN block .)
    MULTIPLY        reduce using rule 46 (while -> WHILE LPAREN expression RPAREN block .)
    RBRACE          reduce using rule 46 (while -> WHILE LPAREN expression RPAREN block .)


state 135

    (14) array_decs -> SQ_LBRACKET expression SQ_RBRACKET array_decs .

    EQ              reduce using rule 14 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET array_decs .)
    DOUBLEPLUS      reduce using rule 14 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET array_decs .)
    PLUS            reduce using rule 14 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET array_decs .)
    MINUS           reduce using rule 14 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET array_decs .)
    MULTIPLY        reduce using rule 14 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET array_decs .)
    DIVIDE          reduce using rule 14 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET array_decs .)
    LESS            reduce using rule 14 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET array_decs .)
    GREATER         reduce using rule 14 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET array_decs .)
    SEMI            reduce using rule 14 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET array_decs .)
    RBRACE          reduce using rule 14 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET array_decs .)
    COMMA           reduce using rule 14 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET array_decs .)
    RPAREN          reduce using rule 14 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET array_decs .)
    SQ_RBRACKET     reduce using rule 14 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET array_decs .)
    LPAREN          reduce using rule 14 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET array_decs .)
    INT_VAL         reduce using rule 14 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET array_decs .)
    FLOAT_VAL       reduce using rule 14 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET array_decs .)
    PRINTF          reduce using rule 14 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET array_decs .)
    ID              reduce using rule 14 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET array_decs .)


state 136

    (33) if -> IF LPAREN expression RPAREN block .

    ELSE            reduce using rule 33 (if -> IF LPAREN expression RPAREN block .)
    PRINTF          reduce using rule 33 (if -> IF LPAREN expression RPAREN block .)
    ID              reduce using rule 33 (if -> IF LPAREN expression RPAREN block .)
    LPAREN          reduce using rule 33 (if -> IF LPAREN expression RPAREN block .)
    MINUS           reduce using rule 33 (if -> IF LPAREN expression RPAREN block .)
    DOUBLEPLUS      reduce using rule 33 (if -> IF LPAREN expression RPAREN block .)
    INT_VAL         reduce using rule 33 (if -> IF LPAREN expression RPAREN block .)
    FLOAT_VAL       reduce using rule 33 (if -> IF LPAREN expression RPAREN block .)
    RETURN          reduce using rule 33 (if -> IF LPAREN expression RPAREN block .)
    FOR             reduce using rule 33 (if -> IF LPAREN expression RPAREN block .)
    WHILE           reduce using rule 33 (if -> IF LPAREN expression RPAREN block .)
    INT             reduce using rule 33 (if -> IF LPAREN expression RPAREN block .)
    FLOAT           reduce using rule 33 (if -> IF LPAREN expression RPAREN block .)
    IF              reduce using rule 33 (if -> IF LPAREN expression RPAREN block .)
    MULTIPLY        reduce using rule 33 (if -> IF LPAREN expression RPAREN block .)
    RBRACE          reduce using rule 33 (if -> IF LPAREN expression RPAREN block .)


state 137

    (58) print_formats -> COMMA expression print_formats .

    RPAREN          reduce using rule 58 (print_formats -> COMMA expression print_formats .)


state 138

    (66) expression -> expression MINUS . expression
    (72) expression -> MINUS . expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression MULTIPLY expression
    (68) expression -> . expression DIVIDE expression
    (69) expression -> . expression LESS expression
    (70) expression -> . expression GREATER expression
    (71) expression -> . LPAREN expression RPAREN
    (72) expression -> . MINUS expression
    (73) expression -> . id_ptr_or_array DOUBLEPLUS
    (74) expression -> . DOUBLEPLUS id_ptr_or_array
    (75) expression -> . id_ptr_or_array
    (76) expression -> . function_app
    (77) expression -> . var_assignment
    (78) expression -> . INT_VAL
    (79) expression -> . FLOAT_VAL
    (11) id_ptr_or_array -> . id
    (12) id_ptr_or_array -> . id array_decs
    (13) id_ptr_or_array -> . ptrs id
    (56) function_app -> . PRINTF LPAREN STRING print_formats RPAREN
    (57) function_app -> . ID LPAREN arguments RPAREN
    (48) var_assignment -> . id_ptr_or_array EQ expression
    (49) var_assignment -> . id_ptr_or_array EQ function_app
    (6) id -> . ID
    (16) ptrs -> . MULTIPLY ptrs
    (17) ptrs -> . MULTIPLY

    LPAREN          shift and go to state 31
    MINUS           shift and go to state 33
    DOUBLEPLUS      shift and go to state 35
    INT_VAL         shift and go to state 36
    FLOAT_VAL       shift and go to state 37
    PRINTF          shift and go to state 30
    ID              shift and go to state 32
    MULTIPLY        shift and go to state 34

    expression                     shift and go to state 142
    id_ptr_or_array                shift and go to state 63
    function_app                   shift and go to state 64
    var_assignment                 shift and go to state 65
    id                             shift and go to state 42
    ptrs                           shift and go to state 43

state 139

    (67) expression -> expression MULTIPLY . expression
    (16) ptrs -> MULTIPLY . ptrs
    (17) ptrs -> MULTIPLY .
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression MULTIPLY expression
    (68) expression -> . expression DIVIDE expression
    (69) expression -> . expression LESS expression
    (70) expression -> . expression GREATER expression
    (71) expression -> . LPAREN expression RPAREN
    (72) expression -> . MINUS expression
    (73) expression -> . id_ptr_or_array DOUBLEPLUS
    (74) expression -> . DOUBLEPLUS id_ptr_or_array
    (75) expression -> . id_ptr_or_array
    (76) expression -> . function_app
    (77) expression -> . var_assignment
    (78) expression -> . INT_VAL
    (79) expression -> . FLOAT_VAL
    (16) ptrs -> . MULTIPLY ptrs
    (17) ptrs -> . MULTIPLY
    (11) id_ptr_or_array -> . id
    (12) id_ptr_or_array -> . id array_decs
    (13) id_ptr_or_array -> . ptrs id
    (56) function_app -> . PRINTF LPAREN STRING print_formats RPAREN
    (57) function_app -> . ID LPAREN arguments RPAREN
    (48) var_assignment -> . id_ptr_or_array EQ expression
    (49) var_assignment -> . id_ptr_or_array EQ function_app
    (6) id -> . ID

    ID              reduce using rule 17 (ptrs -> MULTIPLY .)
    LPAREN          shift and go to state 31
    MINUS           shift and go to state 33
    DOUBLEPLUS      shift and go to state 35
    INT_VAL         shift and go to state 36
    FLOAT_VAL       shift and go to state 37
    MULTIPLY        shift and go to state 34
    PRINTF          shift and go to state 30

  ! ID              [ shift and go to state 32 ]

    expression                     shift and go to state 84
    ptrs                           shift and go to state 143
    id_ptr_or_array                shift and go to state 63
    function_app                   shift and go to state 64
    var_assignment                 shift and go to state 65
    id                             shift and go to state 42

state 140

    (34) elif_else -> ELSE IF LPAREN expression RPAREN . block elif_else
    (18) block -> . LBRACE statements RBRACE

    LBRACE          shift and go to state 12

    block                          shift and go to state 144

state 141

    (37) for -> FOR LPAREN loop_init_or_empty SEMI semi_statement_or_empty SEMI . semi_statement_or_empty RPAREN block
    (41) semi_statement_or_empty -> . semi_statement
    (42) semi_statement_or_empty -> . expression
    (43) semi_statement_or_empty -> . empty
    (24) semi_statement -> . var_declaration
    (25) semi_statement -> . var_assignment
    (26) semi_statement -> . function_app
    (27) semi_statement -> . expression
    (28) semi_statement -> . return_expr
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression MULTIPLY expression
    (68) expression -> . expression DIVIDE expression
    (69) expression -> . expression LESS expression
    (70) expression -> . expression GREATER expression
    (71) expression -> . LPAREN expression RPAREN
    (72) expression -> . MINUS expression
    (73) expression -> . id_ptr_or_array DOUBLEPLUS
    (74) expression -> . DOUBLEPLUS id_ptr_or_array
    (75) expression -> . id_ptr_or_array
    (76) expression -> . function_app
    (77) expression -> . var_assignment
    (78) expression -> . INT_VAL
    (79) expression -> . FLOAT_VAL
    (64) empty -> .
    (47) var_declaration -> . type var_and_assign
    (48) var_assignment -> . id_ptr_or_array EQ expression
    (49) var_assignment -> . id_ptr_or_array EQ function_app
    (56) function_app -> . PRINTF LPAREN STRING print_formats RPAREN
    (57) function_app -> . ID LPAREN arguments RPAREN
    (54) return_expr -> . RETURN expression
    (55) return_expr -> . RETURN
    (11) id_ptr_or_array -> . id
    (12) id_ptr_or_array -> . id array_decs
    (13) id_ptr_or_array -> . ptrs id
    (4) type -> . INT
    (5) type -> . FLOAT
    (6) id -> . ID
    (16) ptrs -> . MULTIPLY ptrs
    (17) ptrs -> . MULTIPLY

    LPAREN          shift and go to state 31
    MINUS           shift and go to state 33
    DOUBLEPLUS      shift and go to state 35
    INT_VAL         shift and go to state 36
    FLOAT_VAL       shift and go to state 37
    RPAREN          reduce using rule 64 (empty -> .)
    PRINTF          shift and go to state 30
    ID              shift and go to state 32
    RETURN          shift and go to state 38
    INT             shift and go to state 4
    FLOAT           shift and go to state 5
    MULTIPLY        shift and go to state 34

    semi_statement_or_empty        shift and go to state 145
    semi_statement                 shift and go to state 131
    expression                     shift and go to state 132
    empty                          shift and go to state 133
    var_declaration                shift and go to state 20
    var_assignment                 shift and go to state 21
    function_app                   shift and go to state 22
    return_expr                    shift and go to state 24
    id_ptr_or_array                shift and go to state 63
    type                           shift and go to state 28
    id                             shift and go to state 42
    ptrs                           shift and go to state 43

state 142

    (66) expression -> expression MINUS expression .
    (72) expression -> MINUS expression .
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . MULTIPLY expression
    (68) expression -> expression . DIVIDE expression
    (69) expression -> expression . LESS expression
    (70) expression -> expression . GREATER expression

  ! reduce/reduce conflict for PLUS resolved using rule 66 (expression -> expression MINUS expression .)
  ! reduce/reduce conflict for MINUS resolved using rule 66 (expression -> expression MINUS expression .)
  ! reduce/reduce conflict for MULTIPLY resolved using rule 66 (expression -> expression MINUS expression .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 66 (expression -> expression MINUS expression .)
  ! reduce/reduce conflict for LESS resolved using rule 66 (expression -> expression MINUS expression .)
  ! reduce/reduce conflict for GREATER resolved using rule 66 (expression -> expression MINUS expression .)
  ! reduce/reduce conflict for RPAREN resolved using rule 66 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 66 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 66 (expression -> expression MINUS expression .)
    LESS            reduce using rule 66 (expression -> expression MINUS expression .)
    GREATER         reduce using rule 66 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 66 (expression -> expression MINUS expression .)
    LPAREN          reduce using rule 66 (expression -> expression MINUS expression .)
    DOUBLEPLUS      reduce using rule 66 (expression -> expression MINUS expression .)
    INT_VAL         reduce using rule 66 (expression -> expression MINUS expression .)
    FLOAT_VAL       reduce using rule 66 (expression -> expression MINUS expression .)
    PRINTF          reduce using rule 66 (expression -> expression MINUS expression .)
    ID              reduce using rule 66 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 66 (expression -> expression MINUS expression .)
    MULTIPLY        shift and go to state 52
    DIVIDE          shift and go to state 53

  ! MULTIPLY        [ reduce using rule 66 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 66 (expression -> expression MINUS expression .) ]
  ! PLUS            [ reduce using rule 72 (expression -> MINUS expression .) ]
  ! MINUS           [ reduce using rule 72 (expression -> MINUS expression .) ]
  ! MULTIPLY        [ reduce using rule 72 (expression -> MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 72 (expression -> MINUS expression .) ]
  ! LESS            [ reduce using rule 72 (expression -> MINUS expression .) ]
  ! GREATER         [ reduce using rule 72 (expression -> MINUS expression .) ]
  ! RPAREN          [ reduce using rule 72 (expression -> MINUS expression .) ]
  ! PLUS            [ shift and go to state 50 ]
  ! MINUS           [ shift and go to state 51 ]
  ! LESS            [ shift and go to state 54 ]
  ! GREATER         [ shift and go to state 55 ]


state 143

    (16) ptrs -> MULTIPLY ptrs .
    (13) id_ptr_or_array -> ptrs . id
    (6) id -> . ID

    ID              reduce using rule 16 (ptrs -> MULTIPLY ptrs .)

  ! ID              [ shift and go to state 8 ]

    id                             shift and go to state 78

state 144

    (34) elif_else -> ELSE IF LPAREN expression RPAREN block . elif_else
    (34) elif_else -> . ELSE IF LPAREN expression RPAREN block elif_else
    (35) elif_else -> . ELSE block
    (36) elif_else -> . empty
    (64) empty -> .

    ELSE            shift and go to state 72
    PRINTF          reduce using rule 64 (empty -> .)
    ID              reduce using rule 64 (empty -> .)
    LPAREN          reduce using rule 64 (empty -> .)
    MINUS           reduce using rule 64 (empty -> .)
    DOUBLEPLUS      reduce using rule 64 (empty -> .)
    INT_VAL         reduce using rule 64 (empty -> .)
    FLOAT_VAL       reduce using rule 64 (empty -> .)
    RETURN          reduce using rule 64 (empty -> .)
    FOR             reduce using rule 64 (empty -> .)
    WHILE           reduce using rule 64 (empty -> .)
    INT             reduce using rule 64 (empty -> .)
    FLOAT           reduce using rule 64 (empty -> .)
    IF              reduce using rule 64 (empty -> .)
    MULTIPLY        reduce using rule 64 (empty -> .)
    RBRACE          reduce using rule 64 (empty -> .)

    elif_else                      shift and go to state 146
    empty                          shift and go to state 73

state 145

    (37) for -> FOR LPAREN loop_init_or_empty SEMI semi_statement_or_empty SEMI semi_statement_or_empty . RPAREN block

    RPAREN          shift and go to state 147


state 146

    (34) elif_else -> ELSE IF LPAREN expression RPAREN block elif_else .

    PRINTF          reduce using rule 34 (elif_else -> ELSE IF LPAREN expression RPAREN block elif_else .)
    ID              reduce using rule 34 (elif_else -> ELSE IF LPAREN expression RPAREN block elif_else .)
    LPAREN          reduce using rule 34 (elif_else -> ELSE IF LPAREN expression RPAREN block elif_else .)
    MINUS           reduce using rule 34 (elif_else -> ELSE IF LPAREN expression RPAREN block elif_else .)
    DOUBLEPLUS      reduce using rule 34 (elif_else -> ELSE IF LPAREN expression RPAREN block elif_else .)
    INT_VAL         reduce using rule 34 (elif_else -> ELSE IF LPAREN expression RPAREN block elif_else .)
    FLOAT_VAL       reduce using rule 34 (elif_else -> ELSE IF LPAREN expression RPAREN block elif_else .)
    RETURN          reduce using rule 34 (elif_else -> ELSE IF LPAREN expression RPAREN block elif_else .)
    FOR             reduce using rule 34 (elif_else -> ELSE IF LPAREN expression RPAREN block elif_else .)
    WHILE           reduce using rule 34 (elif_else -> ELSE IF LPAREN expression RPAREN block elif_else .)
    INT             reduce using rule 34 (elif_else -> ELSE IF LPAREN expression RPAREN block elif_else .)
    FLOAT           reduce using rule 34 (elif_else -> ELSE IF LPAREN expression RPAREN block elif_else .)
    IF              reduce using rule 34 (elif_else -> ELSE IF LPAREN expression RPAREN block elif_else .)
    MULTIPLY        reduce using rule 34 (elif_else -> ELSE IF LPAREN expression RPAREN block elif_else .)
    RBRACE          reduce using rule 34 (elif_else -> ELSE IF LPAREN expression RPAREN block elif_else .)


state 147

    (37) for -> FOR LPAREN loop_init_or_empty SEMI semi_statement_or_empty SEMI semi_statement_or_empty RPAREN . block
    (18) block -> . LBRACE statements RBRACE

    LBRACE          shift and go to state 12

    block                          shift and go to state 148

state 148

    (37) for -> FOR LPAREN loop_init_or_empty SEMI semi_statement_or_empty SEMI semi_statement_or_empty RPAREN block .

    PRINTF          reduce using rule 37 (for -> FOR LPAREN loop_init_or_empty SEMI semi_statement_or_empty SEMI semi_statement_or_empty RPAREN block .)
    ID              reduce using rule 37 (for -> FOR LPAREN loop_init_or_empty SEMI semi_statement_or_empty SEMI semi_statement_or_empty RPAREN block .)
    LPAREN          reduce using rule 37 (for -> FOR LPAREN loop_init_or_empty SEMI semi_statement_or_empty SEMI semi_statement_or_empty RPAREN block .)
    MINUS           reduce using rule 37 (for -> FOR LPAREN loop_init_or_empty SEMI semi_statement_or_empty SEMI semi_statement_or_empty RPAREN block .)
    DOUBLEPLUS      reduce using rule 37 (for -> FOR LPAREN loop_init_or_empty SEMI semi_statement_or_empty SEMI semi_statement_or_empty RPAREN block .)
    INT_VAL         reduce using rule 37 (for -> FOR LPAREN loop_init_or_empty SEMI semi_statement_or_empty SEMI semi_statement_or_empty RPAREN block .)
    FLOAT_VAL       reduce using rule 37 (for -> FOR LPAREN loop_init_or_empty SEMI semi_statement_or_empty SEMI semi_statement_or_empty RPAREN block .)
    RETURN          reduce using rule 37 (for -> FOR LPAREN loop_init_or_empty SEMI semi_statement_or_empty SEMI semi_statement_or_empty RPAREN block .)
    FOR             reduce using rule 37 (for -> FOR LPAREN loop_init_or_empty SEMI semi_statement_or_empty SEMI semi_statement_or_empty RPAREN block .)
    WHILE           reduce using rule 37 (for -> FOR LPAREN loop_init_or_empty SEMI semi_statement_or_empty SEMI semi_statement_or_empty RPAREN block .)
    INT             reduce using rule 37 (for -> FOR LPAREN loop_init_or_empty SEMI semi_statement_or_empty SEMI semi_statement_or_empty RPAREN block .)
    FLOAT           reduce using rule 37 (for -> FOR LPAREN loop_init_or_empty SEMI semi_statement_or_empty SEMI semi_statement_or_empty RPAREN block .)
    IF              reduce using rule 37 (for -> FOR LPAREN loop_init_or_empty SEMI semi_statement_or_empty SEMI semi_statement_or_empty RPAREN block .)
    MULTIPLY        reduce using rule 37 (for -> FOR LPAREN loop_init_or_empty SEMI semi_statement_or_empty SEMI semi_statement_or_empty RPAREN block .)
    RBRACE          reduce using rule 37 (for -> FOR LPAREN loop_init_or_empty SEMI semi_statement_or_empty SEMI semi_statement_or_empty RPAREN block .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LPAREN in state 32 resolved as shift
WARNING: shift/reduce conflict for DOUBLEPLUS in state 63 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 90 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 90 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 90 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 90 resolved as shift
WARNING: shift/reduce conflict for LESS in state 90 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 90 resolved as shift
WARNING: reduce/reduce conflict in state 18 resolved using rule (statements -> non_semi_statement)
WARNING: rejected rule (empty -> <empty>) in state 18
WARNING: reduce/reduce conflict in state 21 resolved using rule (semi_statement -> var_assignment)
WARNING: rejected rule (expression -> var_assignment) in state 21
WARNING: reduce/reduce conflict in state 22 resolved using rule (semi_statement -> function_app)
WARNING: rejected rule (expression -> function_app) in state 22
WARNING: reduce/reduce conflict in state 91 resolved using rule (var_assignment -> id_ptr_or_array EQ function_app)
WARNING: rejected rule (expression -> function_app) in state 91
WARNING: reduce/reduce conflict in state 101 resolved using rule (semi_statement -> expression)
WARNING: rejected rule (loop_init_or_empty -> expression) in state 101
WARNING: reduce/reduce conflict in state 104 resolved using rule (semi_statement -> var_assignment)
WARNING: rejected rule (expression -> var_assignment) in state 104
WARNING: reduce/reduce conflict in state 106 resolved using rule (semi_statement -> function_app)
WARNING: rejected rule (expression -> function_app) in state 106
WARNING: reduce/reduce conflict in state 121 resolved using rule (loop_init -> type var_assignment)
WARNING: rejected rule (var_and_assign -> var_assignment) in state 121
WARNING: reduce/reduce conflict in state 132 resolved using rule (semi_statement -> expression)
WARNING: rejected rule (semi_statement_or_empty -> expression) in state 132
WARNING: reduce/reduce conflict in state 142 resolved using rule (expression -> expression MINUS expression)
WARNING: rejected rule (expression -> MINUS expression) in state 142
WARNING: Rule (loop_init_or_empty -> expression) is never reduced
WARNING: Rule (semi_statement_or_empty -> expression) is never reduced
