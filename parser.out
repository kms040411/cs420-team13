Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    PTR_AMP

Grammar

Rule 0     S' -> program
Rule 1     program -> function program
Rule 2     program -> function
Rule 3     function -> type id variable_declaration block
Rule 4     type -> INT
Rule 5     type -> FLOAT
Rule 6     id -> ID
Rule 7     variable_declaration -> LPAREN declarations RPAREN
Rule 8     declarations -> type id_ptr_or_array COMMA declarations
Rule 9     declarations -> type id_ptr_or_array
Rule 10    declarations -> VOID
Rule 11    id_ptr_or_array -> id
Rule 12    id_ptr_or_array -> id array_decs
Rule 13    id_ptr_or_array -> ptrs id
Rule 14    array_decs -> SQ_LBRACKET expression SQ_RBRACKET array_decs
Rule 15    array_decs -> SQ_LBRACKET expression SQ_RBRACKET
Rule 16    ptrs -> MULTIPLY ptrs
Rule 17    ptrs -> MULTIPLY
Rule 18    block -> LBRACE statements RBRACE
Rule 19    statements -> semi_statement
Rule 20    statements -> non_semi_statement
Rule 21    statements -> semi_statement SEMI statements
Rule 22    statements -> non_semi_statement statements
Rule 23    statements -> empty
Rule 24    semi_statement -> var_declaration
Rule 25    semi_statement -> var_assignment
Rule 26    semi_statement -> function_app
Rule 27    semi_statement -> return_expr
Rule 28    non_semi_statement -> conditional
Rule 29    non_semi_statement -> for
Rule 30    non_semi_statement -> while
Rule 31    conditional -> if elif_else
Rule 32    if -> IF LPAREN expression RPAREN block
Rule 33    elif_else -> elif else
Rule 34    elif -> ELSE IF LPAREN expression RPAREN block elif
Rule 35    elif -> empty
Rule 36    else -> ELSE block
Rule 37    else -> empty
Rule 38    for -> FOR LPAREN loop_init_or_empty SEMI semi_statement_or_empty SEMI semi_statement_or_empty RPAREN block
Rule 39    loop_init_or_empty -> loop_init
Rule 40    loop_init_or_empty -> expression
Rule 41    loop_init_or_empty -> empty
Rule 42    semi_statement_or_empty -> semi_statement
Rule 43    semi_statement_or_empty -> expression
Rule 44    semi_statement_or_empty -> empty
Rule 45    loop_init -> type var_assignment
Rule 46    loop_init -> semi_statement
Rule 47    while -> WHILE LPAREN expression RPAREN block
Rule 48    var_declaration -> type var_and_assign
Rule 49    var_assignment -> id_ptr_or_array EQ expression
Rule 50    var_assignment -> id_ptr_or_array EQ function_app
Rule 51    var_and_assign -> var_assignment COMMA var_and_assign
Rule 52    var_and_assign -> var_assignment
Rule 53    var_and_assign -> id_ptr_or_array COMMA var_and_assign
Rule 54    var_and_assign -> id_ptr_or_array
Rule 55    return_expr -> RETURN expression
Rule 56    function_app -> PRINTF LPAREN STRING print_formats RPAREN
Rule 57    function_app -> ID LPAREN arguments RPAREN
Rule 58    print_formats -> COMMA expression print_formats
Rule 59    print_formats -> expression
Rule 60    print_formats -> empty
Rule 61    arguments -> expression COMMA arguments
Rule 62    arguments -> expression
Rule 63    arguments -> empty
Rule 64    empty -> <empty>
Rule 65    expression -> expression PLUS expression
Rule 66    expression -> expression MINUS expression
Rule 67    expression -> expression MULTIPLY expression
Rule 68    expression -> expression DIVIDE expression
Rule 69    expression -> expression LESS expression
Rule 70    expression -> expression GREATER expression
Rule 71    expression -> LPAREN expression RPAREN
Rule 72    expression -> MINUS expression
Rule 73    expression -> expression DOUBLEPLUS
Rule 74    expression -> id_ptr_or_array
Rule 75    expression -> INT_VAL
Rule 76    expression -> FLOAT_VAL

Terminals, with rules where they appear

COMMA                : 8 51 53 58 61
DIVIDE               : 68
DOUBLEPLUS           : 73
ELSE                 : 34 36
EQ                   : 49 50
FLOAT                : 5
FLOAT_VAL            : 76
FOR                  : 38
GREATER              : 70
ID                   : 6 57
IF                   : 32 34
INT                  : 4
INT_VAL              : 75
LBRACE               : 18
LESS                 : 69
LPAREN               : 7 32 34 38 47 56 57 71
MINUS                : 66 72
MULTIPLY             : 16 17 67
PLUS                 : 65
PRINTF               : 56
PTR_AMP              : 
RBRACE               : 18
RETURN               : 55
RPAREN               : 7 32 34 38 47 56 57 71
SEMI                 : 21 38 38
SQ_LBRACKET          : 14 15
SQ_RBRACKET          : 14 15
STRING               : 56
VOID                 : 10
WHILE                : 47
error                : 

Nonterminals, with rules where they appear

arguments            : 57 61
array_decs           : 12 14
block                : 3 32 34 36 38 47
conditional          : 28
declarations         : 7 8
elif                 : 33 34
elif_else            : 31
else                 : 33
empty                : 23 35 37 41 44 60 63
expression           : 14 15 32 34 40 43 47 49 55 58 59 61 62 65 65 66 66 67 67 68 68 69 69 70 70 71 72 73
for                  : 29
function             : 1 2
function_app         : 26 50
id                   : 3 11 12 13
id_ptr_or_array      : 8 9 49 50 53 54 74
if                   : 31
loop_init            : 39
loop_init_or_empty   : 38
non_semi_statement   : 20 22
print_formats        : 56 58
program              : 1 0
ptrs                 : 13 16
return_expr          : 27
semi_statement       : 19 21 42 46
semi_statement_or_empty : 38 38
statements           : 18 21 22
type                 : 3 8 9 45 48
var_and_assign       : 48 51 53
var_assignment       : 25 45 51 52
var_declaration      : 24
variable_declaration : 3
while                : 30

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . function program
    (2) program -> . function
    (3) function -> . type id variable_declaration block
    (4) type -> . INT
    (5) type -> . FLOAT

    INT             shift and go to state 4
    FLOAT           shift and go to state 5

    program                        shift and go to state 1
    function                       shift and go to state 2
    type                           shift and go to state 3

state 1

    (0) S' -> program .



state 2

    (1) program -> function . program
    (2) program -> function .
    (1) program -> . function program
    (2) program -> . function
    (3) function -> . type id variable_declaration block
    (4) type -> . INT
    (5) type -> . FLOAT

    $end            reduce using rule 2 (program -> function .)
    INT             shift and go to state 4
    FLOAT           shift and go to state 5

    function                       shift and go to state 2
    program                        shift and go to state 6
    type                           shift and go to state 3

state 3

    (3) function -> type . id variable_declaration block
    (6) id -> . ID

    ID              shift and go to state 8

    id                             shift and go to state 7

state 4

    (4) type -> INT .

    ID              reduce using rule 4 (type -> INT .)
    MULTIPLY        reduce using rule 4 (type -> INT .)


state 5

    (5) type -> FLOAT .

    ID              reduce using rule 5 (type -> FLOAT .)
    MULTIPLY        reduce using rule 5 (type -> FLOAT .)


state 6

    (1) program -> function program .

    $end            reduce using rule 1 (program -> function program .)


state 7

    (3) function -> type id . variable_declaration block
    (7) variable_declaration -> . LPAREN declarations RPAREN

    LPAREN          shift and go to state 10

    variable_declaration           shift and go to state 9

state 8

    (6) id -> ID .

    LPAREN          reduce using rule 6 (id -> ID .)
    SQ_LBRACKET     reduce using rule 6 (id -> ID .)
    COMMA           reduce using rule 6 (id -> ID .)
    RPAREN          reduce using rule 6 (id -> ID .)
    EQ              reduce using rule 6 (id -> ID .)
    SEMI            reduce using rule 6 (id -> ID .)
    RBRACE          reduce using rule 6 (id -> ID .)
    PLUS            reduce using rule 6 (id -> ID .)
    MINUS           reduce using rule 6 (id -> ID .)
    MULTIPLY        reduce using rule 6 (id -> ID .)
    DIVIDE          reduce using rule 6 (id -> ID .)
    LESS            reduce using rule 6 (id -> ID .)
    GREATER         reduce using rule 6 (id -> ID .)
    DOUBLEPLUS      reduce using rule 6 (id -> ID .)
    SQ_RBRACKET     reduce using rule 6 (id -> ID .)
    INT_VAL         reduce using rule 6 (id -> ID .)
    FLOAT_VAL       reduce using rule 6 (id -> ID .)
    ID              reduce using rule 6 (id -> ID .)


state 9

    (3) function -> type id variable_declaration . block
    (18) block -> . LBRACE statements RBRACE

    LBRACE          shift and go to state 12

    block                          shift and go to state 11

state 10

    (7) variable_declaration -> LPAREN . declarations RPAREN
    (8) declarations -> . type id_ptr_or_array COMMA declarations
    (9) declarations -> . type id_ptr_or_array
    (10) declarations -> . VOID
    (4) type -> . INT
    (5) type -> . FLOAT

    VOID            shift and go to state 15
    INT             shift and go to state 4
    FLOAT           shift and go to state 5

    declarations                   shift and go to state 13
    type                           shift and go to state 14

state 11

    (3) function -> type id variable_declaration block .

    INT             reduce using rule 3 (function -> type id variable_declaration block .)
    FLOAT           reduce using rule 3 (function -> type id variable_declaration block .)
    $end            reduce using rule 3 (function -> type id variable_declaration block .)


state 12

    (18) block -> LBRACE . statements RBRACE
    (19) statements -> . semi_statement
    (20) statements -> . non_semi_statement
    (21) statements -> . semi_statement SEMI statements
    (22) statements -> . non_semi_statement statements
    (23) statements -> . empty
    (24) semi_statement -> . var_declaration
    (25) semi_statement -> . var_assignment
    (26) semi_statement -> . function_app
    (27) semi_statement -> . return_expr
    (28) non_semi_statement -> . conditional
    (29) non_semi_statement -> . for
    (30) non_semi_statement -> . while
    (64) empty -> .
    (48) var_declaration -> . type var_and_assign
    (49) var_assignment -> . id_ptr_or_array EQ expression
    (50) var_assignment -> . id_ptr_or_array EQ function_app
    (56) function_app -> . PRINTF LPAREN STRING print_formats RPAREN
    (57) function_app -> . ID LPAREN arguments RPAREN
    (55) return_expr -> . RETURN expression
    (31) conditional -> . if elif_else
    (38) for -> . FOR LPAREN loop_init_or_empty SEMI semi_statement_or_empty SEMI semi_statement_or_empty RPAREN block
    (47) while -> . WHILE LPAREN expression RPAREN block
    (4) type -> . INT
    (5) type -> . FLOAT
    (11) id_ptr_or_array -> . id
    (12) id_ptr_or_array -> . id array_decs
    (13) id_ptr_or_array -> . ptrs id
    (32) if -> . IF LPAREN expression RPAREN block
    (6) id -> . ID
    (16) ptrs -> . MULTIPLY ptrs
    (17) ptrs -> . MULTIPLY

    RBRACE          reduce using rule 64 (empty -> .)
    PRINTF          shift and go to state 29
    ID              shift and go to state 30
    RETURN          shift and go to state 31
    FOR             shift and go to state 33
    WHILE           shift and go to state 34
    INT             shift and go to state 4
    FLOAT           shift and go to state 5
    IF              shift and go to state 37
    MULTIPLY        shift and go to state 38

    statements                     shift and go to state 16
    semi_statement                 shift and go to state 17
    non_semi_statement             shift and go to state 18
    empty                          shift and go to state 19
    var_declaration                shift and go to state 20
    var_assignment                 shift and go to state 21
    function_app                   shift and go to state 22
    return_expr                    shift and go to state 23
    conditional                    shift and go to state 24
    for                            shift and go to state 25
    while                          shift and go to state 26
    type                           shift and go to state 27
    id_ptr_or_array                shift and go to state 28
    if                             shift and go to state 32
    id                             shift and go to state 35
    ptrs                           shift and go to state 36

state 13

    (7) variable_declaration -> LPAREN declarations . RPAREN

    RPAREN          shift and go to state 39


state 14

    (8) declarations -> type . id_ptr_or_array COMMA declarations
    (9) declarations -> type . id_ptr_or_array
    (11) id_ptr_or_array -> . id
    (12) id_ptr_or_array -> . id array_decs
    (13) id_ptr_or_array -> . ptrs id
    (6) id -> . ID
    (16) ptrs -> . MULTIPLY ptrs
    (17) ptrs -> . MULTIPLY

    ID              shift and go to state 8
    MULTIPLY        shift and go to state 38

    id_ptr_or_array                shift and go to state 40
    id                             shift and go to state 35
    ptrs                           shift and go to state 36

state 15

    (10) declarations -> VOID .

    RPAREN          reduce using rule 10 (declarations -> VOID .)


state 16

    (18) block -> LBRACE statements . RBRACE

    RBRACE          shift and go to state 41


state 17

    (19) statements -> semi_statement .
    (21) statements -> semi_statement . SEMI statements

    RBRACE          reduce using rule 19 (statements -> semi_statement .)
    SEMI            shift and go to state 42


state 18

    (20) statements -> non_semi_statement .
    (22) statements -> non_semi_statement . statements
    (19) statements -> . semi_statement
    (20) statements -> . non_semi_statement
    (21) statements -> . semi_statement SEMI statements
    (22) statements -> . non_semi_statement statements
    (23) statements -> . empty
    (24) semi_statement -> . var_declaration
    (25) semi_statement -> . var_assignment
    (26) semi_statement -> . function_app
    (27) semi_statement -> . return_expr
    (28) non_semi_statement -> . conditional
    (29) non_semi_statement -> . for
    (30) non_semi_statement -> . while
    (64) empty -> .
    (48) var_declaration -> . type var_and_assign
    (49) var_assignment -> . id_ptr_or_array EQ expression
    (50) var_assignment -> . id_ptr_or_array EQ function_app
    (56) function_app -> . PRINTF LPAREN STRING print_formats RPAREN
    (57) function_app -> . ID LPAREN arguments RPAREN
    (55) return_expr -> . RETURN expression
    (31) conditional -> . if elif_else
    (38) for -> . FOR LPAREN loop_init_or_empty SEMI semi_statement_or_empty SEMI semi_statement_or_empty RPAREN block
    (47) while -> . WHILE LPAREN expression RPAREN block
    (4) type -> . INT
    (5) type -> . FLOAT
    (11) id_ptr_or_array -> . id
    (12) id_ptr_or_array -> . id array_decs
    (13) id_ptr_or_array -> . ptrs id
    (32) if -> . IF LPAREN expression RPAREN block
    (6) id -> . ID
    (16) ptrs -> . MULTIPLY ptrs
    (17) ptrs -> . MULTIPLY

  ! reduce/reduce conflict for RBRACE resolved using rule 20 (statements -> non_semi_statement .)
    RBRACE          reduce using rule 20 (statements -> non_semi_statement .)
    PRINTF          shift and go to state 29
    ID              shift and go to state 30
    RETURN          shift and go to state 31
    FOR             shift and go to state 33
    WHILE           shift and go to state 34
    INT             shift and go to state 4
    FLOAT           shift and go to state 5
    IF              shift and go to state 37
    MULTIPLY        shift and go to state 38

  ! RBRACE          [ reduce using rule 64 (empty -> .) ]

    non_semi_statement             shift and go to state 18
    statements                     shift and go to state 43
    semi_statement                 shift and go to state 17
    empty                          shift and go to state 19
    var_declaration                shift and go to state 20
    var_assignment                 shift and go to state 21
    function_app                   shift and go to state 22
    return_expr                    shift and go to state 23
    conditional                    shift and go to state 24
    for                            shift and go to state 25
    while                          shift and go to state 26
    type                           shift and go to state 27
    id_ptr_or_array                shift and go to state 28
    if                             shift and go to state 32
    id                             shift and go to state 35
    ptrs                           shift and go to state 36

state 19

    (23) statements -> empty .

    RBRACE          reduce using rule 23 (statements -> empty .)


state 20

    (24) semi_statement -> var_declaration .

    SEMI            reduce using rule 24 (semi_statement -> var_declaration .)
    RBRACE          reduce using rule 24 (semi_statement -> var_declaration .)
    RPAREN          reduce using rule 24 (semi_statement -> var_declaration .)


state 21

    (25) semi_statement -> var_assignment .

    SEMI            reduce using rule 25 (semi_statement -> var_assignment .)
    RBRACE          reduce using rule 25 (semi_statement -> var_assignment .)
    RPAREN          reduce using rule 25 (semi_statement -> var_assignment .)


state 22

    (26) semi_statement -> function_app .

    SEMI            reduce using rule 26 (semi_statement -> function_app .)
    RBRACE          reduce using rule 26 (semi_statement -> function_app .)
    RPAREN          reduce using rule 26 (semi_statement -> function_app .)


state 23

    (27) semi_statement -> return_expr .

    SEMI            reduce using rule 27 (semi_statement -> return_expr .)
    RBRACE          reduce using rule 27 (semi_statement -> return_expr .)
    RPAREN          reduce using rule 27 (semi_statement -> return_expr .)


state 24

    (28) non_semi_statement -> conditional .

    PRINTF          reduce using rule 28 (non_semi_statement -> conditional .)
    ID              reduce using rule 28 (non_semi_statement -> conditional .)
    RETURN          reduce using rule 28 (non_semi_statement -> conditional .)
    FOR             reduce using rule 28 (non_semi_statement -> conditional .)
    WHILE           reduce using rule 28 (non_semi_statement -> conditional .)
    INT             reduce using rule 28 (non_semi_statement -> conditional .)
    FLOAT           reduce using rule 28 (non_semi_statement -> conditional .)
    IF              reduce using rule 28 (non_semi_statement -> conditional .)
    MULTIPLY        reduce using rule 28 (non_semi_statement -> conditional .)
    RBRACE          reduce using rule 28 (non_semi_statement -> conditional .)


state 25

    (29) non_semi_statement -> for .

    PRINTF          reduce using rule 29 (non_semi_statement -> for .)
    ID              reduce using rule 29 (non_semi_statement -> for .)
    RETURN          reduce using rule 29 (non_semi_statement -> for .)
    FOR             reduce using rule 29 (non_semi_statement -> for .)
    WHILE           reduce using rule 29 (non_semi_statement -> for .)
    INT             reduce using rule 29 (non_semi_statement -> for .)
    FLOAT           reduce using rule 29 (non_semi_statement -> for .)
    IF              reduce using rule 29 (non_semi_statement -> for .)
    MULTIPLY        reduce using rule 29 (non_semi_statement -> for .)
    RBRACE          reduce using rule 29 (non_semi_statement -> for .)


state 26

    (30) non_semi_statement -> while .

    PRINTF          reduce using rule 30 (non_semi_statement -> while .)
    ID              reduce using rule 30 (non_semi_statement -> while .)
    RETURN          reduce using rule 30 (non_semi_statement -> while .)
    FOR             reduce using rule 30 (non_semi_statement -> while .)
    WHILE           reduce using rule 30 (non_semi_statement -> while .)
    INT             reduce using rule 30 (non_semi_statement -> while .)
    FLOAT           reduce using rule 30 (non_semi_statement -> while .)
    IF              reduce using rule 30 (non_semi_statement -> while .)
    MULTIPLY        reduce using rule 30 (non_semi_statement -> while .)
    RBRACE          reduce using rule 30 (non_semi_statement -> while .)


state 27

    (48) var_declaration -> type . var_and_assign
    (51) var_and_assign -> . var_assignment COMMA var_and_assign
    (52) var_and_assign -> . var_assignment
    (53) var_and_assign -> . id_ptr_or_array COMMA var_and_assign
    (54) var_and_assign -> . id_ptr_or_array
    (49) var_assignment -> . id_ptr_or_array EQ expression
    (50) var_assignment -> . id_ptr_or_array EQ function_app
    (11) id_ptr_or_array -> . id
    (12) id_ptr_or_array -> . id array_decs
    (13) id_ptr_or_array -> . ptrs id
    (6) id -> . ID
    (16) ptrs -> . MULTIPLY ptrs
    (17) ptrs -> . MULTIPLY

    ID              shift and go to state 8
    MULTIPLY        shift and go to state 38

    var_and_assign                 shift and go to state 44
    var_assignment                 shift and go to state 45
    id_ptr_or_array                shift and go to state 46
    id                             shift and go to state 35
    ptrs                           shift and go to state 36

state 28

    (49) var_assignment -> id_ptr_or_array . EQ expression
    (50) var_assignment -> id_ptr_or_array . EQ function_app

    EQ              shift and go to state 47


state 29

    (56) function_app -> PRINTF . LPAREN STRING print_formats RPAREN

    LPAREN          shift and go to state 48


state 30

    (57) function_app -> ID . LPAREN arguments RPAREN
    (6) id -> ID .

    LPAREN          shift and go to state 49
    SQ_LBRACKET     reduce using rule 6 (id -> ID .)
    EQ              reduce using rule 6 (id -> ID .)
    PLUS            reduce using rule 6 (id -> ID .)
    MINUS           reduce using rule 6 (id -> ID .)
    MULTIPLY        reduce using rule 6 (id -> ID .)
    DIVIDE          reduce using rule 6 (id -> ID .)
    LESS            reduce using rule 6 (id -> ID .)
    GREATER         reduce using rule 6 (id -> ID .)
    DOUBLEPLUS      reduce using rule 6 (id -> ID .)
    SEMI            reduce using rule 6 (id -> ID .)
    RBRACE          reduce using rule 6 (id -> ID .)
    COMMA           reduce using rule 6 (id -> ID .)
    RPAREN          reduce using rule 6 (id -> ID .)


state 31

    (55) return_expr -> RETURN . expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression MULTIPLY expression
    (68) expression -> . expression DIVIDE expression
    (69) expression -> . expression LESS expression
    (70) expression -> . expression GREATER expression
    (71) expression -> . LPAREN expression RPAREN
    (72) expression -> . MINUS expression
    (73) expression -> . expression DOUBLEPLUS
    (74) expression -> . id_ptr_or_array
    (75) expression -> . INT_VAL
    (76) expression -> . FLOAT_VAL
    (11) id_ptr_or_array -> . id
    (12) id_ptr_or_array -> . id array_decs
    (13) id_ptr_or_array -> . ptrs id
    (6) id -> . ID
    (16) ptrs -> . MULTIPLY ptrs
    (17) ptrs -> . MULTIPLY

    LPAREN          shift and go to state 52
    MINUS           shift and go to state 51
    INT_VAL         shift and go to state 54
    FLOAT_VAL       shift and go to state 55
    ID              shift and go to state 8
    MULTIPLY        shift and go to state 38

    expression                     shift and go to state 50
    id_ptr_or_array                shift and go to state 53
    id                             shift and go to state 35
    ptrs                           shift and go to state 36

state 32

    (31) conditional -> if . elif_else
    (33) elif_else -> . elif else
    (34) elif -> . ELSE IF LPAREN expression RPAREN block elif
    (35) elif -> . empty
    (64) empty -> .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 58
    PRINTF          reduce using rule 64 (empty -> .)
    ID              reduce using rule 64 (empty -> .)
    RETURN          reduce using rule 64 (empty -> .)
    FOR             reduce using rule 64 (empty -> .)
    WHILE           reduce using rule 64 (empty -> .)
    INT             reduce using rule 64 (empty -> .)
    FLOAT           reduce using rule 64 (empty -> .)
    IF              reduce using rule 64 (empty -> .)
    MULTIPLY        reduce using rule 64 (empty -> .)
    RBRACE          reduce using rule 64 (empty -> .)

  ! ELSE            [ reduce using rule 64 (empty -> .) ]

    elif_else                      shift and go to state 56
    elif                           shift and go to state 57
    empty                          shift and go to state 59

state 33

    (38) for -> FOR . LPAREN loop_init_or_empty SEMI semi_statement_or_empty SEMI semi_statement_or_empty RPAREN block

    LPAREN          shift and go to state 60


state 34

    (47) while -> WHILE . LPAREN expression RPAREN block

    LPAREN          shift and go to state 61


state 35

    (11) id_ptr_or_array -> id .
    (12) id_ptr_or_array -> id . array_decs
    (14) array_decs -> . SQ_LBRACKET expression SQ_RBRACKET array_decs
    (15) array_decs -> . SQ_LBRACKET expression SQ_RBRACKET

    EQ              reduce using rule 11 (id_ptr_or_array -> id .)
    COMMA           reduce using rule 11 (id_ptr_or_array -> id .)
    RPAREN          reduce using rule 11 (id_ptr_or_array -> id .)
    SEMI            reduce using rule 11 (id_ptr_or_array -> id .)
    RBRACE          reduce using rule 11 (id_ptr_or_array -> id .)
    PLUS            reduce using rule 11 (id_ptr_or_array -> id .)
    MINUS           reduce using rule 11 (id_ptr_or_array -> id .)
    MULTIPLY        reduce using rule 11 (id_ptr_or_array -> id .)
    DIVIDE          reduce using rule 11 (id_ptr_or_array -> id .)
    LESS            reduce using rule 11 (id_ptr_or_array -> id .)
    GREATER         reduce using rule 11 (id_ptr_or_array -> id .)
    DOUBLEPLUS      reduce using rule 11 (id_ptr_or_array -> id .)
    SQ_RBRACKET     reduce using rule 11 (id_ptr_or_array -> id .)
    LPAREN          reduce using rule 11 (id_ptr_or_array -> id .)
    INT_VAL         reduce using rule 11 (id_ptr_or_array -> id .)
    FLOAT_VAL       reduce using rule 11 (id_ptr_or_array -> id .)
    ID              reduce using rule 11 (id_ptr_or_array -> id .)
    SQ_LBRACKET     shift and go to state 63

    array_decs                     shift and go to state 62

state 36

    (13) id_ptr_or_array -> ptrs . id
    (6) id -> . ID

    ID              shift and go to state 8

    id                             shift and go to state 64

state 37

    (32) if -> IF . LPAREN expression RPAREN block

    LPAREN          shift and go to state 65


state 38

    (16) ptrs -> MULTIPLY . ptrs
    (17) ptrs -> MULTIPLY .
    (16) ptrs -> . MULTIPLY ptrs
    (17) ptrs -> . MULTIPLY

    ID              reduce using rule 17 (ptrs -> MULTIPLY .)
    MULTIPLY        shift and go to state 38

    ptrs                           shift and go to state 66

state 39

    (7) variable_declaration -> LPAREN declarations RPAREN .

    LBRACE          reduce using rule 7 (variable_declaration -> LPAREN declarations RPAREN .)


state 40

    (8) declarations -> type id_ptr_or_array . COMMA declarations
    (9) declarations -> type id_ptr_or_array .

    COMMA           shift and go to state 67
    RPAREN          reduce using rule 9 (declarations -> type id_ptr_or_array .)


state 41

    (18) block -> LBRACE statements RBRACE .

    INT             reduce using rule 18 (block -> LBRACE statements RBRACE .)
    FLOAT           reduce using rule 18 (block -> LBRACE statements RBRACE .)
    $end            reduce using rule 18 (block -> LBRACE statements RBRACE .)
    PRINTF          reduce using rule 18 (block -> LBRACE statements RBRACE .)
    ID              reduce using rule 18 (block -> LBRACE statements RBRACE .)
    RETURN          reduce using rule 18 (block -> LBRACE statements RBRACE .)
    FOR             reduce using rule 18 (block -> LBRACE statements RBRACE .)
    WHILE           reduce using rule 18 (block -> LBRACE statements RBRACE .)
    IF              reduce using rule 18 (block -> LBRACE statements RBRACE .)
    MULTIPLY        reduce using rule 18 (block -> LBRACE statements RBRACE .)
    RBRACE          reduce using rule 18 (block -> LBRACE statements RBRACE .)
    ELSE            reduce using rule 18 (block -> LBRACE statements RBRACE .)


state 42

    (21) statements -> semi_statement SEMI . statements
    (19) statements -> . semi_statement
    (20) statements -> . non_semi_statement
    (21) statements -> . semi_statement SEMI statements
    (22) statements -> . non_semi_statement statements
    (23) statements -> . empty
    (24) semi_statement -> . var_declaration
    (25) semi_statement -> . var_assignment
    (26) semi_statement -> . function_app
    (27) semi_statement -> . return_expr
    (28) non_semi_statement -> . conditional
    (29) non_semi_statement -> . for
    (30) non_semi_statement -> . while
    (64) empty -> .
    (48) var_declaration -> . type var_and_assign
    (49) var_assignment -> . id_ptr_or_array EQ expression
    (50) var_assignment -> . id_ptr_or_array EQ function_app
    (56) function_app -> . PRINTF LPAREN STRING print_formats RPAREN
    (57) function_app -> . ID LPAREN arguments RPAREN
    (55) return_expr -> . RETURN expression
    (31) conditional -> . if elif_else
    (38) for -> . FOR LPAREN loop_init_or_empty SEMI semi_statement_or_empty SEMI semi_statement_or_empty RPAREN block
    (47) while -> . WHILE LPAREN expression RPAREN block
    (4) type -> . INT
    (5) type -> . FLOAT
    (11) id_ptr_or_array -> . id
    (12) id_ptr_or_array -> . id array_decs
    (13) id_ptr_or_array -> . ptrs id
    (32) if -> . IF LPAREN expression RPAREN block
    (6) id -> . ID
    (16) ptrs -> . MULTIPLY ptrs
    (17) ptrs -> . MULTIPLY

    RBRACE          reduce using rule 64 (empty -> .)
    PRINTF          shift and go to state 29
    ID              shift and go to state 30
    RETURN          shift and go to state 31
    FOR             shift and go to state 33
    WHILE           shift and go to state 34
    INT             shift and go to state 4
    FLOAT           shift and go to state 5
    IF              shift and go to state 37
    MULTIPLY        shift and go to state 38

    semi_statement                 shift and go to state 17
    statements                     shift and go to state 68
    non_semi_statement             shift and go to state 18
    empty                          shift and go to state 19
    var_declaration                shift and go to state 20
    var_assignment                 shift and go to state 21
    function_app                   shift and go to state 22
    return_expr                    shift and go to state 23
    conditional                    shift and go to state 24
    for                            shift and go to state 25
    while                          shift and go to state 26
    type                           shift and go to state 27
    id_ptr_or_array                shift and go to state 28
    if                             shift and go to state 32
    id                             shift and go to state 35
    ptrs                           shift and go to state 36

state 43

    (22) statements -> non_semi_statement statements .

    RBRACE          reduce using rule 22 (statements -> non_semi_statement statements .)


state 44

    (48) var_declaration -> type var_and_assign .

    SEMI            reduce using rule 48 (var_declaration -> type var_and_assign .)
    RBRACE          reduce using rule 48 (var_declaration -> type var_and_assign .)
    RPAREN          reduce using rule 48 (var_declaration -> type var_and_assign .)


state 45

    (51) var_and_assign -> var_assignment . COMMA var_and_assign
    (52) var_and_assign -> var_assignment .

    COMMA           shift and go to state 69
    SEMI            reduce using rule 52 (var_and_assign -> var_assignment .)
    RBRACE          reduce using rule 52 (var_and_assign -> var_assignment .)
    RPAREN          reduce using rule 52 (var_and_assign -> var_assignment .)


state 46

    (53) var_and_assign -> id_ptr_or_array . COMMA var_and_assign
    (54) var_and_assign -> id_ptr_or_array .
    (49) var_assignment -> id_ptr_or_array . EQ expression
    (50) var_assignment -> id_ptr_or_array . EQ function_app

    COMMA           shift and go to state 70
    SEMI            reduce using rule 54 (var_and_assign -> id_ptr_or_array .)
    RBRACE          reduce using rule 54 (var_and_assign -> id_ptr_or_array .)
    RPAREN          reduce using rule 54 (var_and_assign -> id_ptr_or_array .)
    EQ              shift and go to state 47


state 47

    (49) var_assignment -> id_ptr_or_array EQ . expression
    (50) var_assignment -> id_ptr_or_array EQ . function_app
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression MULTIPLY expression
    (68) expression -> . expression DIVIDE expression
    (69) expression -> . expression LESS expression
    (70) expression -> . expression GREATER expression
    (71) expression -> . LPAREN expression RPAREN
    (72) expression -> . MINUS expression
    (73) expression -> . expression DOUBLEPLUS
    (74) expression -> . id_ptr_or_array
    (75) expression -> . INT_VAL
    (76) expression -> . FLOAT_VAL
    (56) function_app -> . PRINTF LPAREN STRING print_formats RPAREN
    (57) function_app -> . ID LPAREN arguments RPAREN
    (11) id_ptr_or_array -> . id
    (12) id_ptr_or_array -> . id array_decs
    (13) id_ptr_or_array -> . ptrs id
    (6) id -> . ID
    (16) ptrs -> . MULTIPLY ptrs
    (17) ptrs -> . MULTIPLY

    LPAREN          shift and go to state 52
    MINUS           shift and go to state 51
    INT_VAL         shift and go to state 54
    FLOAT_VAL       shift and go to state 55
    PRINTF          shift and go to state 29
    ID              shift and go to state 30
    MULTIPLY        shift and go to state 38

    id_ptr_or_array                shift and go to state 53
    expression                     shift and go to state 71
    function_app                   shift and go to state 72
    id                             shift and go to state 35
    ptrs                           shift and go to state 36

state 48

    (56) function_app -> PRINTF LPAREN . STRING print_formats RPAREN

    STRING          shift and go to state 73


state 49

    (57) function_app -> ID LPAREN . arguments RPAREN
    (61) arguments -> . expression COMMA arguments
    (62) arguments -> . expression
    (63) arguments -> . empty
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression MULTIPLY expression
    (68) expression -> . expression DIVIDE expression
    (69) expression -> . expression LESS expression
    (70) expression -> . expression GREATER expression
    (71) expression -> . LPAREN expression RPAREN
    (72) expression -> . MINUS expression
    (73) expression -> . expression DOUBLEPLUS
    (74) expression -> . id_ptr_or_array
    (75) expression -> . INT_VAL
    (76) expression -> . FLOAT_VAL
    (64) empty -> .
    (11) id_ptr_or_array -> . id
    (12) id_ptr_or_array -> . id array_decs
    (13) id_ptr_or_array -> . ptrs id
    (6) id -> . ID
    (16) ptrs -> . MULTIPLY ptrs
    (17) ptrs -> . MULTIPLY

    LPAREN          shift and go to state 52
    MINUS           shift and go to state 51
    INT_VAL         shift and go to state 54
    FLOAT_VAL       shift and go to state 55
    RPAREN          reduce using rule 64 (empty -> .)
    ID              shift and go to state 8
    MULTIPLY        shift and go to state 38

    arguments                      shift and go to state 74
    expression                     shift and go to state 75
    empty                          shift and go to state 76
    id_ptr_or_array                shift and go to state 53
    id                             shift and go to state 35
    ptrs                           shift and go to state 36

state 50

    (55) return_expr -> RETURN expression .
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . MULTIPLY expression
    (68) expression -> expression . DIVIDE expression
    (69) expression -> expression . LESS expression
    (70) expression -> expression . GREATER expression
    (73) expression -> expression . DOUBLEPLUS

    SEMI            reduce using rule 55 (return_expr -> RETURN expression .)
    RBRACE          reduce using rule 55 (return_expr -> RETURN expression .)
    RPAREN          reduce using rule 55 (return_expr -> RETURN expression .)
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    MULTIPLY        shift and go to state 79
    DIVIDE          shift and go to state 80
    LESS            shift and go to state 81
    GREATER         shift and go to state 82
    DOUBLEPLUS      shift and go to state 83


state 51

    (72) expression -> MINUS . expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression MULTIPLY expression
    (68) expression -> . expression DIVIDE expression
    (69) expression -> . expression LESS expression
    (70) expression -> . expression GREATER expression
    (71) expression -> . LPAREN expression RPAREN
    (72) expression -> . MINUS expression
    (73) expression -> . expression DOUBLEPLUS
    (74) expression -> . id_ptr_or_array
    (75) expression -> . INT_VAL
    (76) expression -> . FLOAT_VAL
    (11) id_ptr_or_array -> . id
    (12) id_ptr_or_array -> . id array_decs
    (13) id_ptr_or_array -> . ptrs id
    (6) id -> . ID
    (16) ptrs -> . MULTIPLY ptrs
    (17) ptrs -> . MULTIPLY

    LPAREN          shift and go to state 52
    MINUS           shift and go to state 51
    INT_VAL         shift and go to state 54
    FLOAT_VAL       shift and go to state 55
    ID              shift and go to state 8
    MULTIPLY        shift and go to state 38

    expression                     shift and go to state 84
    id_ptr_or_array                shift and go to state 53
    id                             shift and go to state 35
    ptrs                           shift and go to state 36

state 52

    (71) expression -> LPAREN . expression RPAREN
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression MULTIPLY expression
    (68) expression -> . expression DIVIDE expression
    (69) expression -> . expression LESS expression
    (70) expression -> . expression GREATER expression
    (71) expression -> . LPAREN expression RPAREN
    (72) expression -> . MINUS expression
    (73) expression -> . expression DOUBLEPLUS
    (74) expression -> . id_ptr_or_array
    (75) expression -> . INT_VAL
    (76) expression -> . FLOAT_VAL
    (11) id_ptr_or_array -> . id
    (12) id_ptr_or_array -> . id array_decs
    (13) id_ptr_or_array -> . ptrs id
    (6) id -> . ID
    (16) ptrs -> . MULTIPLY ptrs
    (17) ptrs -> . MULTIPLY

    LPAREN          shift and go to state 52
    MINUS           shift and go to state 51
    INT_VAL         shift and go to state 54
    FLOAT_VAL       shift and go to state 55
    ID              shift and go to state 8
    MULTIPLY        shift and go to state 38

    expression                     shift and go to state 85
    id_ptr_or_array                shift and go to state 53
    id                             shift and go to state 35
    ptrs                           shift and go to state 36

state 53

    (74) expression -> id_ptr_or_array .

    PLUS            reduce using rule 74 (expression -> id_ptr_or_array .)
    MINUS           reduce using rule 74 (expression -> id_ptr_or_array .)
    MULTIPLY        reduce using rule 74 (expression -> id_ptr_or_array .)
    DIVIDE          reduce using rule 74 (expression -> id_ptr_or_array .)
    LESS            reduce using rule 74 (expression -> id_ptr_or_array .)
    GREATER         reduce using rule 74 (expression -> id_ptr_or_array .)
    DOUBLEPLUS      reduce using rule 74 (expression -> id_ptr_or_array .)
    SEMI            reduce using rule 74 (expression -> id_ptr_or_array .)
    RBRACE          reduce using rule 74 (expression -> id_ptr_or_array .)
    RPAREN          reduce using rule 74 (expression -> id_ptr_or_array .)
    COMMA           reduce using rule 74 (expression -> id_ptr_or_array .)
    SQ_RBRACKET     reduce using rule 74 (expression -> id_ptr_or_array .)
    LPAREN          reduce using rule 74 (expression -> id_ptr_or_array .)
    INT_VAL         reduce using rule 74 (expression -> id_ptr_or_array .)
    FLOAT_VAL       reduce using rule 74 (expression -> id_ptr_or_array .)
    ID              reduce using rule 74 (expression -> id_ptr_or_array .)


state 54

    (75) expression -> INT_VAL .

    PLUS            reduce using rule 75 (expression -> INT_VAL .)
    MINUS           reduce using rule 75 (expression -> INT_VAL .)
    MULTIPLY        reduce using rule 75 (expression -> INT_VAL .)
    DIVIDE          reduce using rule 75 (expression -> INT_VAL .)
    LESS            reduce using rule 75 (expression -> INT_VAL .)
    GREATER         reduce using rule 75 (expression -> INT_VAL .)
    DOUBLEPLUS      reduce using rule 75 (expression -> INT_VAL .)
    SEMI            reduce using rule 75 (expression -> INT_VAL .)
    RBRACE          reduce using rule 75 (expression -> INT_VAL .)
    RPAREN          reduce using rule 75 (expression -> INT_VAL .)
    COMMA           reduce using rule 75 (expression -> INT_VAL .)
    SQ_RBRACKET     reduce using rule 75 (expression -> INT_VAL .)
    LPAREN          reduce using rule 75 (expression -> INT_VAL .)
    INT_VAL         reduce using rule 75 (expression -> INT_VAL .)
    FLOAT_VAL       reduce using rule 75 (expression -> INT_VAL .)
    ID              reduce using rule 75 (expression -> INT_VAL .)


state 55

    (76) expression -> FLOAT_VAL .

    PLUS            reduce using rule 76 (expression -> FLOAT_VAL .)
    MINUS           reduce using rule 76 (expression -> FLOAT_VAL .)
    MULTIPLY        reduce using rule 76 (expression -> FLOAT_VAL .)
    DIVIDE          reduce using rule 76 (expression -> FLOAT_VAL .)
    LESS            reduce using rule 76 (expression -> FLOAT_VAL .)
    GREATER         reduce using rule 76 (expression -> FLOAT_VAL .)
    DOUBLEPLUS      reduce using rule 76 (expression -> FLOAT_VAL .)
    SEMI            reduce using rule 76 (expression -> FLOAT_VAL .)
    RBRACE          reduce using rule 76 (expression -> FLOAT_VAL .)
    RPAREN          reduce using rule 76 (expression -> FLOAT_VAL .)
    COMMA           reduce using rule 76 (expression -> FLOAT_VAL .)
    SQ_RBRACKET     reduce using rule 76 (expression -> FLOAT_VAL .)
    LPAREN          reduce using rule 76 (expression -> FLOAT_VAL .)
    INT_VAL         reduce using rule 76 (expression -> FLOAT_VAL .)
    FLOAT_VAL       reduce using rule 76 (expression -> FLOAT_VAL .)
    ID              reduce using rule 76 (expression -> FLOAT_VAL .)


state 56

    (31) conditional -> if elif_else .

    PRINTF          reduce using rule 31 (conditional -> if elif_else .)
    ID              reduce using rule 31 (conditional -> if elif_else .)
    RETURN          reduce using rule 31 (conditional -> if elif_else .)
    FOR             reduce using rule 31 (conditional -> if elif_else .)
    WHILE           reduce using rule 31 (conditional -> if elif_else .)
    INT             reduce using rule 31 (conditional -> if elif_else .)
    FLOAT           reduce using rule 31 (conditional -> if elif_else .)
    IF              reduce using rule 31 (conditional -> if elif_else .)
    MULTIPLY        reduce using rule 31 (conditional -> if elif_else .)
    RBRACE          reduce using rule 31 (conditional -> if elif_else .)


state 57

    (33) elif_else -> elif . else
    (36) else -> . ELSE block
    (37) else -> . empty
    (64) empty -> .

    ELSE            shift and go to state 87
    PRINTF          reduce using rule 64 (empty -> .)
    ID              reduce using rule 64 (empty -> .)
    RETURN          reduce using rule 64 (empty -> .)
    FOR             reduce using rule 64 (empty -> .)
    WHILE           reduce using rule 64 (empty -> .)
    INT             reduce using rule 64 (empty -> .)
    FLOAT           reduce using rule 64 (empty -> .)
    IF              reduce using rule 64 (empty -> .)
    MULTIPLY        reduce using rule 64 (empty -> .)
    RBRACE          reduce using rule 64 (empty -> .)

    else                           shift and go to state 86
    empty                          shift and go to state 88

state 58

    (34) elif -> ELSE . IF LPAREN expression RPAREN block elif

    IF              shift and go to state 89


state 59

    (35) elif -> empty .

    ELSE            reduce using rule 35 (elif -> empty .)
    PRINTF          reduce using rule 35 (elif -> empty .)
    ID              reduce using rule 35 (elif -> empty .)
    RETURN          reduce using rule 35 (elif -> empty .)
    FOR             reduce using rule 35 (elif -> empty .)
    WHILE           reduce using rule 35 (elif -> empty .)
    INT             reduce using rule 35 (elif -> empty .)
    FLOAT           reduce using rule 35 (elif -> empty .)
    IF              reduce using rule 35 (elif -> empty .)
    MULTIPLY        reduce using rule 35 (elif -> empty .)
    RBRACE          reduce using rule 35 (elif -> empty .)


state 60

    (38) for -> FOR LPAREN . loop_init_or_empty SEMI semi_statement_or_empty SEMI semi_statement_or_empty RPAREN block
    (39) loop_init_or_empty -> . loop_init
    (40) loop_init_or_empty -> . expression
    (41) loop_init_or_empty -> . empty
    (45) loop_init -> . type var_assignment
    (46) loop_init -> . semi_statement
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression MULTIPLY expression
    (68) expression -> . expression DIVIDE expression
    (69) expression -> . expression LESS expression
    (70) expression -> . expression GREATER expression
    (71) expression -> . LPAREN expression RPAREN
    (72) expression -> . MINUS expression
    (73) expression -> . expression DOUBLEPLUS
    (74) expression -> . id_ptr_or_array
    (75) expression -> . INT_VAL
    (76) expression -> . FLOAT_VAL
    (64) empty -> .
    (4) type -> . INT
    (5) type -> . FLOAT
    (24) semi_statement -> . var_declaration
    (25) semi_statement -> . var_assignment
    (26) semi_statement -> . function_app
    (27) semi_statement -> . return_expr
    (11) id_ptr_or_array -> . id
    (12) id_ptr_or_array -> . id array_decs
    (13) id_ptr_or_array -> . ptrs id
    (48) var_declaration -> . type var_and_assign
    (49) var_assignment -> . id_ptr_or_array EQ expression
    (50) var_assignment -> . id_ptr_or_array EQ function_app
    (56) function_app -> . PRINTF LPAREN STRING print_formats RPAREN
    (57) function_app -> . ID LPAREN arguments RPAREN
    (55) return_expr -> . RETURN expression
    (6) id -> . ID
    (16) ptrs -> . MULTIPLY ptrs
    (17) ptrs -> . MULTIPLY

    LPAREN          shift and go to state 52
    MINUS           shift and go to state 51
    INT_VAL         shift and go to state 54
    FLOAT_VAL       shift and go to state 55
    SEMI            reduce using rule 64 (empty -> .)
    INT             shift and go to state 4
    FLOAT           shift and go to state 5
    PRINTF          shift and go to state 29
    ID              shift and go to state 30
    RETURN          shift and go to state 31
    MULTIPLY        shift and go to state 38

    loop_init_or_empty             shift and go to state 90
    loop_init                      shift and go to state 91
    expression                     shift and go to state 92
    empty                          shift and go to state 93
    type                           shift and go to state 94
    var_assignment                 shift and go to state 21
    semi_statement                 shift and go to state 95
    id_ptr_or_array                shift and go to state 96
    var_declaration                shift and go to state 20
    function_app                   shift and go to state 22
    return_expr                    shift and go to state 23
    id                             shift and go to state 35
    ptrs                           shift and go to state 36

state 61

    (47) while -> WHILE LPAREN . expression RPAREN block
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression MULTIPLY expression
    (68) expression -> . expression DIVIDE expression
    (69) expression -> . expression LESS expression
    (70) expression -> . expression GREATER expression
    (71) expression -> . LPAREN expression RPAREN
    (72) expression -> . MINUS expression
    (73) expression -> . expression DOUBLEPLUS
    (74) expression -> . id_ptr_or_array
    (75) expression -> . INT_VAL
    (76) expression -> . FLOAT_VAL
    (11) id_ptr_or_array -> . id
    (12) id_ptr_or_array -> . id array_decs
    (13) id_ptr_or_array -> . ptrs id
    (6) id -> . ID
    (16) ptrs -> . MULTIPLY ptrs
    (17) ptrs -> . MULTIPLY

    LPAREN          shift and go to state 52
    MINUS           shift and go to state 51
    INT_VAL         shift and go to state 54
    FLOAT_VAL       shift and go to state 55
    ID              shift and go to state 8
    MULTIPLY        shift and go to state 38

    expression                     shift and go to state 97
    id_ptr_or_array                shift and go to state 53
    id                             shift and go to state 35
    ptrs                           shift and go to state 36

state 62

    (12) id_ptr_or_array -> id array_decs .

    EQ              reduce using rule 12 (id_ptr_or_array -> id array_decs .)
    COMMA           reduce using rule 12 (id_ptr_or_array -> id array_decs .)
    RPAREN          reduce using rule 12 (id_ptr_or_array -> id array_decs .)
    SEMI            reduce using rule 12 (id_ptr_or_array -> id array_decs .)
    RBRACE          reduce using rule 12 (id_ptr_or_array -> id array_decs .)
    PLUS            reduce using rule 12 (id_ptr_or_array -> id array_decs .)
    MINUS           reduce using rule 12 (id_ptr_or_array -> id array_decs .)
    MULTIPLY        reduce using rule 12 (id_ptr_or_array -> id array_decs .)
    DIVIDE          reduce using rule 12 (id_ptr_or_array -> id array_decs .)
    LESS            reduce using rule 12 (id_ptr_or_array -> id array_decs .)
    GREATER         reduce using rule 12 (id_ptr_or_array -> id array_decs .)
    DOUBLEPLUS      reduce using rule 12 (id_ptr_or_array -> id array_decs .)
    SQ_RBRACKET     reduce using rule 12 (id_ptr_or_array -> id array_decs .)
    LPAREN          reduce using rule 12 (id_ptr_or_array -> id array_decs .)
    INT_VAL         reduce using rule 12 (id_ptr_or_array -> id array_decs .)
    FLOAT_VAL       reduce using rule 12 (id_ptr_or_array -> id array_decs .)
    ID              reduce using rule 12 (id_ptr_or_array -> id array_decs .)


state 63

    (14) array_decs -> SQ_LBRACKET . expression SQ_RBRACKET array_decs
    (15) array_decs -> SQ_LBRACKET . expression SQ_RBRACKET
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression MULTIPLY expression
    (68) expression -> . expression DIVIDE expression
    (69) expression -> . expression LESS expression
    (70) expression -> . expression GREATER expression
    (71) expression -> . LPAREN expression RPAREN
    (72) expression -> . MINUS expression
    (73) expression -> . expression DOUBLEPLUS
    (74) expression -> . id_ptr_or_array
    (75) expression -> . INT_VAL
    (76) expression -> . FLOAT_VAL
    (11) id_ptr_or_array -> . id
    (12) id_ptr_or_array -> . id array_decs
    (13) id_ptr_or_array -> . ptrs id
    (6) id -> . ID
    (16) ptrs -> . MULTIPLY ptrs
    (17) ptrs -> . MULTIPLY

    LPAREN          shift and go to state 52
    MINUS           shift and go to state 51
    INT_VAL         shift and go to state 54
    FLOAT_VAL       shift and go to state 55
    ID              shift and go to state 8
    MULTIPLY        shift and go to state 38

    expression                     shift and go to state 98
    id_ptr_or_array                shift and go to state 53
    id                             shift and go to state 35
    ptrs                           shift and go to state 36

state 64

    (13) id_ptr_or_array -> ptrs id .

    EQ              reduce using rule 13 (id_ptr_or_array -> ptrs id .)
    COMMA           reduce using rule 13 (id_ptr_or_array -> ptrs id .)
    RPAREN          reduce using rule 13 (id_ptr_or_array -> ptrs id .)
    SEMI            reduce using rule 13 (id_ptr_or_array -> ptrs id .)
    RBRACE          reduce using rule 13 (id_ptr_or_array -> ptrs id .)
    PLUS            reduce using rule 13 (id_ptr_or_array -> ptrs id .)
    MINUS           reduce using rule 13 (id_ptr_or_array -> ptrs id .)
    MULTIPLY        reduce using rule 13 (id_ptr_or_array -> ptrs id .)
    DIVIDE          reduce using rule 13 (id_ptr_or_array -> ptrs id .)
    LESS            reduce using rule 13 (id_ptr_or_array -> ptrs id .)
    GREATER         reduce using rule 13 (id_ptr_or_array -> ptrs id .)
    DOUBLEPLUS      reduce using rule 13 (id_ptr_or_array -> ptrs id .)
    SQ_RBRACKET     reduce using rule 13 (id_ptr_or_array -> ptrs id .)
    LPAREN          reduce using rule 13 (id_ptr_or_array -> ptrs id .)
    INT_VAL         reduce using rule 13 (id_ptr_or_array -> ptrs id .)
    FLOAT_VAL       reduce using rule 13 (id_ptr_or_array -> ptrs id .)
    ID              reduce using rule 13 (id_ptr_or_array -> ptrs id .)


state 65

    (32) if -> IF LPAREN . expression RPAREN block
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression MULTIPLY expression
    (68) expression -> . expression DIVIDE expression
    (69) expression -> . expression LESS expression
    (70) expression -> . expression GREATER expression
    (71) expression -> . LPAREN expression RPAREN
    (72) expression -> . MINUS expression
    (73) expression -> . expression DOUBLEPLUS
    (74) expression -> . id_ptr_or_array
    (75) expression -> . INT_VAL
    (76) expression -> . FLOAT_VAL
    (11) id_ptr_or_array -> . id
    (12) id_ptr_or_array -> . id array_decs
    (13) id_ptr_or_array -> . ptrs id
    (6) id -> . ID
    (16) ptrs -> . MULTIPLY ptrs
    (17) ptrs -> . MULTIPLY

    LPAREN          shift and go to state 52
    MINUS           shift and go to state 51
    INT_VAL         shift and go to state 54
    FLOAT_VAL       shift and go to state 55
    ID              shift and go to state 8
    MULTIPLY        shift and go to state 38

    expression                     shift and go to state 99
    id_ptr_or_array                shift and go to state 53
    id                             shift and go to state 35
    ptrs                           shift and go to state 36

state 66

    (16) ptrs -> MULTIPLY ptrs .

    ID              reduce using rule 16 (ptrs -> MULTIPLY ptrs .)


state 67

    (8) declarations -> type id_ptr_or_array COMMA . declarations
    (8) declarations -> . type id_ptr_or_array COMMA declarations
    (9) declarations -> . type id_ptr_or_array
    (10) declarations -> . VOID
    (4) type -> . INT
    (5) type -> . FLOAT

    VOID            shift and go to state 15
    INT             shift and go to state 4
    FLOAT           shift and go to state 5

    type                           shift and go to state 14
    declarations                   shift and go to state 100

state 68

    (21) statements -> semi_statement SEMI statements .

    RBRACE          reduce using rule 21 (statements -> semi_statement SEMI statements .)


state 69

    (51) var_and_assign -> var_assignment COMMA . var_and_assign
    (51) var_and_assign -> . var_assignment COMMA var_and_assign
    (52) var_and_assign -> . var_assignment
    (53) var_and_assign -> . id_ptr_or_array COMMA var_and_assign
    (54) var_and_assign -> . id_ptr_or_array
    (49) var_assignment -> . id_ptr_or_array EQ expression
    (50) var_assignment -> . id_ptr_or_array EQ function_app
    (11) id_ptr_or_array -> . id
    (12) id_ptr_or_array -> . id array_decs
    (13) id_ptr_or_array -> . ptrs id
    (6) id -> . ID
    (16) ptrs -> . MULTIPLY ptrs
    (17) ptrs -> . MULTIPLY

    ID              shift and go to state 8
    MULTIPLY        shift and go to state 38

    var_assignment                 shift and go to state 45
    var_and_assign                 shift and go to state 101
    id_ptr_or_array                shift and go to state 46
    id                             shift and go to state 35
    ptrs                           shift and go to state 36

state 70

    (53) var_and_assign -> id_ptr_or_array COMMA . var_and_assign
    (51) var_and_assign -> . var_assignment COMMA var_and_assign
    (52) var_and_assign -> . var_assignment
    (53) var_and_assign -> . id_ptr_or_array COMMA var_and_assign
    (54) var_and_assign -> . id_ptr_or_array
    (49) var_assignment -> . id_ptr_or_array EQ expression
    (50) var_assignment -> . id_ptr_or_array EQ function_app
    (11) id_ptr_or_array -> . id
    (12) id_ptr_or_array -> . id array_decs
    (13) id_ptr_or_array -> . ptrs id
    (6) id -> . ID
    (16) ptrs -> . MULTIPLY ptrs
    (17) ptrs -> . MULTIPLY

    ID              shift and go to state 8
    MULTIPLY        shift and go to state 38

    id_ptr_or_array                shift and go to state 46
    var_and_assign                 shift and go to state 102
    var_assignment                 shift and go to state 45
    id                             shift and go to state 35
    ptrs                           shift and go to state 36

state 71

    (49) var_assignment -> id_ptr_or_array EQ expression .
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . MULTIPLY expression
    (68) expression -> expression . DIVIDE expression
    (69) expression -> expression . LESS expression
    (70) expression -> expression . GREATER expression
    (73) expression -> expression . DOUBLEPLUS

    SEMI            reduce using rule 49 (var_assignment -> id_ptr_or_array EQ expression .)
    RBRACE          reduce using rule 49 (var_assignment -> id_ptr_or_array EQ expression .)
    COMMA           reduce using rule 49 (var_assignment -> id_ptr_or_array EQ expression .)
    RPAREN          reduce using rule 49 (var_assignment -> id_ptr_or_array EQ expression .)
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    MULTIPLY        shift and go to state 79
    DIVIDE          shift and go to state 80
    LESS            shift and go to state 81
    GREATER         shift and go to state 82
    DOUBLEPLUS      shift and go to state 83


state 72

    (50) var_assignment -> id_ptr_or_array EQ function_app .

    SEMI            reduce using rule 50 (var_assignment -> id_ptr_or_array EQ function_app .)
    RBRACE          reduce using rule 50 (var_assignment -> id_ptr_or_array EQ function_app .)
    COMMA           reduce using rule 50 (var_assignment -> id_ptr_or_array EQ function_app .)
    RPAREN          reduce using rule 50 (var_assignment -> id_ptr_or_array EQ function_app .)


state 73

    (56) function_app -> PRINTF LPAREN STRING . print_formats RPAREN
    (58) print_formats -> . COMMA expression print_formats
    (59) print_formats -> . expression
    (60) print_formats -> . empty
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression MULTIPLY expression
    (68) expression -> . expression DIVIDE expression
    (69) expression -> . expression LESS expression
    (70) expression -> . expression GREATER expression
    (71) expression -> . LPAREN expression RPAREN
    (72) expression -> . MINUS expression
    (73) expression -> . expression DOUBLEPLUS
    (74) expression -> . id_ptr_or_array
    (75) expression -> . INT_VAL
    (76) expression -> . FLOAT_VAL
    (64) empty -> .
    (11) id_ptr_or_array -> . id
    (12) id_ptr_or_array -> . id array_decs
    (13) id_ptr_or_array -> . ptrs id
    (6) id -> . ID
    (16) ptrs -> . MULTIPLY ptrs
    (17) ptrs -> . MULTIPLY

    COMMA           shift and go to state 104
    LPAREN          shift and go to state 52
    MINUS           shift and go to state 51
    INT_VAL         shift and go to state 54
    FLOAT_VAL       shift and go to state 55
    RPAREN          reduce using rule 64 (empty -> .)
    ID              shift and go to state 8
    MULTIPLY        shift and go to state 38

    print_formats                  shift and go to state 103
    expression                     shift and go to state 105
    empty                          shift and go to state 106
    id_ptr_or_array                shift and go to state 53
    id                             shift and go to state 35
    ptrs                           shift and go to state 36

state 74

    (57) function_app -> ID LPAREN arguments . RPAREN

    RPAREN          shift and go to state 107


state 75

    (61) arguments -> expression . COMMA arguments
    (62) arguments -> expression .
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . MULTIPLY expression
    (68) expression -> expression . DIVIDE expression
    (69) expression -> expression . LESS expression
    (70) expression -> expression . GREATER expression
    (73) expression -> expression . DOUBLEPLUS

    COMMA           shift and go to state 108
    RPAREN          reduce using rule 62 (arguments -> expression .)
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    MULTIPLY        shift and go to state 79
    DIVIDE          shift and go to state 80
    LESS            shift and go to state 81
    GREATER         shift and go to state 82
    DOUBLEPLUS      shift and go to state 83


state 76

    (63) arguments -> empty .

    RPAREN          reduce using rule 63 (arguments -> empty .)


state 77

    (65) expression -> expression PLUS . expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression MULTIPLY expression
    (68) expression -> . expression DIVIDE expression
    (69) expression -> . expression LESS expression
    (70) expression -> . expression GREATER expression
    (71) expression -> . LPAREN expression RPAREN
    (72) expression -> . MINUS expression
    (73) expression -> . expression DOUBLEPLUS
    (74) expression -> . id_ptr_or_array
    (75) expression -> . INT_VAL
    (76) expression -> . FLOAT_VAL
    (11) id_ptr_or_array -> . id
    (12) id_ptr_or_array -> . id array_decs
    (13) id_ptr_or_array -> . ptrs id
    (6) id -> . ID
    (16) ptrs -> . MULTIPLY ptrs
    (17) ptrs -> . MULTIPLY

    LPAREN          shift and go to state 52
    MINUS           shift and go to state 51
    INT_VAL         shift and go to state 54
    FLOAT_VAL       shift and go to state 55
    ID              shift and go to state 8
    MULTIPLY        shift and go to state 38

    expression                     shift and go to state 109
    id_ptr_or_array                shift and go to state 53
    id                             shift and go to state 35
    ptrs                           shift and go to state 36

state 78

    (66) expression -> expression MINUS . expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression MULTIPLY expression
    (68) expression -> . expression DIVIDE expression
    (69) expression -> . expression LESS expression
    (70) expression -> . expression GREATER expression
    (71) expression -> . LPAREN expression RPAREN
    (72) expression -> . MINUS expression
    (73) expression -> . expression DOUBLEPLUS
    (74) expression -> . id_ptr_or_array
    (75) expression -> . INT_VAL
    (76) expression -> . FLOAT_VAL
    (11) id_ptr_or_array -> . id
    (12) id_ptr_or_array -> . id array_decs
    (13) id_ptr_or_array -> . ptrs id
    (6) id -> . ID
    (16) ptrs -> . MULTIPLY ptrs
    (17) ptrs -> . MULTIPLY

    LPAREN          shift and go to state 52
    MINUS           shift and go to state 51
    INT_VAL         shift and go to state 54
    FLOAT_VAL       shift and go to state 55
    ID              shift and go to state 8
    MULTIPLY        shift and go to state 38

    expression                     shift and go to state 110
    id_ptr_or_array                shift and go to state 53
    id                             shift and go to state 35
    ptrs                           shift and go to state 36

state 79

    (67) expression -> expression MULTIPLY . expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression MULTIPLY expression
    (68) expression -> . expression DIVIDE expression
    (69) expression -> . expression LESS expression
    (70) expression -> . expression GREATER expression
    (71) expression -> . LPAREN expression RPAREN
    (72) expression -> . MINUS expression
    (73) expression -> . expression DOUBLEPLUS
    (74) expression -> . id_ptr_or_array
    (75) expression -> . INT_VAL
    (76) expression -> . FLOAT_VAL
    (11) id_ptr_or_array -> . id
    (12) id_ptr_or_array -> . id array_decs
    (13) id_ptr_or_array -> . ptrs id
    (6) id -> . ID
    (16) ptrs -> . MULTIPLY ptrs
    (17) ptrs -> . MULTIPLY

    LPAREN          shift and go to state 52
    MINUS           shift and go to state 51
    INT_VAL         shift and go to state 54
    FLOAT_VAL       shift and go to state 55
    ID              shift and go to state 8
    MULTIPLY        shift and go to state 38

    expression                     shift and go to state 111
    id_ptr_or_array                shift and go to state 53
    id                             shift and go to state 35
    ptrs                           shift and go to state 36

state 80

    (68) expression -> expression DIVIDE . expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression MULTIPLY expression
    (68) expression -> . expression DIVIDE expression
    (69) expression -> . expression LESS expression
    (70) expression -> . expression GREATER expression
    (71) expression -> . LPAREN expression RPAREN
    (72) expression -> . MINUS expression
    (73) expression -> . expression DOUBLEPLUS
    (74) expression -> . id_ptr_or_array
    (75) expression -> . INT_VAL
    (76) expression -> . FLOAT_VAL
    (11) id_ptr_or_array -> . id
    (12) id_ptr_or_array -> . id array_decs
    (13) id_ptr_or_array -> . ptrs id
    (6) id -> . ID
    (16) ptrs -> . MULTIPLY ptrs
    (17) ptrs -> . MULTIPLY

    LPAREN          shift and go to state 52
    MINUS           shift and go to state 51
    INT_VAL         shift and go to state 54
    FLOAT_VAL       shift and go to state 55
    ID              shift and go to state 8
    MULTIPLY        shift and go to state 38

    expression                     shift and go to state 112
    id_ptr_or_array                shift and go to state 53
    id                             shift and go to state 35
    ptrs                           shift and go to state 36

state 81

    (69) expression -> expression LESS . expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression MULTIPLY expression
    (68) expression -> . expression DIVIDE expression
    (69) expression -> . expression LESS expression
    (70) expression -> . expression GREATER expression
    (71) expression -> . LPAREN expression RPAREN
    (72) expression -> . MINUS expression
    (73) expression -> . expression DOUBLEPLUS
    (74) expression -> . id_ptr_or_array
    (75) expression -> . INT_VAL
    (76) expression -> . FLOAT_VAL
    (11) id_ptr_or_array -> . id
    (12) id_ptr_or_array -> . id array_decs
    (13) id_ptr_or_array -> . ptrs id
    (6) id -> . ID
    (16) ptrs -> . MULTIPLY ptrs
    (17) ptrs -> . MULTIPLY

    LPAREN          shift and go to state 52
    MINUS           shift and go to state 51
    INT_VAL         shift and go to state 54
    FLOAT_VAL       shift and go to state 55
    ID              shift and go to state 8
    MULTIPLY        shift and go to state 38

    expression                     shift and go to state 113
    id_ptr_or_array                shift and go to state 53
    id                             shift and go to state 35
    ptrs                           shift and go to state 36

state 82

    (70) expression -> expression GREATER . expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression MULTIPLY expression
    (68) expression -> . expression DIVIDE expression
    (69) expression -> . expression LESS expression
    (70) expression -> . expression GREATER expression
    (71) expression -> . LPAREN expression RPAREN
    (72) expression -> . MINUS expression
    (73) expression -> . expression DOUBLEPLUS
    (74) expression -> . id_ptr_or_array
    (75) expression -> . INT_VAL
    (76) expression -> . FLOAT_VAL
    (11) id_ptr_or_array -> . id
    (12) id_ptr_or_array -> . id array_decs
    (13) id_ptr_or_array -> . ptrs id
    (6) id -> . ID
    (16) ptrs -> . MULTIPLY ptrs
    (17) ptrs -> . MULTIPLY

    LPAREN          shift and go to state 52
    MINUS           shift and go to state 51
    INT_VAL         shift and go to state 54
    FLOAT_VAL       shift and go to state 55
    ID              shift and go to state 8
    MULTIPLY        shift and go to state 38

    expression                     shift and go to state 114
    id_ptr_or_array                shift and go to state 53
    id                             shift and go to state 35
    ptrs                           shift and go to state 36

state 83

    (73) expression -> expression DOUBLEPLUS .

    PLUS            reduce using rule 73 (expression -> expression DOUBLEPLUS .)
    MINUS           reduce using rule 73 (expression -> expression DOUBLEPLUS .)
    MULTIPLY        reduce using rule 73 (expression -> expression DOUBLEPLUS .)
    DIVIDE          reduce using rule 73 (expression -> expression DOUBLEPLUS .)
    LESS            reduce using rule 73 (expression -> expression DOUBLEPLUS .)
    GREATER         reduce using rule 73 (expression -> expression DOUBLEPLUS .)
    DOUBLEPLUS      reduce using rule 73 (expression -> expression DOUBLEPLUS .)
    SEMI            reduce using rule 73 (expression -> expression DOUBLEPLUS .)
    RBRACE          reduce using rule 73 (expression -> expression DOUBLEPLUS .)
    RPAREN          reduce using rule 73 (expression -> expression DOUBLEPLUS .)
    COMMA           reduce using rule 73 (expression -> expression DOUBLEPLUS .)
    SQ_RBRACKET     reduce using rule 73 (expression -> expression DOUBLEPLUS .)
    LPAREN          reduce using rule 73 (expression -> expression DOUBLEPLUS .)
    INT_VAL         reduce using rule 73 (expression -> expression DOUBLEPLUS .)
    FLOAT_VAL       reduce using rule 73 (expression -> expression DOUBLEPLUS .)
    ID              reduce using rule 73 (expression -> expression DOUBLEPLUS .)


state 84

    (72) expression -> MINUS expression .
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . MULTIPLY expression
    (68) expression -> expression . DIVIDE expression
    (69) expression -> expression . LESS expression
    (70) expression -> expression . GREATER expression
    (73) expression -> expression . DOUBLEPLUS

    PLUS            reduce using rule 72 (expression -> MINUS expression .)
    MINUS           reduce using rule 72 (expression -> MINUS expression .)
    LESS            reduce using rule 72 (expression -> MINUS expression .)
    GREATER         reduce using rule 72 (expression -> MINUS expression .)
    DOUBLEPLUS      reduce using rule 72 (expression -> MINUS expression .)
    SEMI            reduce using rule 72 (expression -> MINUS expression .)
    RBRACE          reduce using rule 72 (expression -> MINUS expression .)
    RPAREN          reduce using rule 72 (expression -> MINUS expression .)
    COMMA           reduce using rule 72 (expression -> MINUS expression .)
    SQ_RBRACKET     reduce using rule 72 (expression -> MINUS expression .)
    LPAREN          reduce using rule 72 (expression -> MINUS expression .)
    INT_VAL         reduce using rule 72 (expression -> MINUS expression .)
    FLOAT_VAL       reduce using rule 72 (expression -> MINUS expression .)
    ID              reduce using rule 72 (expression -> MINUS expression .)
    MULTIPLY        shift and go to state 79
    DIVIDE          shift and go to state 80

  ! MULTIPLY        [ reduce using rule 72 (expression -> MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 72 (expression -> MINUS expression .) ]
  ! PLUS            [ shift and go to state 77 ]
  ! MINUS           [ shift and go to state 78 ]
  ! LESS            [ shift and go to state 81 ]
  ! GREATER         [ shift and go to state 82 ]
  ! DOUBLEPLUS      [ shift and go to state 83 ]


state 85

    (71) expression -> LPAREN expression . RPAREN
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . MULTIPLY expression
    (68) expression -> expression . DIVIDE expression
    (69) expression -> expression . LESS expression
    (70) expression -> expression . GREATER expression
    (73) expression -> expression . DOUBLEPLUS

    RPAREN          shift and go to state 115
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    MULTIPLY        shift and go to state 79
    DIVIDE          shift and go to state 80
    LESS            shift and go to state 81
    GREATER         shift and go to state 82
    DOUBLEPLUS      shift and go to state 83


state 86

    (33) elif_else -> elif else .

    PRINTF          reduce using rule 33 (elif_else -> elif else .)
    ID              reduce using rule 33 (elif_else -> elif else .)
    RETURN          reduce using rule 33 (elif_else -> elif else .)
    FOR             reduce using rule 33 (elif_else -> elif else .)
    WHILE           reduce using rule 33 (elif_else -> elif else .)
    INT             reduce using rule 33 (elif_else -> elif else .)
    FLOAT           reduce using rule 33 (elif_else -> elif else .)
    IF              reduce using rule 33 (elif_else -> elif else .)
    MULTIPLY        reduce using rule 33 (elif_else -> elif else .)
    RBRACE          reduce using rule 33 (elif_else -> elif else .)


state 87

    (36) else -> ELSE . block
    (18) block -> . LBRACE statements RBRACE

    LBRACE          shift and go to state 12

    block                          shift and go to state 116

state 88

    (37) else -> empty .

    PRINTF          reduce using rule 37 (else -> empty .)
    ID              reduce using rule 37 (else -> empty .)
    RETURN          reduce using rule 37 (else -> empty .)
    FOR             reduce using rule 37 (else -> empty .)
    WHILE           reduce using rule 37 (else -> empty .)
    INT             reduce using rule 37 (else -> empty .)
    FLOAT           reduce using rule 37 (else -> empty .)
    IF              reduce using rule 37 (else -> empty .)
    MULTIPLY        reduce using rule 37 (else -> empty .)
    RBRACE          reduce using rule 37 (else -> empty .)


state 89

    (34) elif -> ELSE IF . LPAREN expression RPAREN block elif

    LPAREN          shift and go to state 117


state 90

    (38) for -> FOR LPAREN loop_init_or_empty . SEMI semi_statement_or_empty SEMI semi_statement_or_empty RPAREN block

    SEMI            shift and go to state 118


state 91

    (39) loop_init_or_empty -> loop_init .

    SEMI            reduce using rule 39 (loop_init_or_empty -> loop_init .)


state 92

    (40) loop_init_or_empty -> expression .
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . MULTIPLY expression
    (68) expression -> expression . DIVIDE expression
    (69) expression -> expression . LESS expression
    (70) expression -> expression . GREATER expression
    (73) expression -> expression . DOUBLEPLUS

    SEMI            reduce using rule 40 (loop_init_or_empty -> expression .)
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    MULTIPLY        shift and go to state 79
    DIVIDE          shift and go to state 80
    LESS            shift and go to state 81
    GREATER         shift and go to state 82
    DOUBLEPLUS      shift and go to state 83


state 93

    (41) loop_init_or_empty -> empty .

    SEMI            reduce using rule 41 (loop_init_or_empty -> empty .)


state 94

    (45) loop_init -> type . var_assignment
    (48) var_declaration -> type . var_and_assign
    (49) var_assignment -> . id_ptr_or_array EQ expression
    (50) var_assignment -> . id_ptr_or_array EQ function_app
    (51) var_and_assign -> . var_assignment COMMA var_and_assign
    (52) var_and_assign -> . var_assignment
    (53) var_and_assign -> . id_ptr_or_array COMMA var_and_assign
    (54) var_and_assign -> . id_ptr_or_array
    (11) id_ptr_or_array -> . id
    (12) id_ptr_or_array -> . id array_decs
    (13) id_ptr_or_array -> . ptrs id
    (6) id -> . ID
    (16) ptrs -> . MULTIPLY ptrs
    (17) ptrs -> . MULTIPLY

    ID              shift and go to state 8
    MULTIPLY        shift and go to state 38

    var_assignment                 shift and go to state 119
    var_and_assign                 shift and go to state 44
    id_ptr_or_array                shift and go to state 120
    id                             shift and go to state 35
    ptrs                           shift and go to state 36

state 95

    (46) loop_init -> semi_statement .

    SEMI            reduce using rule 46 (loop_init -> semi_statement .)


state 96

    (74) expression -> id_ptr_or_array .
    (49) var_assignment -> id_ptr_or_array . EQ expression
    (50) var_assignment -> id_ptr_or_array . EQ function_app

    PLUS            reduce using rule 74 (expression -> id_ptr_or_array .)
    MINUS           reduce using rule 74 (expression -> id_ptr_or_array .)
    MULTIPLY        reduce using rule 74 (expression -> id_ptr_or_array .)
    DIVIDE          reduce using rule 74 (expression -> id_ptr_or_array .)
    LESS            reduce using rule 74 (expression -> id_ptr_or_array .)
    GREATER         reduce using rule 74 (expression -> id_ptr_or_array .)
    DOUBLEPLUS      reduce using rule 74 (expression -> id_ptr_or_array .)
    SEMI            reduce using rule 74 (expression -> id_ptr_or_array .)
    RPAREN          reduce using rule 74 (expression -> id_ptr_or_array .)
    EQ              shift and go to state 47


state 97

    (47) while -> WHILE LPAREN expression . RPAREN block
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . MULTIPLY expression
    (68) expression -> expression . DIVIDE expression
    (69) expression -> expression . LESS expression
    (70) expression -> expression . GREATER expression
    (73) expression -> expression . DOUBLEPLUS

    RPAREN          shift and go to state 121
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    MULTIPLY        shift and go to state 79
    DIVIDE          shift and go to state 80
    LESS            shift and go to state 81
    GREATER         shift and go to state 82
    DOUBLEPLUS      shift and go to state 83


state 98

    (14) array_decs -> SQ_LBRACKET expression . SQ_RBRACKET array_decs
    (15) array_decs -> SQ_LBRACKET expression . SQ_RBRACKET
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . MULTIPLY expression
    (68) expression -> expression . DIVIDE expression
    (69) expression -> expression . LESS expression
    (70) expression -> expression . GREATER expression
    (73) expression -> expression . DOUBLEPLUS

    SQ_RBRACKET     shift and go to state 122
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    MULTIPLY        shift and go to state 79
    DIVIDE          shift and go to state 80
    LESS            shift and go to state 81
    GREATER         shift and go to state 82
    DOUBLEPLUS      shift and go to state 83


state 99

    (32) if -> IF LPAREN expression . RPAREN block
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . MULTIPLY expression
    (68) expression -> expression . DIVIDE expression
    (69) expression -> expression . LESS expression
    (70) expression -> expression . GREATER expression
    (73) expression -> expression . DOUBLEPLUS

    RPAREN          shift and go to state 123
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    MULTIPLY        shift and go to state 79
    DIVIDE          shift and go to state 80
    LESS            shift and go to state 81
    GREATER         shift and go to state 82
    DOUBLEPLUS      shift and go to state 83


state 100

    (8) declarations -> type id_ptr_or_array COMMA declarations .

    RPAREN          reduce using rule 8 (declarations -> type id_ptr_or_array COMMA declarations .)


state 101

    (51) var_and_assign -> var_assignment COMMA var_and_assign .

    SEMI            reduce using rule 51 (var_and_assign -> var_assignment COMMA var_and_assign .)
    RBRACE          reduce using rule 51 (var_and_assign -> var_assignment COMMA var_and_assign .)
    RPAREN          reduce using rule 51 (var_and_assign -> var_assignment COMMA var_and_assign .)


state 102

    (53) var_and_assign -> id_ptr_or_array COMMA var_and_assign .

    SEMI            reduce using rule 53 (var_and_assign -> id_ptr_or_array COMMA var_and_assign .)
    RBRACE          reduce using rule 53 (var_and_assign -> id_ptr_or_array COMMA var_and_assign .)
    RPAREN          reduce using rule 53 (var_and_assign -> id_ptr_or_array COMMA var_and_assign .)


state 103

    (56) function_app -> PRINTF LPAREN STRING print_formats . RPAREN

    RPAREN          shift and go to state 124


state 104

    (58) print_formats -> COMMA . expression print_formats
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression MULTIPLY expression
    (68) expression -> . expression DIVIDE expression
    (69) expression -> . expression LESS expression
    (70) expression -> . expression GREATER expression
    (71) expression -> . LPAREN expression RPAREN
    (72) expression -> . MINUS expression
    (73) expression -> . expression DOUBLEPLUS
    (74) expression -> . id_ptr_or_array
    (75) expression -> . INT_VAL
    (76) expression -> . FLOAT_VAL
    (11) id_ptr_or_array -> . id
    (12) id_ptr_or_array -> . id array_decs
    (13) id_ptr_or_array -> . ptrs id
    (6) id -> . ID
    (16) ptrs -> . MULTIPLY ptrs
    (17) ptrs -> . MULTIPLY

    LPAREN          shift and go to state 52
    MINUS           shift and go to state 51
    INT_VAL         shift and go to state 54
    FLOAT_VAL       shift and go to state 55
    ID              shift and go to state 8
    MULTIPLY        shift and go to state 38

    expression                     shift and go to state 125
    id_ptr_or_array                shift and go to state 53
    id                             shift and go to state 35
    ptrs                           shift and go to state 36

state 105

    (59) print_formats -> expression .
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . MULTIPLY expression
    (68) expression -> expression . DIVIDE expression
    (69) expression -> expression . LESS expression
    (70) expression -> expression . GREATER expression
    (73) expression -> expression . DOUBLEPLUS

    RPAREN          reduce using rule 59 (print_formats -> expression .)
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    MULTIPLY        shift and go to state 79
    DIVIDE          shift and go to state 80
    LESS            shift and go to state 81
    GREATER         shift and go to state 82
    DOUBLEPLUS      shift and go to state 83


state 106

    (60) print_formats -> empty .

    RPAREN          reduce using rule 60 (print_formats -> empty .)


state 107

    (57) function_app -> ID LPAREN arguments RPAREN .

    SEMI            reduce using rule 57 (function_app -> ID LPAREN arguments RPAREN .)
    RBRACE          reduce using rule 57 (function_app -> ID LPAREN arguments RPAREN .)
    COMMA           reduce using rule 57 (function_app -> ID LPAREN arguments RPAREN .)
    RPAREN          reduce using rule 57 (function_app -> ID LPAREN arguments RPAREN .)


state 108

    (61) arguments -> expression COMMA . arguments
    (61) arguments -> . expression COMMA arguments
    (62) arguments -> . expression
    (63) arguments -> . empty
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression MULTIPLY expression
    (68) expression -> . expression DIVIDE expression
    (69) expression -> . expression LESS expression
    (70) expression -> . expression GREATER expression
    (71) expression -> . LPAREN expression RPAREN
    (72) expression -> . MINUS expression
    (73) expression -> . expression DOUBLEPLUS
    (74) expression -> . id_ptr_or_array
    (75) expression -> . INT_VAL
    (76) expression -> . FLOAT_VAL
    (64) empty -> .
    (11) id_ptr_or_array -> . id
    (12) id_ptr_or_array -> . id array_decs
    (13) id_ptr_or_array -> . ptrs id
    (6) id -> . ID
    (16) ptrs -> . MULTIPLY ptrs
    (17) ptrs -> . MULTIPLY

    LPAREN          shift and go to state 52
    MINUS           shift and go to state 51
    INT_VAL         shift and go to state 54
    FLOAT_VAL       shift and go to state 55
    RPAREN          reduce using rule 64 (empty -> .)
    ID              shift and go to state 8
    MULTIPLY        shift and go to state 38

    expression                     shift and go to state 75
    arguments                      shift and go to state 126
    empty                          shift and go to state 76
    id_ptr_or_array                shift and go to state 53
    id                             shift and go to state 35
    ptrs                           shift and go to state 36

state 109

    (65) expression -> expression PLUS expression .
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . MULTIPLY expression
    (68) expression -> expression . DIVIDE expression
    (69) expression -> expression . LESS expression
    (70) expression -> expression . GREATER expression
    (73) expression -> expression . DOUBLEPLUS

    PLUS            reduce using rule 65 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 65 (expression -> expression PLUS expression .)
    LESS            reduce using rule 65 (expression -> expression PLUS expression .)
    GREATER         reduce using rule 65 (expression -> expression PLUS expression .)
    DOUBLEPLUS      reduce using rule 65 (expression -> expression PLUS expression .)
    SEMI            reduce using rule 65 (expression -> expression PLUS expression .)
    RBRACE          reduce using rule 65 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 65 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 65 (expression -> expression PLUS expression .)
    SQ_RBRACKET     reduce using rule 65 (expression -> expression PLUS expression .)
    LPAREN          reduce using rule 65 (expression -> expression PLUS expression .)
    INT_VAL         reduce using rule 65 (expression -> expression PLUS expression .)
    FLOAT_VAL       reduce using rule 65 (expression -> expression PLUS expression .)
    ID              reduce using rule 65 (expression -> expression PLUS expression .)
    MULTIPLY        shift and go to state 79
    DIVIDE          shift and go to state 80

  ! MULTIPLY        [ reduce using rule 65 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 65 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 77 ]
  ! MINUS           [ shift and go to state 78 ]
  ! LESS            [ shift and go to state 81 ]
  ! GREATER         [ shift and go to state 82 ]
  ! DOUBLEPLUS      [ shift and go to state 83 ]


state 110

    (66) expression -> expression MINUS expression .
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . MULTIPLY expression
    (68) expression -> expression . DIVIDE expression
    (69) expression -> expression . LESS expression
    (70) expression -> expression . GREATER expression
    (73) expression -> expression . DOUBLEPLUS

    PLUS            reduce using rule 66 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 66 (expression -> expression MINUS expression .)
    LESS            reduce using rule 66 (expression -> expression MINUS expression .)
    GREATER         reduce using rule 66 (expression -> expression MINUS expression .)
    DOUBLEPLUS      reduce using rule 66 (expression -> expression MINUS expression .)
    SEMI            reduce using rule 66 (expression -> expression MINUS expression .)
    RBRACE          reduce using rule 66 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 66 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 66 (expression -> expression MINUS expression .)
    SQ_RBRACKET     reduce using rule 66 (expression -> expression MINUS expression .)
    LPAREN          reduce using rule 66 (expression -> expression MINUS expression .)
    INT_VAL         reduce using rule 66 (expression -> expression MINUS expression .)
    FLOAT_VAL       reduce using rule 66 (expression -> expression MINUS expression .)
    ID              reduce using rule 66 (expression -> expression MINUS expression .)
    MULTIPLY        shift and go to state 79
    DIVIDE          shift and go to state 80

  ! MULTIPLY        [ reduce using rule 66 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 66 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 77 ]
  ! MINUS           [ shift and go to state 78 ]
  ! LESS            [ shift and go to state 81 ]
  ! GREATER         [ shift and go to state 82 ]
  ! DOUBLEPLUS      [ shift and go to state 83 ]


state 111

    (67) expression -> expression MULTIPLY expression .
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . MULTIPLY expression
    (68) expression -> expression . DIVIDE expression
    (69) expression -> expression . LESS expression
    (70) expression -> expression . GREATER expression
    (73) expression -> expression . DOUBLEPLUS

    PLUS            reduce using rule 67 (expression -> expression MULTIPLY expression .)
    MINUS           reduce using rule 67 (expression -> expression MULTIPLY expression .)
    MULTIPLY        reduce using rule 67 (expression -> expression MULTIPLY expression .)
    DIVIDE          reduce using rule 67 (expression -> expression MULTIPLY expression .)
    LESS            reduce using rule 67 (expression -> expression MULTIPLY expression .)
    GREATER         reduce using rule 67 (expression -> expression MULTIPLY expression .)
    DOUBLEPLUS      reduce using rule 67 (expression -> expression MULTIPLY expression .)
    SEMI            reduce using rule 67 (expression -> expression MULTIPLY expression .)
    RBRACE          reduce using rule 67 (expression -> expression MULTIPLY expression .)
    RPAREN          reduce using rule 67 (expression -> expression MULTIPLY expression .)
    COMMA           reduce using rule 67 (expression -> expression MULTIPLY expression .)
    SQ_RBRACKET     reduce using rule 67 (expression -> expression MULTIPLY expression .)
    LPAREN          reduce using rule 67 (expression -> expression MULTIPLY expression .)
    INT_VAL         reduce using rule 67 (expression -> expression MULTIPLY expression .)
    FLOAT_VAL       reduce using rule 67 (expression -> expression MULTIPLY expression .)
    ID              reduce using rule 67 (expression -> expression MULTIPLY expression .)

  ! PLUS            [ shift and go to state 77 ]
  ! MINUS           [ shift and go to state 78 ]
  ! MULTIPLY        [ shift and go to state 79 ]
  ! DIVIDE          [ shift and go to state 80 ]
  ! LESS            [ shift and go to state 81 ]
  ! GREATER         [ shift and go to state 82 ]
  ! DOUBLEPLUS      [ shift and go to state 83 ]


state 112

    (68) expression -> expression DIVIDE expression .
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . MULTIPLY expression
    (68) expression -> expression . DIVIDE expression
    (69) expression -> expression . LESS expression
    (70) expression -> expression . GREATER expression
    (73) expression -> expression . DOUBLEPLUS

    PLUS            reduce using rule 68 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 68 (expression -> expression DIVIDE expression .)
    MULTIPLY        reduce using rule 68 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 68 (expression -> expression DIVIDE expression .)
    LESS            reduce using rule 68 (expression -> expression DIVIDE expression .)
    GREATER         reduce using rule 68 (expression -> expression DIVIDE expression .)
    DOUBLEPLUS      reduce using rule 68 (expression -> expression DIVIDE expression .)
    SEMI            reduce using rule 68 (expression -> expression DIVIDE expression .)
    RBRACE          reduce using rule 68 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 68 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 68 (expression -> expression DIVIDE expression .)
    SQ_RBRACKET     reduce using rule 68 (expression -> expression DIVIDE expression .)
    LPAREN          reduce using rule 68 (expression -> expression DIVIDE expression .)
    INT_VAL         reduce using rule 68 (expression -> expression DIVIDE expression .)
    FLOAT_VAL       reduce using rule 68 (expression -> expression DIVIDE expression .)
    ID              reduce using rule 68 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 77 ]
  ! MINUS           [ shift and go to state 78 ]
  ! MULTIPLY        [ shift and go to state 79 ]
  ! DIVIDE          [ shift and go to state 80 ]
  ! LESS            [ shift and go to state 81 ]
  ! GREATER         [ shift and go to state 82 ]
  ! DOUBLEPLUS      [ shift and go to state 83 ]


state 113

    (69) expression -> expression LESS expression .
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . MULTIPLY expression
    (68) expression -> expression . DIVIDE expression
    (69) expression -> expression . LESS expression
    (70) expression -> expression . GREATER expression
    (73) expression -> expression . DOUBLEPLUS

    LESS            reduce using rule 69 (expression -> expression LESS expression .)
    GREATER         reduce using rule 69 (expression -> expression LESS expression .)
    DOUBLEPLUS      reduce using rule 69 (expression -> expression LESS expression .)
    SEMI            reduce using rule 69 (expression -> expression LESS expression .)
    RBRACE          reduce using rule 69 (expression -> expression LESS expression .)
    RPAREN          reduce using rule 69 (expression -> expression LESS expression .)
    COMMA           reduce using rule 69 (expression -> expression LESS expression .)
    SQ_RBRACKET     reduce using rule 69 (expression -> expression LESS expression .)
    LPAREN          reduce using rule 69 (expression -> expression LESS expression .)
    INT_VAL         reduce using rule 69 (expression -> expression LESS expression .)
    FLOAT_VAL       reduce using rule 69 (expression -> expression LESS expression .)
    ID              reduce using rule 69 (expression -> expression LESS expression .)
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    MULTIPLY        shift and go to state 79
    DIVIDE          shift and go to state 80

  ! PLUS            [ reduce using rule 69 (expression -> expression LESS expression .) ]
  ! MINUS           [ reduce using rule 69 (expression -> expression LESS expression .) ]
  ! MULTIPLY        [ reduce using rule 69 (expression -> expression LESS expression .) ]
  ! DIVIDE          [ reduce using rule 69 (expression -> expression LESS expression .) ]
  ! LESS            [ shift and go to state 81 ]
  ! GREATER         [ shift and go to state 82 ]
  ! DOUBLEPLUS      [ shift and go to state 83 ]


state 114

    (70) expression -> expression GREATER expression .
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . MULTIPLY expression
    (68) expression -> expression . DIVIDE expression
    (69) expression -> expression . LESS expression
    (70) expression -> expression . GREATER expression
    (73) expression -> expression . DOUBLEPLUS

    LESS            reduce using rule 70 (expression -> expression GREATER expression .)
    GREATER         reduce using rule 70 (expression -> expression GREATER expression .)
    DOUBLEPLUS      reduce using rule 70 (expression -> expression GREATER expression .)
    SEMI            reduce using rule 70 (expression -> expression GREATER expression .)
    RBRACE          reduce using rule 70 (expression -> expression GREATER expression .)
    RPAREN          reduce using rule 70 (expression -> expression GREATER expression .)
    COMMA           reduce using rule 70 (expression -> expression GREATER expression .)
    SQ_RBRACKET     reduce using rule 70 (expression -> expression GREATER expression .)
    LPAREN          reduce using rule 70 (expression -> expression GREATER expression .)
    INT_VAL         reduce using rule 70 (expression -> expression GREATER expression .)
    FLOAT_VAL       reduce using rule 70 (expression -> expression GREATER expression .)
    ID              reduce using rule 70 (expression -> expression GREATER expression .)
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    MULTIPLY        shift and go to state 79
    DIVIDE          shift and go to state 80

  ! PLUS            [ reduce using rule 70 (expression -> expression GREATER expression .) ]
  ! MINUS           [ reduce using rule 70 (expression -> expression GREATER expression .) ]
  ! MULTIPLY        [ reduce using rule 70 (expression -> expression GREATER expression .) ]
  ! DIVIDE          [ reduce using rule 70 (expression -> expression GREATER expression .) ]
  ! LESS            [ shift and go to state 81 ]
  ! GREATER         [ shift and go to state 82 ]
  ! DOUBLEPLUS      [ shift and go to state 83 ]


state 115

    (71) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 71 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 71 (expression -> LPAREN expression RPAREN .)
    MULTIPLY        reduce using rule 71 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 71 (expression -> LPAREN expression RPAREN .)
    LESS            reduce using rule 71 (expression -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 71 (expression -> LPAREN expression RPAREN .)
    DOUBLEPLUS      reduce using rule 71 (expression -> LPAREN expression RPAREN .)
    SEMI            reduce using rule 71 (expression -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 71 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 71 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 71 (expression -> LPAREN expression RPAREN .)
    SQ_RBRACKET     reduce using rule 71 (expression -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 71 (expression -> LPAREN expression RPAREN .)
    INT_VAL         reduce using rule 71 (expression -> LPAREN expression RPAREN .)
    FLOAT_VAL       reduce using rule 71 (expression -> LPAREN expression RPAREN .)
    ID              reduce using rule 71 (expression -> LPAREN expression RPAREN .)


state 116

    (36) else -> ELSE block .

    PRINTF          reduce using rule 36 (else -> ELSE block .)
    ID              reduce using rule 36 (else -> ELSE block .)
    RETURN          reduce using rule 36 (else -> ELSE block .)
    FOR             reduce using rule 36 (else -> ELSE block .)
    WHILE           reduce using rule 36 (else -> ELSE block .)
    INT             reduce using rule 36 (else -> ELSE block .)
    FLOAT           reduce using rule 36 (else -> ELSE block .)
    IF              reduce using rule 36 (else -> ELSE block .)
    MULTIPLY        reduce using rule 36 (else -> ELSE block .)
    RBRACE          reduce using rule 36 (else -> ELSE block .)


state 117

    (34) elif -> ELSE IF LPAREN . expression RPAREN block elif
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression MULTIPLY expression
    (68) expression -> . expression DIVIDE expression
    (69) expression -> . expression LESS expression
    (70) expression -> . expression GREATER expression
    (71) expression -> . LPAREN expression RPAREN
    (72) expression -> . MINUS expression
    (73) expression -> . expression DOUBLEPLUS
    (74) expression -> . id_ptr_or_array
    (75) expression -> . INT_VAL
    (76) expression -> . FLOAT_VAL
    (11) id_ptr_or_array -> . id
    (12) id_ptr_or_array -> . id array_decs
    (13) id_ptr_or_array -> . ptrs id
    (6) id -> . ID
    (16) ptrs -> . MULTIPLY ptrs
    (17) ptrs -> . MULTIPLY

    LPAREN          shift and go to state 52
    MINUS           shift and go to state 51
    INT_VAL         shift and go to state 54
    FLOAT_VAL       shift and go to state 55
    ID              shift and go to state 8
    MULTIPLY        shift and go to state 38

    expression                     shift and go to state 127
    id_ptr_or_array                shift and go to state 53
    id                             shift and go to state 35
    ptrs                           shift and go to state 36

state 118

    (38) for -> FOR LPAREN loop_init_or_empty SEMI . semi_statement_or_empty SEMI semi_statement_or_empty RPAREN block
    (42) semi_statement_or_empty -> . semi_statement
    (43) semi_statement_or_empty -> . expression
    (44) semi_statement_or_empty -> . empty
    (24) semi_statement -> . var_declaration
    (25) semi_statement -> . var_assignment
    (26) semi_statement -> . function_app
    (27) semi_statement -> . return_expr
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression MULTIPLY expression
    (68) expression -> . expression DIVIDE expression
    (69) expression -> . expression LESS expression
    (70) expression -> . expression GREATER expression
    (71) expression -> . LPAREN expression RPAREN
    (72) expression -> . MINUS expression
    (73) expression -> . expression DOUBLEPLUS
    (74) expression -> . id_ptr_or_array
    (75) expression -> . INT_VAL
    (76) expression -> . FLOAT_VAL
    (64) empty -> .
    (48) var_declaration -> . type var_and_assign
    (49) var_assignment -> . id_ptr_or_array EQ expression
    (50) var_assignment -> . id_ptr_or_array EQ function_app
    (56) function_app -> . PRINTF LPAREN STRING print_formats RPAREN
    (57) function_app -> . ID LPAREN arguments RPAREN
    (55) return_expr -> . RETURN expression
    (11) id_ptr_or_array -> . id
    (12) id_ptr_or_array -> . id array_decs
    (13) id_ptr_or_array -> . ptrs id
    (4) type -> . INT
    (5) type -> . FLOAT
    (6) id -> . ID
    (16) ptrs -> . MULTIPLY ptrs
    (17) ptrs -> . MULTIPLY

    LPAREN          shift and go to state 52
    MINUS           shift and go to state 51
    INT_VAL         shift and go to state 54
    FLOAT_VAL       shift and go to state 55
    SEMI            reduce using rule 64 (empty -> .)
    PRINTF          shift and go to state 29
    ID              shift and go to state 30
    RETURN          shift and go to state 31
    INT             shift and go to state 4
    FLOAT           shift and go to state 5
    MULTIPLY        shift and go to state 38

    semi_statement_or_empty        shift and go to state 128
    semi_statement                 shift and go to state 129
    expression                     shift and go to state 130
    empty                          shift and go to state 131
    var_declaration                shift and go to state 20
    var_assignment                 shift and go to state 21
    function_app                   shift and go to state 22
    return_expr                    shift and go to state 23
    id_ptr_or_array                shift and go to state 96
    type                           shift and go to state 27
    id                             shift and go to state 35
    ptrs                           shift and go to state 36

state 119

    (45) loop_init -> type var_assignment .
    (51) var_and_assign -> var_assignment . COMMA var_and_assign
    (52) var_and_assign -> var_assignment .

  ! reduce/reduce conflict for SEMI resolved using rule 45 (loop_init -> type var_assignment .)
    SEMI            reduce using rule 45 (loop_init -> type var_assignment .)
    COMMA           shift and go to state 69

  ! SEMI            [ reduce using rule 52 (var_and_assign -> var_assignment .) ]


state 120

    (49) var_assignment -> id_ptr_or_array . EQ expression
    (50) var_assignment -> id_ptr_or_array . EQ function_app
    (53) var_and_assign -> id_ptr_or_array . COMMA var_and_assign
    (54) var_and_assign -> id_ptr_or_array .

    EQ              shift and go to state 47
    COMMA           shift and go to state 70
    SEMI            reduce using rule 54 (var_and_assign -> id_ptr_or_array .)


state 121

    (47) while -> WHILE LPAREN expression RPAREN . block
    (18) block -> . LBRACE statements RBRACE

    LBRACE          shift and go to state 12

    block                          shift and go to state 132

state 122

    (14) array_decs -> SQ_LBRACKET expression SQ_RBRACKET . array_decs
    (15) array_decs -> SQ_LBRACKET expression SQ_RBRACKET .
    (14) array_decs -> . SQ_LBRACKET expression SQ_RBRACKET array_decs
    (15) array_decs -> . SQ_LBRACKET expression SQ_RBRACKET

    EQ              reduce using rule 15 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET .)
    COMMA           reduce using rule 15 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET .)
    RPAREN          reduce using rule 15 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET .)
    SEMI            reduce using rule 15 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET .)
    RBRACE          reduce using rule 15 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET .)
    PLUS            reduce using rule 15 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET .)
    MINUS           reduce using rule 15 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET .)
    MULTIPLY        reduce using rule 15 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET .)
    DIVIDE          reduce using rule 15 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET .)
    LESS            reduce using rule 15 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET .)
    GREATER         reduce using rule 15 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET .)
    DOUBLEPLUS      reduce using rule 15 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET .)
    SQ_RBRACKET     reduce using rule 15 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET .)
    LPAREN          reduce using rule 15 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET .)
    INT_VAL         reduce using rule 15 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET .)
    FLOAT_VAL       reduce using rule 15 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET .)
    ID              reduce using rule 15 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET .)
    SQ_LBRACKET     shift and go to state 63

    array_decs                     shift and go to state 133

state 123

    (32) if -> IF LPAREN expression RPAREN . block
    (18) block -> . LBRACE statements RBRACE

    LBRACE          shift and go to state 12

    block                          shift and go to state 134

state 124

    (56) function_app -> PRINTF LPAREN STRING print_formats RPAREN .

    SEMI            reduce using rule 56 (function_app -> PRINTF LPAREN STRING print_formats RPAREN .)
    RBRACE          reduce using rule 56 (function_app -> PRINTF LPAREN STRING print_formats RPAREN .)
    COMMA           reduce using rule 56 (function_app -> PRINTF LPAREN STRING print_formats RPAREN .)
    RPAREN          reduce using rule 56 (function_app -> PRINTF LPAREN STRING print_formats RPAREN .)


state 125

    (58) print_formats -> COMMA expression . print_formats
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . MULTIPLY expression
    (68) expression -> expression . DIVIDE expression
    (69) expression -> expression . LESS expression
    (70) expression -> expression . GREATER expression
    (73) expression -> expression . DOUBLEPLUS
    (58) print_formats -> . COMMA expression print_formats
    (59) print_formats -> . expression
    (60) print_formats -> . empty
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression MULTIPLY expression
    (68) expression -> . expression DIVIDE expression
    (69) expression -> . expression LESS expression
    (70) expression -> . expression GREATER expression
    (71) expression -> . LPAREN expression RPAREN
    (72) expression -> . MINUS expression
    (73) expression -> . expression DOUBLEPLUS
    (74) expression -> . id_ptr_or_array
    (75) expression -> . INT_VAL
    (76) expression -> . FLOAT_VAL
    (64) empty -> .
    (11) id_ptr_or_array -> . id
    (12) id_ptr_or_array -> . id array_decs
    (13) id_ptr_or_array -> . ptrs id
    (6) id -> . ID
    (16) ptrs -> . MULTIPLY ptrs
    (17) ptrs -> . MULTIPLY

    PLUS            shift and go to state 77
    MINUS           shift and go to state 136
    MULTIPLY        shift and go to state 137
    DIVIDE          shift and go to state 80
    LESS            shift and go to state 81
    GREATER         shift and go to state 82
    DOUBLEPLUS      shift and go to state 83
    COMMA           shift and go to state 104
    LPAREN          shift and go to state 52
    INT_VAL         shift and go to state 54
    FLOAT_VAL       shift and go to state 55
    RPAREN          reduce using rule 64 (empty -> .)
    ID              shift and go to state 8

    expression                     shift and go to state 105
    print_formats                  shift and go to state 135
    empty                          shift and go to state 106
    id_ptr_or_array                shift and go to state 53
    id                             shift and go to state 35
    ptrs                           shift and go to state 36

state 126

    (61) arguments -> expression COMMA arguments .

    RPAREN          reduce using rule 61 (arguments -> expression COMMA arguments .)


state 127

    (34) elif -> ELSE IF LPAREN expression . RPAREN block elif
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . MULTIPLY expression
    (68) expression -> expression . DIVIDE expression
    (69) expression -> expression . LESS expression
    (70) expression -> expression . GREATER expression
    (73) expression -> expression . DOUBLEPLUS

    RPAREN          shift and go to state 138
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    MULTIPLY        shift and go to state 79
    DIVIDE          shift and go to state 80
    LESS            shift and go to state 81
    GREATER         shift and go to state 82
    DOUBLEPLUS      shift and go to state 83


state 128

    (38) for -> FOR LPAREN loop_init_or_empty SEMI semi_statement_or_empty . SEMI semi_statement_or_empty RPAREN block

    SEMI            shift and go to state 139


state 129

    (42) semi_statement_or_empty -> semi_statement .

    SEMI            reduce using rule 42 (semi_statement_or_empty -> semi_statement .)
    RPAREN          reduce using rule 42 (semi_statement_or_empty -> semi_statement .)


state 130

    (43) semi_statement_or_empty -> expression .
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . MULTIPLY expression
    (68) expression -> expression . DIVIDE expression
    (69) expression -> expression . LESS expression
    (70) expression -> expression . GREATER expression
    (73) expression -> expression . DOUBLEPLUS

    SEMI            reduce using rule 43 (semi_statement_or_empty -> expression .)
    RPAREN          reduce using rule 43 (semi_statement_or_empty -> expression .)
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    MULTIPLY        shift and go to state 79
    DIVIDE          shift and go to state 80
    LESS            shift and go to state 81
    GREATER         shift and go to state 82
    DOUBLEPLUS      shift and go to state 83


state 131

    (44) semi_statement_or_empty -> empty .

    SEMI            reduce using rule 44 (semi_statement_or_empty -> empty .)
    RPAREN          reduce using rule 44 (semi_statement_or_empty -> empty .)


state 132

    (47) while -> WHILE LPAREN expression RPAREN block .

    PRINTF          reduce using rule 47 (while -> WHILE LPAREN expression RPAREN block .)
    ID              reduce using rule 47 (while -> WHILE LPAREN expression RPAREN block .)
    RETURN          reduce using rule 47 (while -> WHILE LPAREN expression RPAREN block .)
    FOR             reduce using rule 47 (while -> WHILE LPAREN expression RPAREN block .)
    WHILE           reduce using rule 47 (while -> WHILE LPAREN expression RPAREN block .)
    INT             reduce using rule 47 (while -> WHILE LPAREN expression RPAREN block .)
    FLOAT           reduce using rule 47 (while -> WHILE LPAREN expression RPAREN block .)
    IF              reduce using rule 47 (while -> WHILE LPAREN expression RPAREN block .)
    MULTIPLY        reduce using rule 47 (while -> WHILE LPAREN expression RPAREN block .)
    RBRACE          reduce using rule 47 (while -> WHILE LPAREN expression RPAREN block .)


state 133

    (14) array_decs -> SQ_LBRACKET expression SQ_RBRACKET array_decs .

    EQ              reduce using rule 14 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET array_decs .)
    COMMA           reduce using rule 14 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET array_decs .)
    RPAREN          reduce using rule 14 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET array_decs .)
    SEMI            reduce using rule 14 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET array_decs .)
    RBRACE          reduce using rule 14 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET array_decs .)
    PLUS            reduce using rule 14 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET array_decs .)
    MINUS           reduce using rule 14 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET array_decs .)
    MULTIPLY        reduce using rule 14 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET array_decs .)
    DIVIDE          reduce using rule 14 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET array_decs .)
    LESS            reduce using rule 14 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET array_decs .)
    GREATER         reduce using rule 14 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET array_decs .)
    DOUBLEPLUS      reduce using rule 14 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET array_decs .)
    SQ_RBRACKET     reduce using rule 14 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET array_decs .)
    LPAREN          reduce using rule 14 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET array_decs .)
    INT_VAL         reduce using rule 14 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET array_decs .)
    FLOAT_VAL       reduce using rule 14 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET array_decs .)
    ID              reduce using rule 14 (array_decs -> SQ_LBRACKET expression SQ_RBRACKET array_decs .)


state 134

    (32) if -> IF LPAREN expression RPAREN block .

    ELSE            reduce using rule 32 (if -> IF LPAREN expression RPAREN block .)
    PRINTF          reduce using rule 32 (if -> IF LPAREN expression RPAREN block .)
    ID              reduce using rule 32 (if -> IF LPAREN expression RPAREN block .)
    RETURN          reduce using rule 32 (if -> IF LPAREN expression RPAREN block .)
    FOR             reduce using rule 32 (if -> IF LPAREN expression RPAREN block .)
    WHILE           reduce using rule 32 (if -> IF LPAREN expression RPAREN block .)
    INT             reduce using rule 32 (if -> IF LPAREN expression RPAREN block .)
    FLOAT           reduce using rule 32 (if -> IF LPAREN expression RPAREN block .)
    IF              reduce using rule 32 (if -> IF LPAREN expression RPAREN block .)
    MULTIPLY        reduce using rule 32 (if -> IF LPAREN expression RPAREN block .)
    RBRACE          reduce using rule 32 (if -> IF LPAREN expression RPAREN block .)


state 135

    (58) print_formats -> COMMA expression print_formats .

    RPAREN          reduce using rule 58 (print_formats -> COMMA expression print_formats .)


state 136

    (66) expression -> expression MINUS . expression
    (72) expression -> MINUS . expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression MULTIPLY expression
    (68) expression -> . expression DIVIDE expression
    (69) expression -> . expression LESS expression
    (70) expression -> . expression GREATER expression
    (71) expression -> . LPAREN expression RPAREN
    (72) expression -> . MINUS expression
    (73) expression -> . expression DOUBLEPLUS
    (74) expression -> . id_ptr_or_array
    (75) expression -> . INT_VAL
    (76) expression -> . FLOAT_VAL
    (11) id_ptr_or_array -> . id
    (12) id_ptr_or_array -> . id array_decs
    (13) id_ptr_or_array -> . ptrs id
    (6) id -> . ID
    (16) ptrs -> . MULTIPLY ptrs
    (17) ptrs -> . MULTIPLY

    LPAREN          shift and go to state 52
    MINUS           shift and go to state 51
    INT_VAL         shift and go to state 54
    FLOAT_VAL       shift and go to state 55
    ID              shift and go to state 8
    MULTIPLY        shift and go to state 38

    expression                     shift and go to state 140
    id_ptr_or_array                shift and go to state 53
    id                             shift and go to state 35
    ptrs                           shift and go to state 36

state 137

    (67) expression -> expression MULTIPLY . expression
    (16) ptrs -> MULTIPLY . ptrs
    (17) ptrs -> MULTIPLY .
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression MULTIPLY expression
    (68) expression -> . expression DIVIDE expression
    (69) expression -> . expression LESS expression
    (70) expression -> . expression GREATER expression
    (71) expression -> . LPAREN expression RPAREN
    (72) expression -> . MINUS expression
    (73) expression -> . expression DOUBLEPLUS
    (74) expression -> . id_ptr_or_array
    (75) expression -> . INT_VAL
    (76) expression -> . FLOAT_VAL
    (16) ptrs -> . MULTIPLY ptrs
    (17) ptrs -> . MULTIPLY
    (11) id_ptr_or_array -> . id
    (12) id_ptr_or_array -> . id array_decs
    (13) id_ptr_or_array -> . ptrs id
    (6) id -> . ID

    ID              reduce using rule 17 (ptrs -> MULTIPLY .)
    LPAREN          shift and go to state 52
    MINUS           shift and go to state 51
    INT_VAL         shift and go to state 54
    FLOAT_VAL       shift and go to state 55
    MULTIPLY        shift and go to state 38

  ! ID              [ shift and go to state 8 ]

    expression                     shift and go to state 111
    ptrs                           shift and go to state 141
    id_ptr_or_array                shift and go to state 53
    id                             shift and go to state 35

state 138

    (34) elif -> ELSE IF LPAREN expression RPAREN . block elif
    (18) block -> . LBRACE statements RBRACE

    LBRACE          shift and go to state 12

    block                          shift and go to state 142

state 139

    (38) for -> FOR LPAREN loop_init_or_empty SEMI semi_statement_or_empty SEMI . semi_statement_or_empty RPAREN block
    (42) semi_statement_or_empty -> . semi_statement
    (43) semi_statement_or_empty -> . expression
    (44) semi_statement_or_empty -> . empty
    (24) semi_statement -> . var_declaration
    (25) semi_statement -> . var_assignment
    (26) semi_statement -> . function_app
    (27) semi_statement -> . return_expr
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression MULTIPLY expression
    (68) expression -> . expression DIVIDE expression
    (69) expression -> . expression LESS expression
    (70) expression -> . expression GREATER expression
    (71) expression -> . LPAREN expression RPAREN
    (72) expression -> . MINUS expression
    (73) expression -> . expression DOUBLEPLUS
    (74) expression -> . id_ptr_or_array
    (75) expression -> . INT_VAL
    (76) expression -> . FLOAT_VAL
    (64) empty -> .
    (48) var_declaration -> . type var_and_assign
    (49) var_assignment -> . id_ptr_or_array EQ expression
    (50) var_assignment -> . id_ptr_or_array EQ function_app
    (56) function_app -> . PRINTF LPAREN STRING print_formats RPAREN
    (57) function_app -> . ID LPAREN arguments RPAREN
    (55) return_expr -> . RETURN expression
    (11) id_ptr_or_array -> . id
    (12) id_ptr_or_array -> . id array_decs
    (13) id_ptr_or_array -> . ptrs id
    (4) type -> . INT
    (5) type -> . FLOAT
    (6) id -> . ID
    (16) ptrs -> . MULTIPLY ptrs
    (17) ptrs -> . MULTIPLY

    LPAREN          shift and go to state 52
    MINUS           shift and go to state 51
    INT_VAL         shift and go to state 54
    FLOAT_VAL       shift and go to state 55
    RPAREN          reduce using rule 64 (empty -> .)
    PRINTF          shift and go to state 29
    ID              shift and go to state 30
    RETURN          shift and go to state 31
    INT             shift and go to state 4
    FLOAT           shift and go to state 5
    MULTIPLY        shift and go to state 38

    semi_statement_or_empty        shift and go to state 143
    semi_statement                 shift and go to state 129
    expression                     shift and go to state 130
    empty                          shift and go to state 131
    var_declaration                shift and go to state 20
    var_assignment                 shift and go to state 21
    function_app                   shift and go to state 22
    return_expr                    shift and go to state 23
    id_ptr_or_array                shift and go to state 96
    type                           shift and go to state 27
    id                             shift and go to state 35
    ptrs                           shift and go to state 36

state 140

    (66) expression -> expression MINUS expression .
    (72) expression -> MINUS expression .
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . MULTIPLY expression
    (68) expression -> expression . DIVIDE expression
    (69) expression -> expression . LESS expression
    (70) expression -> expression . GREATER expression
    (73) expression -> expression . DOUBLEPLUS

  ! reduce/reduce conflict for PLUS resolved using rule 66 (expression -> expression MINUS expression .)
  ! reduce/reduce conflict for MINUS resolved using rule 66 (expression -> expression MINUS expression .)
  ! reduce/reduce conflict for MULTIPLY resolved using rule 66 (expression -> expression MINUS expression .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 66 (expression -> expression MINUS expression .)
  ! reduce/reduce conflict for LESS resolved using rule 66 (expression -> expression MINUS expression .)
  ! reduce/reduce conflict for GREATER resolved using rule 66 (expression -> expression MINUS expression .)
  ! reduce/reduce conflict for DOUBLEPLUS resolved using rule 66 (expression -> expression MINUS expression .)
  ! reduce/reduce conflict for RPAREN resolved using rule 66 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 66 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 66 (expression -> expression MINUS expression .)
    LESS            reduce using rule 66 (expression -> expression MINUS expression .)
    GREATER         reduce using rule 66 (expression -> expression MINUS expression .)
    DOUBLEPLUS      reduce using rule 66 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 66 (expression -> expression MINUS expression .)
    LPAREN          reduce using rule 66 (expression -> expression MINUS expression .)
    INT_VAL         reduce using rule 66 (expression -> expression MINUS expression .)
    FLOAT_VAL       reduce using rule 66 (expression -> expression MINUS expression .)
    ID              reduce using rule 66 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 66 (expression -> expression MINUS expression .)
    MULTIPLY        shift and go to state 79
    DIVIDE          shift and go to state 80

  ! MULTIPLY        [ reduce using rule 66 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 66 (expression -> expression MINUS expression .) ]
  ! PLUS            [ reduce using rule 72 (expression -> MINUS expression .) ]
  ! MINUS           [ reduce using rule 72 (expression -> MINUS expression .) ]
  ! MULTIPLY        [ reduce using rule 72 (expression -> MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 72 (expression -> MINUS expression .) ]
  ! LESS            [ reduce using rule 72 (expression -> MINUS expression .) ]
  ! GREATER         [ reduce using rule 72 (expression -> MINUS expression .) ]
  ! DOUBLEPLUS      [ reduce using rule 72 (expression -> MINUS expression .) ]
  ! RPAREN          [ reduce using rule 72 (expression -> MINUS expression .) ]
  ! PLUS            [ shift and go to state 77 ]
  ! MINUS           [ shift and go to state 78 ]
  ! LESS            [ shift and go to state 81 ]
  ! GREATER         [ shift and go to state 82 ]
  ! DOUBLEPLUS      [ shift and go to state 83 ]


state 141

    (16) ptrs -> MULTIPLY ptrs .
    (13) id_ptr_or_array -> ptrs . id
    (6) id -> . ID

    ID              reduce using rule 16 (ptrs -> MULTIPLY ptrs .)

  ! ID              [ shift and go to state 8 ]

    id                             shift and go to state 64

state 142

    (34) elif -> ELSE IF LPAREN expression RPAREN block . elif
    (34) elif -> . ELSE IF LPAREN expression RPAREN block elif
    (35) elif -> . empty
    (64) empty -> .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 58
    PRINTF          reduce using rule 64 (empty -> .)
    ID              reduce using rule 64 (empty -> .)
    RETURN          reduce using rule 64 (empty -> .)
    FOR             reduce using rule 64 (empty -> .)
    WHILE           reduce using rule 64 (empty -> .)
    INT             reduce using rule 64 (empty -> .)
    FLOAT           reduce using rule 64 (empty -> .)
    IF              reduce using rule 64 (empty -> .)
    MULTIPLY        reduce using rule 64 (empty -> .)
    RBRACE          reduce using rule 64 (empty -> .)

  ! ELSE            [ reduce using rule 64 (empty -> .) ]

    elif                           shift and go to state 144
    empty                          shift and go to state 59

state 143

    (38) for -> FOR LPAREN loop_init_or_empty SEMI semi_statement_or_empty SEMI semi_statement_or_empty . RPAREN block

    RPAREN          shift and go to state 145


state 144

    (34) elif -> ELSE IF LPAREN expression RPAREN block elif .

    ELSE            reduce using rule 34 (elif -> ELSE IF LPAREN expression RPAREN block elif .)
    PRINTF          reduce using rule 34 (elif -> ELSE IF LPAREN expression RPAREN block elif .)
    ID              reduce using rule 34 (elif -> ELSE IF LPAREN expression RPAREN block elif .)
    RETURN          reduce using rule 34 (elif -> ELSE IF LPAREN expression RPAREN block elif .)
    FOR             reduce using rule 34 (elif -> ELSE IF LPAREN expression RPAREN block elif .)
    WHILE           reduce using rule 34 (elif -> ELSE IF LPAREN expression RPAREN block elif .)
    INT             reduce using rule 34 (elif -> ELSE IF LPAREN expression RPAREN block elif .)
    FLOAT           reduce using rule 34 (elif -> ELSE IF LPAREN expression RPAREN block elif .)
    IF              reduce using rule 34 (elif -> ELSE IF LPAREN expression RPAREN block elif .)
    MULTIPLY        reduce using rule 34 (elif -> ELSE IF LPAREN expression RPAREN block elif .)
    RBRACE          reduce using rule 34 (elif -> ELSE IF LPAREN expression RPAREN block elif .)


state 145

    (38) for -> FOR LPAREN loop_init_or_empty SEMI semi_statement_or_empty SEMI semi_statement_or_empty RPAREN . block
    (18) block -> . LBRACE statements RBRACE

    LBRACE          shift and go to state 12

    block                          shift and go to state 146

state 146

    (38) for -> FOR LPAREN loop_init_or_empty SEMI semi_statement_or_empty SEMI semi_statement_or_empty RPAREN block .

    PRINTF          reduce using rule 38 (for -> FOR LPAREN loop_init_or_empty SEMI semi_statement_or_empty SEMI semi_statement_or_empty RPAREN block .)
    ID              reduce using rule 38 (for -> FOR LPAREN loop_init_or_empty SEMI semi_statement_or_empty SEMI semi_statement_or_empty RPAREN block .)
    RETURN          reduce using rule 38 (for -> FOR LPAREN loop_init_or_empty SEMI semi_statement_or_empty SEMI semi_statement_or_empty RPAREN block .)
    FOR             reduce using rule 38 (for -> FOR LPAREN loop_init_or_empty SEMI semi_statement_or_empty SEMI semi_statement_or_empty RPAREN block .)
    WHILE           reduce using rule 38 (for -> FOR LPAREN loop_init_or_empty SEMI semi_statement_or_empty SEMI semi_statement_or_empty RPAREN block .)
    INT             reduce using rule 38 (for -> FOR LPAREN loop_init_or_empty SEMI semi_statement_or_empty SEMI semi_statement_or_empty RPAREN block .)
    FLOAT           reduce using rule 38 (for -> FOR LPAREN loop_init_or_empty SEMI semi_statement_or_empty SEMI semi_statement_or_empty RPAREN block .)
    IF              reduce using rule 38 (for -> FOR LPAREN loop_init_or_empty SEMI semi_statement_or_empty SEMI semi_statement_or_empty RPAREN block .)
    MULTIPLY        reduce using rule 38 (for -> FOR LPAREN loop_init_or_empty SEMI semi_statement_or_empty SEMI semi_statement_or_empty RPAREN block .)
    RBRACE          reduce using rule 38 (for -> FOR LPAREN loop_init_or_empty SEMI semi_statement_or_empty SEMI semi_statement_or_empty RPAREN block .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ELSE in state 32 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 142 resolved as shift
WARNING: reduce/reduce conflict in state 18 resolved using rule (statements -> non_semi_statement)
WARNING: rejected rule (empty -> <empty>) in state 18
WARNING: reduce/reduce conflict in state 119 resolved using rule (loop_init -> type var_assignment)
WARNING: rejected rule (var_and_assign -> var_assignment) in state 119
WARNING: reduce/reduce conflict in state 140 resolved using rule (expression -> expression MINUS expression)
WARNING: rejected rule (expression -> MINUS expression) in state 140
